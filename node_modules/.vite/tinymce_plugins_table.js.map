{
  "version": 3,
  "sources": ["../tinymce/plugins/table/plugin.js", "../tinymce/plugins/table/index.js", "dep:tinymce_plugins_table"],
  "sourcesContent": ["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.0 (2021-10-11)\n */\n(function () {\n    'use strict';\n\n    var typeOf = function (x) {\n      var t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      } else if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    var isType$1 = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isSimpleType = function (type) {\n      return function (value) {\n        return typeof value === type;\n      };\n    };\n    var eq$2 = function (t) {\n      return function (a) {\n        return t === a;\n      };\n    };\n    var isString = isType$1('string');\n    var isObject = isType$1('object');\n    var isArray = isType$1('array');\n    var isNull = eq$2(null);\n    var isBoolean = isSimpleType('boolean');\n    var isUndefined = eq$2(undefined);\n    var isNullable = function (a) {\n      return a === null || a === undefined;\n    };\n    var isNonNullable = function (a) {\n      return !isNullable(a);\n    };\n    var isFunction = isSimpleType('function');\n    var isNumber = isSimpleType('number');\n\n    var noop = function () {\n    };\n    var compose = function (fa, fb) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return fa(fb.apply(null, args));\n      };\n    };\n    var compose1 = function (fbc, fab) {\n      return function (a) {\n        return fbc(fab(a));\n      };\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    var tripleEquals = function (a, b) {\n      return a === b;\n    };\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    var not = function (f) {\n      return function (t) {\n        return !f(t);\n      };\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none$2 = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = identity;\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none$2,\n        each: noop,\n        bind: none$2,\n        exists: never,\n        forall: always,\n        filter: function () {\n          return none$2();\n        },\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from$1 = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none$2,\n      from: from$1\n    };\n\n    var nativeSlice = Array.prototype.slice;\n    var nativeIndexOf = Array.prototype.indexOf;\n    var nativePush = Array.prototype.push;\n    var rawIndexOf = function (ts, t) {\n      return nativeIndexOf.call(ts, t);\n    };\n    var contains$2 = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var range$1 = function (num, f) {\n      var r = [];\n      for (var i = 0; i < num; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    var map$1 = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each$2 = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var eachr = function (xs, f) {\n      for (var i = xs.length - 1; i >= 0; i--) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var partition = function (xs, pred) {\n      var pass = [];\n      var fail = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        var arr = pred(x, i) ? pass : fail;\n        arr.push(x);\n      }\n      return {\n        pass: pass,\n        fail: fail\n      };\n    };\n    var filter$2 = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldr = function (xs, f, acc) {\n      eachr(xs, function (x, i) {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    var foldl = function (xs, f, acc) {\n      each$2(xs, function (x, i) {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    var findUntil = function (xs, pred, until) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    var find$1 = function (xs, pred) {\n      return findUntil(xs, pred, never);\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(i);\n        }\n      }\n      return Optional.none();\n    };\n    var flatten$1 = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind$2 = function (xs, f) {\n      return flatten$1(map$1(xs, f));\n    };\n    var forall = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        var x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var reverse = function (xs) {\n      var r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var mapToObject = function (xs, f) {\n      var r = {};\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        r[String(x)] = f(x, i);\n      }\n      return r;\n    };\n    var pure = function (x) {\n      return [x];\n    };\n    var sort$1 = function (xs, comparator) {\n      var copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n    var get$d = function (xs, i) {\n      return i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    };\n    var head = function (xs) {\n      return get$d(xs, 0);\n    };\n    var last$2 = function (xs) {\n      return get$d(xs, xs.length - 1);\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n    function __spreadArray(to, from, pack) {\n      if (pack || arguments.length === 2)\n        for (var i = 0, l = from.length, ar; i < l; i++) {\n          if (ar || !(i in from)) {\n            if (!ar)\n              ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n          }\n        }\n      return to.concat(ar || Array.prototype.slice.call(from));\n    }\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var DeviceType = function (os, browser, userAgent, mediaMatch) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isMobile = os.isiOS() || os.isAndroid();\n      var isTouch = isMobile || mediaMatch('(pointer:coarse)');\n      var isTablet = isiPad || !isiPhone && isMobile && mediaMatch('(min-device-width:768px)');\n      var isPhone = isiPhone || isMobile && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      var isDesktop = !isPhone && !isTablet && !iOSwebview;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview),\n        isDesktop: constant(isDesktop)\n      };\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$2(group(1), group(2));\n    };\n    var detect$6 = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown$2();\n      }\n      return find(versionRegexes, cleanedAgent);\n    };\n    var unknown$2 = function () {\n      return nu$2(0, 0);\n    };\n    var nu$2 = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu$2,\n      detect: detect$6,\n      unknown: unknown$2\n    };\n\n    var detectBrowser$1 = function (browsers, userAgentData) {\n      return findMap(userAgentData.brands, function (uaBrand) {\n        var lcBrand = uaBrand.brand.toLowerCase();\n        return find$1(browsers, function (browser) {\n          var _a;\n          return lcBrand === ((_a = browser.brand) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n        }).map(function (info) {\n          return {\n            current: info.name,\n            version: Version.nu(parseInt(uaBrand.version, 10), 0)\n          };\n        });\n      });\n    };\n\n    var detect$5 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find$1(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$5(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$5(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n\n    var removeFromStart = function (str, numChars) {\n      return str.substring(numChars);\n    };\n\n    var checkRange = function (str, substr, start) {\n      return substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    };\n    var removeLeading = function (str, prefix) {\n      return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n    };\n    var contains$1 = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n    var startsWith = function (str, prefix) {\n      return checkRange(str, prefix, 0);\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var blank = function (r) {\n      return function (s) {\n        return s.replace(r, '');\n      };\n    };\n    var trim = blank(/^\\s+|\\s+$/g);\n    var isNotEmpty = function (s) {\n      return s.length > 0;\n    };\n    var isEmpty$1 = function (s) {\n      return !isNotEmpty(s);\n    };\n    var toFloat = function (value) {\n      var num = parseFloat(value);\n      return isNaN(num) ? Optional.none() : Optional.some(num);\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains$1(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        brand: 'Chromium',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('mac os x'),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      },\n      {\n        name: 'ChromeOS',\n        search: checkContains('cros'),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      var isBrowser = function (name) {\n        return function () {\n          return current === name;\n        };\n      };\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge),\n        isChrome: isBrowser(chrome),\n        isIE: isBrowser(ie),\n        isOpera: isBrowser(opera),\n        isFirefox: isBrowser(firefox),\n        isSafari: isBrowser(safari)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var chromeos = 'ChromeOS';\n    var unknown = function () {\n      return nu({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu = function (info) {\n      var current = info.current;\n      var version = info.version;\n      var isOS = function (name) {\n        return function () {\n          return current === name;\n        };\n      };\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows),\n        isiOS: isOS(ios),\n        isAndroid: isOS(android),\n        isOSX: isOS(osx),\n        isLinux: isOS(linux),\n        isSolaris: isOS(solaris),\n        isFreeBSD: isOS(freebsd),\n        isChromeOS: isOS(chromeos)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown,\n      nu: nu,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd),\n      chromeos: constant(chromeos)\n    };\n\n    var detect$4 = function (userAgent, userAgentDataOpt, mediaMatch) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = userAgentDataOpt.bind(function (userAgentData) {\n        return detectBrowser$1(browsers, userAgentData);\n      }).orThunk(function () {\n        return detectBrowser(browsers, userAgent);\n      }).fold(Browser.unknown, Browser.nu);\n      var os = detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent, mediaMatch);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$4 };\n\n    var mediaMatch = function (query) {\n      return window.matchMedia(query).matches;\n    };\n    var platform = cached(function () {\n      return PlatformDetection.detect(navigator.userAgent, Optional.from(navigator.userAgentData), mediaMatch);\n    });\n    var detect$3 = function () {\n      return platform();\n    };\n\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, Node.DOCUMENT_POSITION_CONTAINED_BY);\n    };\n\n    var COMMENT = 8;\n    var DOCUMENT = 9;\n    var DOCUMENT_FRAGMENT = 11;\n    var ELEMENT = 1;\n    var TEXT = 3;\n\n    var fromHtml$1 = function (html, scope) {\n      var doc = scope || document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom$1(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || document;\n      var node = doc.createElement(tag);\n      return fromDom$1(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || document;\n      var node = doc.createTextNode(text);\n      return fromDom$1(node);\n    };\n    var fromDom$1 = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    var fromPoint$1 = function (docElm, x, y) {\n      return Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom$1);\n    };\n    var SugarElement = {\n      fromHtml: fromHtml$1,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom$1,\n      fromPoint: fromPoint$1\n    };\n\n    var is$2 = function (element, selector) {\n      var dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        var elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT || dom.childElementCount === 0;\n    };\n    var all$1 = function (selector, scope) {\n      var base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? [] : map$1(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? Optional.none() : Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);\n    };\n\n    var eq$1 = function (e1, e2) {\n      return e1.dom === e2.dom;\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom;\n      var d2 = e2.dom;\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return documentPositionContainedBy(e1.dom, e2.dom);\n    };\n    var contains = function (e1, e2) {\n      return detect$3().browser.isIE() ? ieContains(e1, e2) : regularContains(e1, e2);\n    };\n    var is$1 = is$2;\n\n    var keys = Object.keys;\n    var hasOwnProperty = Object.hasOwnProperty;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n    var map = function (obj, f) {\n      return tupleMap(obj, function (x, i) {\n        return {\n          k: i,\n          v: f(x, i)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each$1(obj, function (x, i) {\n        var tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    var objAcc = function (r) {\n      return function (x, i) {\n        r[i] = x;\n      };\n    };\n    var internalFilter = function (obj, pred, onTrue, onFalse) {\n      var r = {};\n      each$1(obj, function (x, i) {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n      return r;\n    };\n    var filter$1 = function (obj, pred) {\n      var t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    var mapToArray = function (obj, f) {\n      var r = [];\n      each$1(obj, function (value, name) {\n        r.push(f(value, name));\n      });\n      return r;\n    };\n    var values = function (obj) {\n      return mapToArray(obj, identity);\n    };\n    var size = function (obj) {\n      return keys(obj).length;\n    };\n    var get$c = function (obj, key) {\n      return has$1(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    var has$1 = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n    var hasNonNullableKey = function (obj, key) {\n      return has$1(obj, key) && obj[key] !== undefined && obj[key] !== null;\n    };\n    var isEmpty = function (r) {\n      for (var x in r) {\n        if (hasOwnProperty.call(r, x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    var validSectionList = [\n      'tfoot',\n      'thead',\n      'tbody',\n      'colgroup'\n    ];\n    var isValidSection = function (parentName) {\n      return contains$2(validSectionList, parentName);\n    };\n    var grid = function (rows, columns) {\n      return {\n        rows: rows,\n        columns: columns\n      };\n    };\n    var address = function (row, column) {\n      return {\n        row: row,\n        column: column\n      };\n    };\n    var detail = function (element, rowspan, colspan) {\n      return {\n        element: element,\n        rowspan: rowspan,\n        colspan: colspan\n      };\n    };\n    var detailnew = function (element, rowspan, colspan, isNew) {\n      return {\n        element: element,\n        rowspan: rowspan,\n        colspan: colspan,\n        isNew: isNew\n      };\n    };\n    var extended = function (element, rowspan, colspan, row, column, isLocked) {\n      return {\n        element: element,\n        rowspan: rowspan,\n        colspan: colspan,\n        row: row,\n        column: column,\n        isLocked: isLocked\n      };\n    };\n    var rowdetail = function (element, cells, section) {\n      return {\n        element: element,\n        cells: cells,\n        section: section\n      };\n    };\n    var rowdetailnew = function (element, cells, section, isNew) {\n      return {\n        element: element,\n        cells: cells,\n        section: section,\n        isNew: isNew\n      };\n    };\n    var elementnew = function (element, isNew, isLocked) {\n      return {\n        element: element,\n        isNew: isNew,\n        isLocked: isLocked\n      };\n    };\n    var rowcells = function (element, cells, section, isNew) {\n      return {\n        element: element,\n        cells: cells,\n        section: section,\n        isNew: isNew\n      };\n    };\n    var bounds = function (startRow, startCol, finishRow, finishCol) {\n      return {\n        startRow: startRow,\n        startCol: startCol,\n        finishRow: finishRow,\n        finishCol: finishCol\n      };\n    };\n    var columnext = function (element, colspan, column) {\n      return {\n        element: element,\n        colspan: colspan,\n        column: column\n      };\n    };\n    var colgroup = function (element, columns) {\n      return {\n        element: element,\n        columns: columns\n      };\n    };\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var name = function (element) {\n      var r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    var type$1 = function (element) {\n      return element.dom.nodeType;\n    };\n    var isType = function (t) {\n      return function (element) {\n        return type$1(element) === t;\n      };\n    };\n    var isComment = function (element) {\n      return type$1(element) === COMMENT || name(element) === '#comment';\n    };\n    var isElement = isType(ELEMENT);\n    var isText = isType(TEXT);\n    var isDocument = isType(DOCUMENT);\n    var isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n    var isTag = function (tag) {\n      return function (e) {\n        return isElement(e) && name(e) === tag;\n      };\n    };\n\n    var owner = function (element) {\n      return SugarElement.fromDom(element.dom.ownerDocument);\n    };\n    var documentOrOwner = function (dos) {\n      return isDocument(dos) ? dos : owner(dos);\n    };\n    var defaultView = function (element) {\n      return SugarElement.fromDom(documentOrOwner(element).dom.defaultView);\n    };\n    var parent = function (element) {\n      return Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    };\n    var parentElement = function (element) {\n      return Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    };\n    var parents = function (element, isRoot) {\n      var stop = isFunction(isRoot) ? isRoot : never;\n      var dom = element.dom;\n      var ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        var rawParent = dom.parentNode;\n        var p = SugarElement.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    var prevSibling = function (element) {\n      return Optional.from(element.dom.previousSibling).map(SugarElement.fromDom);\n    };\n    var nextSibling = function (element) {\n      return Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    };\n    var children$3 = function (element) {\n      return map$1(element.dom.childNodes, SugarElement.fromDom);\n    };\n    var child$3 = function (element, index) {\n      var cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    var firstChild = function (element) {\n      return child$3(element, 0);\n    };\n\n    var isShadowRoot = function (dos) {\n      return isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    };\n    var supported = isFunction(Element.prototype.attachShadow) && isFunction(Node.prototype.getRootNode);\n    var isSupported$1 = constant(supported);\n    var getRootNode = supported ? function (e) {\n      return SugarElement.fromDom(e.dom.getRootNode());\n    } : documentOrOwner;\n    var getShadowRoot = function (e) {\n      var r = getRootNode(e);\n      return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    var getShadowHost = function (e) {\n      return SugarElement.fromDom(e.dom.host);\n    };\n    var getOriginalEventTarget = function (event) {\n      if (isSupported$1() && isNonNullable(event.target)) {\n        var el = SugarElement.fromDom(event.target);\n        if (isElement(el) && isOpenShadowHost(el)) {\n          if (event.composed && event.composedPath) {\n            var composedPath = event.composedPath();\n            if (composedPath) {\n              return head(composedPath);\n            }\n          }\n        }\n      }\n      return Optional.from(event.target);\n    };\n    var isOpenShadowHost = function (element) {\n      return isNonNullable(element.dom.shadowRoot);\n    };\n\n    var inBody = function (element) {\n      var dom = isText(element) ? element.dom.parentNode : element.dom;\n      if (dom === undefined || dom === null || dom.ownerDocument === null) {\n        return false;\n      }\n      var doc = dom.ownerDocument;\n      return getShadowRoot(SugarElement.fromDom(dom)).fold(function () {\n        return doc.body.contains(dom);\n      }, compose1(inBody, getShadowHost));\n    };\n    var body$1 = function () {\n      return getBody$1(SugarElement.fromDom(document));\n    };\n    var getBody$1 = function (doc) {\n      var b = doc.dom.body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return SugarElement.fromDom(b);\n    };\n\n    var ancestors$4 = function (scope, predicate, isRoot) {\n      return filter$2(parents(scope, isRoot), predicate);\n    };\n    var children$2 = function (scope, predicate) {\n      return filter$2(children$3(scope), predicate);\n    };\n    var descendants$1 = function (scope, predicate) {\n      var result = [];\n      each$2(children$3(scope), function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants$1(x, predicate));\n      });\n      return result;\n    };\n\n    var ancestors$3 = function (scope, selector, isRoot) {\n      return ancestors$4(scope, function (e) {\n        return is$2(e, selector);\n      }, isRoot);\n    };\n    var children$1 = function (scope, selector) {\n      return children$2(scope, function (e) {\n        return is$2(e, selector);\n      });\n    };\n    var descendants = function (scope, selector) {\n      return all$1(selector, scope);\n    };\n\n    function ClosestOrAncestor (is, ancestor, scope, a, isRoot) {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    }\n\n    var ancestor$2 = function (scope, predicate, isRoot) {\n      var element = scope.dom;\n      var stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        var el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    var closest$2 = function (scope, predicate, isRoot) {\n      var is = function (s, test) {\n        return test(s);\n      };\n      return ClosestOrAncestor(is, ancestor$2, scope, predicate, isRoot);\n    };\n    var child$2 = function (scope, predicate) {\n      var pred = function (node) {\n        return predicate(SugarElement.fromDom(node));\n      };\n      var result = find$1(scope.dom.childNodes, pred);\n      return result.map(SugarElement.fromDom);\n    };\n    var descendant$1 = function (scope, predicate) {\n      var descend = function (node) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          var child_1 = SugarElement.fromDom(node.childNodes[i]);\n          if (predicate(child_1)) {\n            return Optional.some(child_1);\n          }\n          var res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope.dom);\n    };\n\n    var ancestor$1 = function (scope, selector, isRoot) {\n      return ancestor$2(scope, function (e) {\n        return is$2(e, selector);\n      }, isRoot);\n    };\n    var child$1 = function (scope, selector) {\n      return child$2(scope, function (e) {\n        return is$2(e, selector);\n      });\n    };\n    var descendant = function (scope, selector) {\n      return one(selector, scope);\n    };\n    var closest$1 = function (scope, selector, isRoot) {\n      var is = function (element, selector) {\n        return is$2(element, selector);\n      };\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var set$2 = function (element, key, value) {\n      rawSet(element.dom, key, value);\n    };\n    var setAll$1 = function (element, attrs) {\n      var dom = element.dom;\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var setOptions = function (element, attrs) {\n      each$1(attrs, function (v, k) {\n        v.fold(function () {\n          remove$7(element, k);\n        }, function (value) {\n          rawSet(element.dom, k, value);\n        });\n      });\n    };\n    var get$b = function (element, key) {\n      var v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    var getOpt = function (element, key) {\n      return Optional.from(get$b(element, key));\n    };\n    var remove$7 = function (element, key) {\n      element.dom.removeAttribute(key);\n    };\n    var clone$2 = function (element) {\n      return foldl(element.dom.attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var is = function (lhs, rhs, comparator) {\n      if (comparator === void 0) {\n        comparator = tripleEquals;\n      }\n      return lhs.exists(function (left) {\n        return comparator(left, rhs);\n      });\n    };\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var lift2 = function (oa, ob, f) {\n      return oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n    };\n    var bindFrom = function (a, f) {\n      return a !== undefined && a !== null ? f(a) : Optional.none();\n    };\n    var flatten = function (oot) {\n      return oot.bind(identity);\n    };\n    var someIf = function (b, a) {\n      return b ? Optional.some(a) : Optional.none();\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var internalRemove = function (dom, property) {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    var set$1 = function (element, property, value) {\n      var dom = element.dom;\n      internalSet(dom, property, value);\n    };\n    var setAll = function (element, css) {\n      var dom = element.dom;\n      each$1(css, function (v, k) {\n        internalSet(dom, k, v);\n      });\n    };\n    var get$a = function (element, property) {\n      var dom = element.dom;\n      var styles = window.getComputedStyle(dom);\n      var r = styles.getPropertyValue(property);\n      return r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n    };\n    var getUnsafeProperty = function (dom, property) {\n      return isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    };\n    var getRaw$2 = function (element, property) {\n      var dom = element.dom;\n      var raw = getUnsafeProperty(dom, property);\n      return Optional.from(raw).filter(function (r) {\n        return r.length > 0;\n      });\n    };\n    var remove$6 = function (element, property) {\n      var dom = element.dom;\n      internalRemove(dom, property);\n      if (is(getOpt(element, 'style').map(trim), '')) {\n        remove$7(element, 'style');\n      }\n    };\n    var copy$2 = function (source, target) {\n      var sourceDom = source.dom;\n      var targetDom = target.dom;\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    var getAttrValue = function (cell, name, fallback) {\n      if (fallback === void 0) {\n        fallback = 0;\n      }\n      return getOpt(cell, name).map(function (value) {\n        return parseInt(value, 10);\n      }).getOr(fallback);\n    };\n    var getSpan = function (cell, type) {\n      return getAttrValue(cell, type, 1);\n    };\n    var hasColspan = function (cellOrCol) {\n      if (isTag('col')(cellOrCol)) {\n        return getAttrValue(cellOrCol, 'span', 1) > 1;\n      } else {\n        return getSpan(cellOrCol, 'colspan') > 1;\n      }\n    };\n    var hasRowspan = function (cell) {\n      return getSpan(cell, 'rowspan') > 1;\n    };\n    var getCssValue = function (element, property) {\n      return parseInt(get$a(element, property), 10);\n    };\n    var minWidth = constant(10);\n    var minHeight = constant(10);\n\n    var firstLayer = function (scope, selector) {\n      return filterFirstLayer(scope, selector, always);\n    };\n    var filterFirstLayer = function (scope, selector, predicate) {\n      return bind$2(children$3(scope), function (x) {\n        if (is$2(x, selector)) {\n          return predicate(x) ? [x] : [];\n        } else {\n          return filterFirstLayer(x, selector, predicate);\n        }\n      });\n    };\n\n    var lookup = function (tags, element, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      if (isRoot(element)) {\n        return Optional.none();\n      }\n      if (contains$2(tags, name(element))) {\n        return Optional.some(element);\n      }\n      var isRootOrUpperTable = function (elm) {\n        return is$2(elm, 'table') || isRoot(elm);\n      };\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    var cell = function (element, isRoot) {\n      return lookup([\n        'td',\n        'th'\n      ], element, isRoot);\n    };\n    var cells$1 = function (ancestor) {\n      return firstLayer(ancestor, 'th,td');\n    };\n    var columns$1 = function (ancestor) {\n      if (is$2(ancestor, 'colgroup')) {\n        return children$1(ancestor, 'col');\n      } else {\n        return bind$2(columnGroups(ancestor), function (columnGroup) {\n          return children$1(columnGroup, 'col');\n        });\n      }\n    };\n    var table = function (element, isRoot) {\n      return closest$1(element, 'table', isRoot);\n    };\n    var rows$1 = function (ancestor) {\n      return firstLayer(ancestor, 'tr');\n    };\n    var columnGroups = function (ancestor) {\n      return table(ancestor).fold(constant([]), function (table) {\n        return children$1(table, 'colgroup');\n      });\n    };\n\n    var fromRowsOrColGroups = function (elems, getSection) {\n      return map$1(elems, function (row) {\n        if (name(row) === 'colgroup') {\n          var cells = map$1(columns$1(row), function (column) {\n            var colspan = getAttrValue(column, 'span', 1);\n            return detail(column, 1, colspan);\n          });\n          return rowdetail(row, cells, 'colgroup');\n        } else {\n          var cells = map$1(cells$1(row), function (cell) {\n            var rowspan = getAttrValue(cell, 'rowspan', 1);\n            var colspan = getAttrValue(cell, 'colspan', 1);\n            return detail(cell, rowspan, colspan);\n          });\n          return rowdetail(row, cells, getSection(row));\n        }\n      });\n    };\n    var getParentSection = function (group) {\n      return parent(group).map(function (parent) {\n        var parentName = name(parent);\n        return isValidSection(parentName) ? parentName : 'tbody';\n      }).getOr('tbody');\n    };\n    var fromTable$1 = function (table) {\n      var rows = rows$1(table);\n      var columnGroups$1 = columnGroups(table);\n      var elems = __spreadArray(__spreadArray([], columnGroups$1, true), rows, true);\n      return fromRowsOrColGroups(elems, getParentSection);\n    };\n    var fromPastedRows = function (elems, section) {\n      return fromRowsOrColGroups(elems, function () {\n        return section;\n      });\n    };\n\n    var addCells = function (gridRow, index, cells) {\n      var existingCells = gridRow.cells;\n      var before = existingCells.slice(0, index);\n      var after = existingCells.slice(index);\n      var newCells = before.concat(cells).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    var addCell = function (gridRow, index, cell) {\n      return addCells(gridRow, index, [cell]);\n    };\n    var mutateCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells;\n      cells[index] = cell;\n    };\n    var setCells = function (gridRow, cells) {\n      return rowcells(gridRow.element, cells, gridRow.section, gridRow.isNew);\n    };\n    var mapCells = function (gridRow, f) {\n      var cells = gridRow.cells;\n      var r = map$1(cells, f);\n      return rowcells(gridRow.element, r, gridRow.section, gridRow.isNew);\n    };\n    var getCell = function (gridRow, index) {\n      return gridRow.cells[index];\n    };\n    var getCellElement = function (gridRow, index) {\n      return getCell(gridRow, index).element;\n    };\n    var cellLength = function (gridRow) {\n      return gridRow.cells.length;\n    };\n    var extractGridDetails = function (grid) {\n      var result = partition(grid, function (row) {\n        return row.section === 'colgroup';\n      });\n      return {\n        rows: result.fail,\n        cols: result.pass\n      };\n    };\n    var clone$1 = function (gridRow, cloneRow, cloneCell) {\n      var newCells = map$1(gridRow.cells, cloneCell);\n      return rowcells(cloneRow(gridRow.element), newCells, gridRow.section, true);\n    };\n\n    var LOCKED_COL_ATTR = 'data-snooker-locked-cols';\n    var getLockedColumnsFromTable = function (table) {\n      return getOpt(table, LOCKED_COL_ATTR).bind(function (lockedColStr) {\n        return Optional.from(lockedColStr.match(/\\d+/g));\n      }).map(function (lockedCols) {\n        return mapToObject(lockedCols, always);\n      });\n    };\n    var getLockedColumnsFromGrid = function (grid) {\n      var locked = foldl(extractGridDetails(grid).rows, function (acc, row) {\n        each$2(row.cells, function (cell, idx) {\n          if (cell.isLocked) {\n            acc[idx] = true;\n          }\n        });\n        return acc;\n      }, {});\n      var lockedArr = mapToArray(locked, function (_val, key) {\n        return parseInt(key, 10);\n      });\n      return sort$1(lockedArr);\n    };\n\n    var key = function (row, column) {\n      return row + ',' + column;\n    };\n    var getAt = function (warehouse, row, column) {\n      return Optional.from(warehouse.access[key(row, column)]);\n    };\n    var findItem = function (warehouse, item, comparator) {\n      var filtered = filterItems(warehouse, function (detail) {\n        return comparator(item, detail.element);\n      });\n      return filtered.length > 0 ? Optional.some(filtered[0]) : Optional.none();\n    };\n    var filterItems = function (warehouse, predicate) {\n      var all = bind$2(warehouse.all, function (r) {\n        return r.cells;\n      });\n      return filter$2(all, predicate);\n    };\n    var generateColumns = function (rowData) {\n      var columnsGroup = {};\n      var index = 0;\n      each$2(rowData.cells, function (column) {\n        var colspan = column.colspan;\n        range$1(colspan, function (columnIndex) {\n          var colIndex = index + columnIndex;\n          columnsGroup[colIndex] = columnext(column.element, colspan, colIndex);\n        });\n        index += colspan;\n      });\n      return columnsGroup;\n    };\n    var generate$1 = function (list) {\n      var access = {};\n      var cells = [];\n      var tableOpt = head(list).map(function (rowData) {\n        return rowData.element;\n      }).bind(table);\n      var lockedColumns = tableOpt.bind(getLockedColumnsFromTable).getOr({});\n      var maxRows = 0;\n      var maxColumns = 0;\n      var rowCount = 0;\n      var _a = partition(list, function (rowData) {\n          return rowData.section === 'colgroup';\n        }), colgroupRows = _a.pass, rows = _a.fail;\n      each$2(rows, function (rowData) {\n        var currentRow = [];\n        each$2(rowData.cells, function (rowCell) {\n          var start = 0;\n          while (access[key(rowCount, start)] !== undefined) {\n            start++;\n          }\n          var isLocked = hasNonNullableKey(lockedColumns, start.toString());\n          var current = extended(rowCell.element, rowCell.rowspan, rowCell.colspan, rowCount, start, isLocked);\n          for (var occupiedColumnPosition = 0; occupiedColumnPosition < rowCell.colspan; occupiedColumnPosition++) {\n            for (var occupiedRowPosition = 0; occupiedRowPosition < rowCell.rowspan; occupiedRowPosition++) {\n              var rowPosition = rowCount + occupiedRowPosition;\n              var columnPosition = start + occupiedColumnPosition;\n              var newpos = key(rowPosition, columnPosition);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, columnPosition + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        maxRows++;\n        cells.push(rowdetail(rowData.element, currentRow, rowData.section));\n        rowCount++;\n      });\n      var _b = last$2(colgroupRows).map(function (rowData) {\n          var columns = generateColumns(rowData);\n          var colgroup$1 = colgroup(rowData.element, values(columns));\n          return {\n            colgroups: [colgroup$1],\n            columns: columns\n          };\n        }).getOrThunk(function () {\n          return {\n            colgroups: [],\n            columns: {}\n          };\n        }), columns = _b.columns, colgroups = _b.colgroups;\n      var grid$1 = grid(maxRows, maxColumns);\n      return {\n        grid: grid$1,\n        access: access,\n        all: cells,\n        columns: columns,\n        colgroups: colgroups\n      };\n    };\n    var fromTable = function (table) {\n      var list = fromTable$1(table);\n      return generate$1(list);\n    };\n    var justCells = function (warehouse) {\n      return bind$2(warehouse.all, function (w) {\n        return w.cells;\n      });\n    };\n    var justColumns = function (warehouse) {\n      return values(warehouse.columns);\n    };\n    var hasColumns = function (warehouse) {\n      return keys(warehouse.columns).length > 0;\n    };\n    var getColumnAt = function (warehouse, columnIndex) {\n      return Optional.from(warehouse.columns[columnIndex]);\n    };\n    var Warehouse = {\n      fromTable: fromTable,\n      generate: generate$1,\n      getAt: getAt,\n      findItem: findItem,\n      filterItems: filterItems,\n      justCells: justCells,\n      justColumns: justColumns,\n      hasColumns: hasColumns,\n      getColumnAt: getColumnAt\n    };\n\n    var inSelection = function (bounds, detail) {\n      var leftEdge = detail.column;\n      var rightEdge = detail.column + detail.colspan - 1;\n      var topEdge = detail.row;\n      var bottomEdge = detail.row + detail.rowspan - 1;\n      return leftEdge <= bounds.finishCol && rightEdge >= bounds.startCol && (topEdge <= bounds.finishRow && bottomEdge >= bounds.startRow);\n    };\n    var isWithin = function (bounds, detail) {\n      return detail.column >= bounds.startCol && detail.column + detail.colspan - 1 <= bounds.finishCol && detail.row >= bounds.startRow && detail.row + detail.rowspan - 1 <= bounds.finishRow;\n    };\n    var isRectangular = function (warehouse, bounds) {\n      var isRect = true;\n      var detailIsWithin = curry(isWithin, bounds);\n      for (var i = bounds.startRow; i <= bounds.finishRow; i++) {\n        for (var j = bounds.startCol; j <= bounds.finishCol; j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Optional.some(bounds) : Optional.none();\n    };\n\n    var getBounds = function (detailA, detailB) {\n      return bounds(Math.min(detailA.row, detailB.row), Math.min(detailA.column, detailB.column), Math.max(detailA.row + detailA.rowspan - 1, detailB.row + detailB.rowspan - 1), Math.max(detailA.column + detailA.colspan - 1, detailB.column + detailB.colspan - 1));\n    };\n    var getAnyBox = function (warehouse, startCell, finishCell) {\n      var startCoords = Warehouse.findItem(warehouse, startCell, eq$1);\n      var finishCoords = Warehouse.findItem(warehouse, finishCell, eq$1);\n      return startCoords.bind(function (sc) {\n        return finishCoords.map(function (fc) {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    var getBox$1 = function (warehouse, startCell, finishCell) {\n      return getAnyBox(warehouse, startCell, finishCell).bind(function (bounds) {\n        return isRectangular(warehouse, bounds);\n      });\n    };\n\n    var moveBy$1 = function (warehouse, cell, row, column) {\n      return Warehouse.findItem(warehouse, cell, eq$1).bind(function (detail) {\n        var startRow = row > 0 ? detail.row + detail.rowspan - 1 : detail.row;\n        var startCol = column > 0 ? detail.column + detail.colspan - 1 : detail.column;\n        var dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(function (d) {\n          return d.element;\n        });\n      });\n    };\n    var intercepts$1 = function (warehouse, start, finish) {\n      return getAnyBox(warehouse, start, finish).map(function (bounds) {\n        var inside = Warehouse.filterItems(warehouse, curry(inSelection, bounds));\n        return map$1(inside, function (detail) {\n          return detail.element;\n        });\n      });\n    };\n    var parentCell = function (warehouse, innerCell) {\n      var isContainedBy = function (c1, c2) {\n        return contains(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).map(function (detail) {\n        return detail.element;\n      });\n    };\n\n    var moveBy = function (cell, deltaRow, deltaColumn) {\n      return table(cell).bind(function (table) {\n        var warehouse = getWarehouse(table);\n        return moveBy$1(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    var intercepts = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return intercepts$1(warehouse, first, last);\n    };\n    var nestedIntercepts = function (table, first, firstTable, last, lastTable) {\n      var warehouse = getWarehouse(table);\n      var optStartCell = eq$1(table, firstTable) ? Optional.some(first) : parentCell(warehouse, first);\n      var optLastCell = eq$1(table, lastTable) ? Optional.some(last) : parentCell(warehouse, last);\n      return optStartCell.bind(function (startCell) {\n        return optLastCell.bind(function (lastCell) {\n          return intercepts$1(warehouse, startCell, lastCell);\n        });\n      });\n    };\n    var getBox = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return getBox$1(warehouse, first, last);\n    };\n    var getWarehouse = Warehouse.fromTable;\n\n    var before$4 = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    var after$5 = function (marker, element) {\n      var sibling = nextSibling(marker);\n      sibling.fold(function () {\n        var parent$1 = parent(marker);\n        parent$1.each(function (v) {\n          append$1(v, element);\n        });\n      }, function (v) {\n        before$4(v, element);\n      });\n    };\n    var prepend = function (parent, element) {\n      var firstChild$1 = firstChild(parent);\n      firstChild$1.fold(function () {\n        append$1(parent, element);\n      }, function (v) {\n        parent.dom.insertBefore(element.dom, v.dom);\n      });\n    };\n    var append$1 = function (parent, element) {\n      parent.dom.appendChild(element.dom);\n    };\n    var appendAt = function (parent, element, index) {\n      child$3(parent, index).fold(function () {\n        append$1(parent, element);\n      }, function (v) {\n        before$4(v, element);\n      });\n    };\n    var wrap = function (element, wrapper) {\n      before$4(element, wrapper);\n      append$1(wrapper, element);\n    };\n\n    var before$3 = function (marker, elements) {\n      each$2(elements, function (x) {\n        before$4(marker, x);\n      });\n    };\n    var after$4 = function (marker, elements) {\n      each$2(elements, function (x, i) {\n        var e = i === 0 ? marker : elements[i - 1];\n        after$5(e, x);\n      });\n    };\n    var append = function (parent, elements) {\n      each$2(elements, function (x) {\n        append$1(parent, x);\n      });\n    };\n\n    var empty = function (element) {\n      element.dom.textContent = '';\n      each$2(children$3(element), function (rogue) {\n        remove$5(rogue);\n      });\n    };\n    var remove$5 = function (element) {\n      var dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    var unwrap = function (wrapper) {\n      var children = children$3(wrapper);\n      if (children.length > 0) {\n        before$3(wrapper, children);\n      }\n      remove$5(wrapper);\n    };\n\n    var NodeValue = function (is, name) {\n      var get = function (element) {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      var getOption = function (element) {\n        return is(element) ? Optional.from(element.dom.nodeValue) : Optional.none();\n      };\n      var set = function (element, value) {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom.nodeValue = value;\n      };\n      return {\n        get: get,\n        getOption: getOption,\n        set: set\n      };\n    };\n\n    var api$2 = NodeValue(isText, 'text');\n    var get$9 = function (element) {\n      return api$2.get(element);\n    };\n    var getOption = function (element) {\n      return api$2.getOption(element);\n    };\n    var set = function (element, value) {\n      return api$2.set(element, value);\n    };\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    function DomUniverse () {\n      var clone = function (element) {\n        return SugarElement.fromDom(element.dom.cloneNode(false));\n      };\n      var document = function (element) {\n        return documentOrOwner(element).dom;\n      };\n      var isBoundary = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        if (name(element) === 'body') {\n          return true;\n        }\n        return contains$2(TagBoundaries, name(element));\n      };\n      var isEmptyTag = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        return contains$2([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      var isNonEditable = function (element) {\n        return isElement(element) && get$b(element, 'contenteditable') === 'false';\n      };\n      var comparePosition = function (element, other) {\n        return element.dom.compareDocumentPosition(other.dom);\n      };\n      var copyAttributesTo = function (source, destination) {\n        var as = clone$2(source);\n        setAll$1(destination, as);\n      };\n      var isSpecial = function (element) {\n        var tag = name(element);\n        return contains$2([\n          'script',\n          'noscript',\n          'iframe',\n          'noframes',\n          'noembed',\n          'title',\n          'style',\n          'textarea',\n          'xmp'\n        ], tag);\n      };\n      var getLanguage = function (element) {\n        return isElement(element) ? getOpt(element, 'lang') : Optional.none();\n      };\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor$2,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants,\n          predicate: descendants$1\n        }),\n        styles: constant({\n          get: get$a,\n          getRaw: getRaw$2,\n          set: set$1,\n          remove: remove$6\n        }),\n        attrs: constant({\n          get: get$b,\n          set: set$2,\n          remove: remove$7,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before$4,\n          after: after$5,\n          afterAll: after$4,\n          append: append$1,\n          appendAll: append,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$5\n        }),\n        create: constant({\n          nu: SugarElement.fromTag,\n          clone: clone,\n          text: SugarElement.fromText\n        }),\n        query: constant({\n          comparePosition: comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children$3,\n          name: name,\n          parent: parent,\n          document: document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          isSpecial: isSpecial,\n          getLanguage: getLanguage,\n          getText: get$9,\n          setText: set,\n          isBoundary: isBoundary,\n          isEmptyTag: isEmptyTag,\n          isNonEditable: isNonEditable\n        }),\n        eq: eq$1,\n        is: is$1\n      };\n    }\n\n    var all = function (universe, look, elements, f) {\n      var head = elements[0];\n      var tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    var oneAll = function (universe, look, elements) {\n      return elements.length > 0 ? all(universe, look, elements, unsafeOne) : Optional.none();\n    };\n    var unsafeOne = function (universe, look, head, tail) {\n      var start = look(universe, head);\n      return foldr(tail, function (b, a) {\n        var current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    var commonElement = function (universe, start, end) {\n      return start.bind(function (s) {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n\n    var eq = function (universe, item) {\n      return curry(universe.eq, item);\n    };\n    var ancestors$2 = function (universe, start, end, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      var ps1 = [start].concat(universe.up().all(start));\n      var ps2 = [end].concat(universe.up().all(end));\n      var prune = function (path) {\n        var index = findIndex(path, isRoot);\n        return index.fold(function () {\n          return path;\n        }, function (ind) {\n          return path.slice(0, ind + 1);\n        });\n      };\n      var pruned1 = prune(ps1);\n      var pruned2 = prune(ps2);\n      var shared = find$1(pruned1, function (x) {\n        return exists(pruned2, eq(universe, x));\n      });\n      return {\n        firstpath: pruned1,\n        secondpath: pruned2,\n        shared: shared\n      };\n    };\n\n    var sharedOne$1 = oneAll;\n    var ancestors$1 = ancestors$2;\n\n    var universe$3 = DomUniverse();\n    var sharedOne = function (look, elements) {\n      return sharedOne$1(universe$3, function (_universe, element) {\n        return look(element);\n      }, elements);\n    };\n    var ancestors = function (start, finish, isRoot) {\n      return ancestors$1(universe$3, start, finish, isRoot);\n    };\n\n    var lookupTable = function (container) {\n      return ancestor$1(container, 'table');\n    };\n    var identify = function (start, finish, isRoot) {\n      var getIsRoot = function (rootTable) {\n        return function (element) {\n          return isRoot !== undefined && isRoot(element) || eq$1(element, rootTable);\n        };\n      };\n      if (eq$1(start, finish)) {\n        return Optional.some({\n          boxes: Optional.some([start]),\n          start: start,\n          finish: finish\n        });\n      } else {\n        return lookupTable(start).bind(function (startTable) {\n          return lookupTable(finish).bind(function (finishTable) {\n            if (eq$1(startTable, finishTable)) {\n              return Optional.some({\n                boxes: intercepts(startTable, start, finish),\n                start: start,\n                finish: finish\n              });\n            } else if (contains(startTable, finishTable)) {\n              var ancestorCells = ancestors$3(finish, 'td,th', getIsRoot(startTable));\n              var finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Optional.some({\n                boxes: nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: finishCell\n              });\n            } else if (contains(finishTable, startTable)) {\n              var ancestorCells = ancestors$3(start, 'td,th', getIsRoot(finishTable));\n              var startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Optional.some({\n                boxes: nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: startCell\n              });\n            } else {\n              return ancestors(start, finish).shared.bind(function (lca) {\n                return closest$1(lca, 'table', isRoot).bind(function (lcaTable) {\n                  var finishAncestorCells = ancestors$3(finish, 'td,th', getIsRoot(lcaTable));\n                  var finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  var startAncestorCells = ancestors$3(start, 'td,th', getIsRoot(lcaTable));\n                  var startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Optional.some({\n                    boxes: nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  });\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    var retrieve$1 = function (container, selector) {\n      var sels = descendants(container, selector);\n      return sels.length > 0 ? Optional.some(sels) : Optional.none();\n    };\n    var getLast = function (boxes, lastSelectedSelector) {\n      return find$1(boxes, function (box) {\n        return is$2(box, lastSelectedSelector);\n      });\n    };\n    var getEdges = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return descendant(container, firstSelectedSelector).bind(function (first) {\n        return descendant(container, lastSelectedSelector).bind(function (last) {\n          return sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(function (table) {\n            return {\n              first: first,\n              last: last,\n              table: table\n            };\n          });\n        });\n      });\n    };\n    var expandTo = function (finish, firstSelectedSelector) {\n      return ancestor$1(finish, 'table').bind(function (table) {\n        return descendant(table, firstSelectedSelector).bind(function (start) {\n          return identify(start, finish).bind(function (identified) {\n            return identified.boxes.map(function (boxes) {\n              return {\n                boxes: boxes,\n                start: identified.start,\n                finish: identified.finish\n              };\n            });\n          });\n        });\n      });\n    };\n    var shiftSelection = function (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) {\n      return getLast(boxes, lastSelectedSelector).bind(function (last) {\n        return moveBy(last, deltaRow, deltaColumn).bind(function (finish) {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n\n    var retrieve = function (container, selector) {\n      return retrieve$1(container, selector);\n    };\n    var retrieveBox = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(function (edges) {\n        var isRoot = function (ancestor) {\n          return eq$1(container, ancestor);\n        };\n        var sectionSelector = 'thead,tfoot,tbody,table';\n        var firstAncestor = ancestor$1(edges.first, sectionSelector, isRoot);\n        var lastAncestor = ancestor$1(edges.last, sectionSelector, isRoot);\n        return firstAncestor.bind(function (fA) {\n          return lastAncestor.bind(function (lA) {\n            return eq$1(fA, lA) ? getBox(edges.table, edges.first, edges.last) : Optional.none();\n          });\n        });\n      });\n    };\n\n    var generate = function (cases) {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      var constructors = [];\n      var adt = {};\n      each$2(cases, function (acase, count) {\n        var keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        var key = keys$1[0];\n        var value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var argLength = args.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          var match = function (branches) {\n            var branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            var allReqd = forall(constructors, function (reqKey) {\n              return contains$2(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: function () {\n              var foldArgs = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                foldArgs[_i] = arguments[_i];\n              }\n              if (foldArgs.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n              }\n              var target = foldArgs[count];\n              return target.apply(null, args);\n            },\n            match: match,\n            log: function (label) {\n              console.log(label, {\n                constructors: constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    var Adt = { generate: generate };\n\n    var type = Adt.generate([\n      { none: [] },\n      { multiple: ['elements'] },\n      { single: ['element'] }\n    ]);\n    var cata$2 = function (subject, onNone, onMultiple, onSingle) {\n      return subject.fold(onNone, onMultiple, onSingle);\n    };\n    var none$1 = type.none;\n    var multiple = type.multiple;\n    var single = type.single;\n\n    var Selections = function (lazyRoot, getStart, selectedSelector) {\n      var get = function () {\n        return retrieve(lazyRoot(), selectedSelector).fold(function () {\n          return getStart().fold(none$1, single);\n        }, function (cells) {\n          return multiple(cells);\n        });\n      };\n      return { get: get };\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var clone = function (original, isDeep) {\n      return SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    };\n    var shallow = function (original) {\n      return clone(original, false);\n    };\n    var deep = function (original) {\n      return clone(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = SugarElement.fromTag(tag);\n      var attributes = clone$2(original);\n      setAll$1(nu, attributes);\n      return nu;\n    };\n    var copy$1 = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      var cloneChildren = children$3(deep(original));\n      append(nu, cloneChildren);\n      return nu;\n    };\n    var mutate$1 = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      before$4(original, nu);\n      var children = children$3(original);\n      append(nu, children);\n      remove$5(original);\n      return nu;\n    };\n\n    var Dimension = function (name, getOffset) {\n      var set = function (element, h) {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        var dom = element.dom;\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      var get = function (element) {\n        var r = getOffset(element);\n        if (r <= 0 || r === null) {\n          var css = get$a(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      var getOuter = get;\n      var aggregate = function (element, properties) {\n        return foldl(properties, function (acc, property) {\n          var val = get$a(element, property);\n          var value = val === undefined ? 0 : parseInt(val, 10);\n          return isNaN(value) ? acc : acc + value;\n        }, 0);\n      };\n      var max = function (element, value, properties) {\n        var cumulativeInclusions = aggregate(element, properties);\n        var absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set: set,\n        get: get,\n        getOuter: getOuter,\n        aggregate: aggregate,\n        max: max\n      };\n    };\n\n    var needManualCalc = function () {\n      var browser = detect$3().browser;\n      return browser.isIE() || browser.isEdge();\n    };\n    var toNumber = function (px, fallback) {\n      return toFloat(px).getOr(fallback);\n    };\n    var getProp = function (element, name, fallback) {\n      return toNumber(get$a(element, name), fallback);\n    };\n    var getBoxSizing = function (element) {\n      return get$a(element, 'box-sizing');\n    };\n    var calcContentBoxSize = function (element, size, upper, lower) {\n      var paddingUpper = getProp(element, 'padding-' + upper, 0);\n      var paddingLower = getProp(element, 'padding-' + lower, 0);\n      var borderUpper = getProp(element, 'border-' + upper + '-width', 0);\n      var borderLower = getProp(element, 'border-' + lower + '-width', 0);\n      return size - paddingUpper - paddingLower - borderUpper - borderLower;\n    };\n    var getCalculatedHeight = function (element, boxSizing) {\n      var dom = element.dom;\n      var height = dom.getBoundingClientRect().height || dom.offsetHeight;\n      return boxSizing === 'border-box' ? height : calcContentBoxSize(element, height, 'top', 'bottom');\n    };\n    var getCalculatedWidth = function (element, boxSizing) {\n      var dom = element.dom;\n      var width = dom.getBoundingClientRect().width || dom.offsetWidth;\n      return boxSizing === 'border-box' ? width : calcContentBoxSize(element, width, 'left', 'right');\n    };\n    var getHeight$1 = function (element) {\n      return needManualCalc() ? getCalculatedHeight(element, getBoxSizing(element)) : getProp(element, 'height', element.dom.offsetHeight);\n    };\n    var getWidth = function (element) {\n      return needManualCalc() ? getCalculatedWidth(element, getBoxSizing(element)) : getProp(element, 'width', element.dom.offsetWidth);\n    };\n    var getInnerWidth = function (element) {\n      return getCalculatedWidth(element, 'content-box');\n    };\n\n    var api$1 = Dimension('width', function (element) {\n      return element.dom.offsetWidth;\n    });\n    var get$8 = function (element) {\n      return api$1.get(element);\n    };\n    var getOuter$2 = function (element) {\n      return api$1.getOuter(element);\n    };\n    var getInner = getInnerWidth;\n    var getRuntime$1 = getWidth;\n\n    var columns = function (warehouse, isValidCell) {\n      if (isValidCell === void 0) {\n        isValidCell = always;\n      }\n      var grid = warehouse.grid;\n      var cols = range$1(grid.columns, identity);\n      var rowsArr = range$1(grid.rows, identity);\n      return map$1(cols, function (col) {\n        var getBlock = function () {\n          return bind$2(rowsArr, function (r) {\n            return Warehouse.getAt(warehouse, r, col).filter(function (detail) {\n              return detail.column === col;\n            }).toArray();\n          });\n        };\n        var isValid = function (detail) {\n          return detail.colspan === 1 && isValidCell(detail.element);\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, 0, col);\n        };\n        return decide(getBlock, isValid, getFallback);\n      });\n    };\n    var decide = function (getBlock, isValid, getFallback) {\n      var inBlock = getBlock();\n      var validInBlock = find$1(inBlock, isValid);\n      var detailOption = validInBlock.orThunk(function () {\n        return Optional.from(inBlock[0]).orThunk(getFallback);\n      });\n      return detailOption.map(function (detail) {\n        return detail.element;\n      });\n    };\n    var rows = function (warehouse) {\n      var grid = warehouse.grid;\n      var rowsArr = range$1(grid.rows, identity);\n      var cols = range$1(grid.columns, identity);\n      return map$1(rowsArr, function (row) {\n        var getBlock = function () {\n          return bind$2(cols, function (c) {\n            return Warehouse.getAt(warehouse, row, c).filter(function (detail) {\n              return detail.row === row;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.rowspan === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, row, 0);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n\n    var deduce = function (xs, index) {\n      if (index < 0 || index >= xs.length - 1) {\n        return Optional.none();\n      }\n      var current = xs[index].fold(function () {\n        var rest = reverse(xs.slice(0, index));\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (c) {\n        return Optional.some({\n          value: c,\n          delta: 0\n        });\n      });\n      var next = xs[index + 1].fold(function () {\n        var rest = xs.slice(index + 1);\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (n) {\n        return Optional.some({\n          value: n,\n          delta: 1\n        });\n      });\n      return current.bind(function (c) {\n        return next.map(function (n) {\n          var extras = n.delta + c.delta;\n          return Math.abs(n.value - c.value) / extras;\n        });\n      });\n    };\n\n    var onDirection = function (isLtr, isRtl) {\n      return function (element) {\n        return getDirection(element) === 'rtl' ? isRtl : isLtr;\n      };\n    };\n    var getDirection = function (element) {\n      return get$a(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n    };\n\n    var api = Dimension('height', function (element) {\n      var dom = element.dom;\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    var get$7 = function (element) {\n      return api.get(element);\n    };\n    var getOuter$1 = function (element) {\n      return api.getOuter(element);\n    };\n    var getRuntime = getHeight$1;\n\n    var r = function (left, top) {\n      var translate = function (x, y) {\n        return r(left + x, top + y);\n      };\n      return {\n        left: left,\n        top: top,\n        translate: translate\n      };\n    };\n    var SugarPosition = r;\n\n    var boxPosition = function (dom) {\n      var box = dom.getBoundingClientRect();\n      return SugarPosition(box.left, box.top);\n    };\n    var firstDefinedOrZero = function (a, b) {\n      if (a !== undefined) {\n        return a;\n      } else {\n        return b !== undefined ? b : 0;\n      }\n    };\n    var absolute = function (element) {\n      var doc = element.dom.ownerDocument;\n      var body = doc.body;\n      var win = doc.defaultView;\n      var html = doc.documentElement;\n      if (body === element.dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      var scrollTop = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageYOffset, html.scrollTop);\n      var scrollLeft = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageXOffset, html.scrollLeft);\n      var clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      var clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    var viewport = function (element) {\n      var dom = element.dom;\n      var doc = dom.ownerDocument;\n      var body = doc.body;\n      if (body === dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return SugarPosition(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    var rowInfo = function (row, y) {\n      return {\n        row: row,\n        y: y\n      };\n    };\n    var colInfo = function (col, x) {\n      return {\n        col: col,\n        x: x\n      };\n    };\n    var rtlEdge = function (cell) {\n      var pos = absolute(cell);\n      return pos.left + getOuter$2(cell);\n    };\n    var ltrEdge = function (cell) {\n      return absolute(cell).left;\n    };\n    var getLeftEdge = function (index, cell) {\n      return colInfo(index, ltrEdge(cell));\n    };\n    var getRightEdge = function (index, cell) {\n      return colInfo(index, rtlEdge(cell));\n    };\n    var getTop$1 = function (cell) {\n      return absolute(cell).top;\n    };\n    var getTopEdge = function (index, cell) {\n      return rowInfo(index, getTop$1(cell));\n    };\n    var getBottomEdge = function (index, cell) {\n      return rowInfo(index, getTop$1(cell) + getOuter$1(cell));\n    };\n    var findPositions = function (getInnerEdge, getOuterEdge, array) {\n      if (array.length === 0) {\n        return [];\n      }\n      var lines = map$1(array.slice(1), function (cellOption, index) {\n        return cellOption.map(function (cell) {\n          return getInnerEdge(index, cell);\n        });\n      });\n      var lastLine = array[array.length - 1].map(function (cell) {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    var negate = function (step) {\n      return -step;\n    };\n    var height = {\n      delta: identity,\n      positions: function (optElements) {\n        return findPositions(getTopEdge, getBottomEdge, optElements);\n      },\n      edge: getTop$1\n    };\n    var ltr$1 = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: function (optElements) {\n        return findPositions(getLeftEdge, getRightEdge, optElements);\n      }\n    };\n    var rtl$1 = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: function (optElements) {\n        return findPositions(getRightEdge, getLeftEdge, optElements);\n      }\n    };\n    var detect$2 = onDirection(ltr$1, rtl$1);\n    var width = {\n      delta: function (amount, table) {\n        return detect$2(table).delta(amount, table);\n      },\n      positions: function (cols, table) {\n        return detect$2(table).positions(cols, table);\n      },\n      edge: function (cell) {\n        return detect$2(cell).edge(cell);\n      }\n    };\n\n    var units = {\n      unsupportedLength: [\n        'em',\n        'ex',\n        'cap',\n        'ch',\n        'ic',\n        'rem',\n        'lh',\n        'rlh',\n        'vw',\n        'vh',\n        'vi',\n        'vb',\n        'vmin',\n        'vmax',\n        'cm',\n        'mm',\n        'Q',\n        'in',\n        'pc',\n        'pt',\n        'px'\n      ],\n      fixed: [\n        'px',\n        'pt'\n      ],\n      relative: ['%'],\n      empty: ['']\n    };\n    var pattern = function () {\n      var decimalDigits = '[0-9]+';\n      var signedInteger = '[+-]?' + decimalDigits;\n      var exponentPart = '[eE]' + signedInteger;\n      var dot = '\\\\.';\n      var opt = function (input) {\n        return '(?:' + input + ')?';\n      };\n      var unsignedDecimalLiteral = [\n        'Infinity',\n        decimalDigits + dot + opt(decimalDigits) + opt(exponentPart),\n        dot + decimalDigits + opt(exponentPart),\n        decimalDigits + opt(exponentPart)\n      ].join('|');\n      var float = '[+-]?(?:' + unsignedDecimalLiteral + ')';\n      return new RegExp('^(' + float + ')(.*)$');\n    }();\n    var isUnit = function (unit, accepted) {\n      return exists(accepted, function (acc) {\n        return exists(units[acc], function (check) {\n          return unit === check;\n        });\n      });\n    };\n    var parse = function (input, accepted) {\n      var match = Optional.from(pattern.exec(input));\n      return match.bind(function (array) {\n        var value = Number(array[1]);\n        var unitRaw = array[2];\n        if (isUnit(unitRaw, accepted)) {\n          return Optional.some({\n            value: value,\n            unit: unitRaw\n          });\n        } else {\n          return Optional.none();\n        }\n      });\n    };\n\n    var rPercentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    var rPixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    var isCol$2 = isTag('col');\n    var getPercentSize = function (elm, outerGetter, innerGetter) {\n      var relativeParent = parentElement(elm).getOrThunk(function () {\n        return getBody$1(owner(elm));\n      });\n      return outerGetter(elm) / innerGetter(relativeParent) * 100;\n    };\n    var setPixelWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + 'px');\n    };\n    var setPercentageWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + '%');\n    };\n    var setHeight = function (cell, amount) {\n      set$1(cell, 'height', amount + 'px');\n    };\n    var getHeightValue = function (cell) {\n      return getRuntime(cell) + 'px';\n    };\n    var convert = function (cell, number, getter, setter) {\n      var newSize = table(cell).map(function (table) {\n        var total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    var normalizePixelSize = function (value, cell, getter, setter) {\n      var number = parseFloat(value);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    var getTotalHeight = function (cell) {\n      var value = getHeightValue(cell);\n      if (!value) {\n        return get$7(cell);\n      }\n      return normalizePixelSize(value, cell, get$7, setHeight);\n    };\n    var get$6 = function (cell, type, f) {\n      var v = f(cell);\n      var span = getSpan(cell, type);\n      return v / span;\n    };\n    var getRaw$1 = function (element, prop) {\n      return getRaw$2(element, prop).orThunk(function () {\n        return getOpt(element, prop).map(function (val) {\n          return val + 'px';\n        });\n      });\n    };\n    var getRawWidth$1 = function (element) {\n      return getRaw$1(element, 'width');\n    };\n    var getRawHeight = function (element) {\n      return getRaw$1(element, 'height');\n    };\n    var getPercentageWidth = function (cell) {\n      return getPercentSize(cell, get$8, getInner);\n    };\n    var getPixelWidth$1 = function (cell) {\n      return isCol$2(cell) ? get$8(cell) : getRuntime$1(cell);\n    };\n    var getHeight = function (cell) {\n      return get$6(cell, 'rowspan', getTotalHeight);\n    };\n    var getGenericWidth = function (cell) {\n      var width = getRawWidth$1(cell);\n      return width.bind(function (w) {\n        return parse(w, [\n          'fixed',\n          'relative',\n          'empty'\n        ]);\n      });\n    };\n    var setGenericWidth = function (cell, amount, unit) {\n      set$1(cell, 'width', amount + unit);\n    };\n    var getPixelTableWidth = function (table) {\n      return get$8(table) + 'px';\n    };\n    var getPercentTableWidth = function (table) {\n      return getPercentSize(table, get$8, getInner) + '%';\n    };\n    var isPercentSizing$1 = function (table) {\n      return getRawWidth$1(table).exists(function (size) {\n        return rPercentageBasedSizeRegex.test(size);\n      });\n    };\n    var isPixelSizing$1 = function (table) {\n      return getRawWidth$1(table).exists(function (size) {\n        return rPixelBasedSizeRegex.test(size);\n      });\n    };\n    var isNoneSizing$1 = function (table) {\n      return getRawWidth$1(table).isNone();\n    };\n    var percentageBasedSizeRegex = constant(rPercentageBasedSizeRegex);\n\n    var isCol$1 = isTag('col');\n    var getRawW = function (cell) {\n      return getRawWidth$1(cell).getOrThunk(function () {\n        return getPixelWidth$1(cell) + 'px';\n      });\n    };\n    var getRawH = function (cell) {\n      return getRawHeight(cell).getOrThunk(function () {\n        return getHeight(cell) + 'px';\n      });\n    };\n    var justCols = function (warehouse) {\n      return map$1(Warehouse.justColumns(warehouse), function (column) {\n        return Optional.from(column.element);\n      });\n    };\n    var isValidColumn = function (cell) {\n      var browser = detect$3().browser;\n      var supportsColWidths = browser.isChrome() || browser.isFirefox();\n      return isCol$1(cell) ? supportsColWidths : true;\n    };\n    var getDimension = function (cellOpt, index, backups, filter, getter, fallback) {\n      return cellOpt.filter(filter).fold(function () {\n        return fallback(deduce(backups, index));\n      }, function (cell) {\n        return getter(cell);\n      });\n    };\n    var getWidthFrom = function (warehouse, table, getWidth, fallback) {\n      var columnCells = columns(warehouse);\n      var columns$1 = Warehouse.hasColumns(warehouse) ? justCols(warehouse) : columnCells;\n      var backups = [Optional.some(width.edge(table))].concat(map$1(width.positions(columnCells, table), function (pos) {\n        return pos.map(function (p) {\n          return p.x;\n        });\n      }));\n      var colFilter = not(hasColspan);\n      return map$1(columns$1, function (cellOption, c) {\n        return getDimension(cellOption, c, backups, colFilter, function (column) {\n          if (isValidColumn(column)) {\n            return getWidth(column);\n          } else {\n            var cell = bindFrom(columnCells[c], identity);\n            return getDimension(cell, c, backups, colFilter, function (cell) {\n              return fallback(Optional.some(get$8(cell)));\n            }, fallback);\n          }\n        }, fallback);\n      });\n    };\n    var getDeduced = function (deduced) {\n      return deduced.map(function (d) {\n        return d + 'px';\n      }).getOr('');\n    };\n    var getRawWidths = function (warehouse, table) {\n      return getWidthFrom(warehouse, table, getRawW, getDeduced);\n    };\n    var getPercentageWidths = function (warehouse, table, tableSize) {\n      return getWidthFrom(warehouse, table, getPercentageWidth, function (deduced) {\n        return deduced.fold(function () {\n          return tableSize.minCellWidth();\n        }, function (cellWidth) {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      });\n    };\n    var getPixelWidths = function (warehouse, table, tableSize) {\n      return getWidthFrom(warehouse, table, getPixelWidth$1, function (deduced) {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      });\n    };\n    var getHeightFrom = function (warehouse, table, direction, getHeight, fallback) {\n      var rows$1 = rows(warehouse);\n      var backups = [Optional.some(direction.edge(table))].concat(map$1(direction.positions(rows$1, table), function (pos) {\n        return pos.map(function (p) {\n          return p.y;\n        });\n      }));\n      return map$1(rows$1, function (cellOption, c) {\n        return getDimension(cellOption, c, backups, not(hasRowspan), getHeight, fallback);\n      });\n    };\n    var getPixelHeights = function (warehouse, table, direction) {\n      return getHeightFrom(warehouse, table, direction, getHeight, function (deduced) {\n        return deduced.getOrThunk(minHeight);\n      });\n    };\n    var getRawHeights = function (warehouse, table, direction) {\n      return getHeightFrom(warehouse, table, direction, getRawH, getDeduced);\n    };\n\n    var widthLookup = function (table, getter) {\n      return function () {\n        if (inBody(table)) {\n          return getter(table);\n        } else {\n          return parseFloat(getRaw$2(table, 'width').getOr('0'));\n        }\n      };\n    };\n    var noneSize = function (table) {\n      var getWidth = widthLookup(table, get$8);\n      var zero = constant(0);\n      var getWidths = function (warehouse, tableSize) {\n        return getPixelWidths(warehouse, table, tableSize);\n      };\n      return {\n        width: getWidth,\n        pixelWidth: getWidth,\n        getWidths: getWidths,\n        getCellDelta: zero,\n        singleColumnWidth: constant([0]),\n        minCellWidth: zero,\n        setElementWidth: noop,\n        adjustTableWidth: noop,\n        isRelative: true,\n        label: 'none'\n      };\n    };\n    var percentageSize = function (table) {\n      var getFloatWidth = widthLookup(table, function (elem) {\n        return parseFloat(getPercentTableWidth(elem));\n      });\n      var getWidth = widthLookup(table, get$8);\n      var getCellDelta = function (delta) {\n        return delta / getWidth() * 100;\n      };\n      var singleColumnWidth = function (w, _delta) {\n        return [100 - w];\n      };\n      var minCellWidth = function () {\n        return minWidth() / getWidth() * 100;\n      };\n      var adjustTableWidth = function (delta) {\n        var currentWidth = getFloatWidth();\n        var change = delta / 100 * currentWidth;\n        var newWidth = currentWidth + change;\n        setPercentageWidth(table, newWidth);\n      };\n      var getWidths = function (warehouse, tableSize) {\n        return getPercentageWidths(warehouse, table, tableSize);\n      };\n      return {\n        width: getFloatWidth,\n        pixelWidth: getWidth,\n        getWidths: getWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: minCellWidth,\n        setElementWidth: setPercentageWidth,\n        adjustTableWidth: adjustTableWidth,\n        isRelative: true,\n        label: 'percent'\n      };\n    };\n    var pixelSize = function (table) {\n      var getWidth = widthLookup(table, get$8);\n      var getCellDelta = identity;\n      var singleColumnWidth = function (w, delta) {\n        var newNext = Math.max(minWidth(), w + delta);\n        return [newNext - w];\n      };\n      var adjustTableWidth = function (delta) {\n        var newWidth = getWidth() + delta;\n        setPixelWidth(table, newWidth);\n      };\n      var getWidths = function (warehouse, tableSize) {\n        return getPixelWidths(warehouse, table, tableSize);\n      };\n      return {\n        width: getWidth,\n        pixelWidth: getWidth,\n        getWidths: getWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: minWidth,\n        setElementWidth: setPixelWidth,\n        adjustTableWidth: adjustTableWidth,\n        isRelative: false,\n        label: 'pixel'\n      };\n    };\n    var chooseSize = function (element, width) {\n      var percentMatch = percentageBasedSizeRegex().exec(width);\n      if (percentMatch !== null) {\n        return percentageSize(element);\n      } else {\n        return pixelSize(element);\n      }\n    };\n    var getTableSize = function (table) {\n      var width = getRawWidth$1(table);\n      return width.fold(function () {\n        return noneSize(table);\n      }, function (w) {\n        return chooseSize(table, w);\n      });\n    };\n    var TableSize = {\n      getTableSize: getTableSize,\n      pixelSize: pixelSize,\n      percentageSize: percentageSize,\n      noneSize: noneSize\n    };\n\n    var statsStruct = function (minRow, minCol, maxRow, maxCol, allCells, selectedCells) {\n      return {\n        minRow: minRow,\n        minCol: minCol,\n        maxRow: maxRow,\n        maxCol: maxCol,\n        allCells: allCells,\n        selectedCells: selectedCells\n      };\n    };\n    var findSelectedStats = function (house, isSelected) {\n      var totalColumns = house.grid.columns;\n      var totalRows = house.grid.rows;\n      var minRow = totalRows;\n      var minCol = totalColumns;\n      var maxRow = 0;\n      var maxCol = 0;\n      var allCells = [];\n      var selectedCells = [];\n      each$1(house.access, function (detail) {\n        allCells.push(detail);\n        if (isSelected(detail)) {\n          selectedCells.push(detail);\n          var startRow = detail.row;\n          var endRow = startRow + detail.rowspan - 1;\n          var startCol = detail.column;\n          var endCol = startCol + detail.colspan - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol, allCells, selectedCells);\n    };\n    var makeCell = function (list, seenSelected, rowIndex) {\n      var row = list[rowIndex].element;\n      var td = SugarElement.fromTag('td');\n      append$1(td, SugarElement.fromTag('br'));\n      var f = seenSelected ? append$1 : prepend;\n      f(row, td);\n    };\n    var fillInGaps = function (list, house, stats, isSelected) {\n      var totalColumns = house.grid.columns;\n      var totalRows = house.grid.rows;\n      for (var i = 0; i < totalRows; i++) {\n        var seenSelected = false;\n        for (var j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow || i > stats.maxRow || j < stats.minCol || j > stats.maxCol)) {\n            var needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(list, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    var clean = function (replica, stats, house, widthDelta) {\n      each$1(house.columns, function (col) {\n        if (col.column < stats.minCol || col.column > stats.maxCol) {\n          remove$5(col.element);\n        }\n      });\n      var emptyRows = filter$2(firstLayer(replica, 'tr'), function (row) {\n        return row.dom.childElementCount === 0;\n      });\n      each$2(emptyRows, remove$5);\n      if (stats.minCol === stats.maxCol || stats.minRow === stats.maxRow) {\n        each$2(firstLayer(replica, 'th,td'), function (cell) {\n          remove$7(cell, 'rowspan');\n          remove$7(cell, 'colspan');\n        });\n      }\n      remove$7(replica, LOCKED_COL_ATTR);\n      remove$7(replica, 'data-snooker-col-series');\n      var tableSize = TableSize.getTableSize(replica);\n      tableSize.adjustTableWidth(widthDelta);\n    };\n    var getTableWidthDelta = function (table, warehouse, tableSize, stats) {\n      if (stats.minCol === 0 && warehouse.grid.columns === stats.maxCol + 1) {\n        return 0;\n      }\n      var colWidths = getPixelWidths(warehouse, table, tableSize);\n      var allColsWidth = foldl(colWidths, function (acc, width) {\n        return acc + width;\n      }, 0);\n      var selectedColsWidth = foldl(colWidths.slice(stats.minCol, stats.maxCol + 1), function (acc, width) {\n        return acc + width;\n      }, 0);\n      var newWidth = selectedColsWidth / allColsWidth * tableSize.pixelWidth();\n      var delta = newWidth - tableSize.pixelWidth();\n      return tableSize.getCellDelta(delta);\n    };\n    var extract$1 = function (table, selectedSelector) {\n      var isSelected = function (detail) {\n        return is$2(detail.element, selectedSelector);\n      };\n      var replica = deep(table);\n      var list = fromTable$1(replica);\n      var tableSize = TableSize.getTableSize(table);\n      var replicaHouse = Warehouse.generate(list);\n      var replicaStats = findSelectedStats(replicaHouse, isSelected);\n      var selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      var unselectedCells = filterFirstLayer(replica, 'th,td', function (cell) {\n        return is$2(cell, selector);\n      });\n      each$2(unselectedCells, remove$5);\n      fillInGaps(list, replicaHouse, replicaStats, isSelected);\n      var house = Warehouse.fromTable(table);\n      var widthDelta = getTableWidthDelta(table, house, tableSize, replicaStats);\n      clean(replica, replicaStats, replicaHouse, widthDelta);\n      return replica;\n    };\n\n    var nbsp = '\\xA0';\n\n    var getEnd = function (element) {\n      return name(element) === 'img' ? 1 : getOption(element).fold(function () {\n        return children$3(element).length;\n      }, function (v) {\n        return v.length;\n      });\n    };\n    var isTextNodeWithCursorPosition = function (el) {\n      return getOption(el).filter(function (text) {\n        return text.trim().length !== 0 || text.indexOf(nbsp) > -1;\n      }).isSome();\n    };\n    var elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    var isCursorPosition = function (elem) {\n      var hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains$2(elementsWithCursorPosition, name(elem));\n    };\n\n    var first = function (element) {\n      return descendant$1(element, isCursorPosition);\n    };\n    var last$1 = function (element) {\n      return descendantRtl(element, isCursorPosition);\n    };\n    var descendantRtl = function (scope, predicate) {\n      var descend = function (element) {\n        var children = children$3(element);\n        for (var i = children.length - 1; i >= 0; i--) {\n          var child = children[i];\n          if (predicate(child)) {\n            return Optional.some(child);\n          }\n          var res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope);\n    };\n\n    var transferableAttributes = {\n      scope: [\n        'row',\n        'col'\n      ]\n    };\n    var createCell = function (doc) {\n      return function () {\n        var td = SugarElement.fromTag('td', doc.dom);\n        append$1(td, SugarElement.fromTag('br', doc.dom));\n        return td;\n      };\n    };\n    var createCol = function (doc) {\n      return function () {\n        return SugarElement.fromTag('col', doc.dom);\n      };\n    };\n    var createColgroup = function (doc) {\n      return function () {\n        return SugarElement.fromTag('colgroup', doc.dom);\n      };\n    };\n    var createRow$1 = function (doc) {\n      return function () {\n        return SugarElement.fromTag('tr', doc.dom);\n      };\n    };\n    var replace$1 = function (cell, tag, attrs) {\n      var replica = copy$1(cell, tag);\n      each$1(attrs, function (v, k) {\n        if (v === null) {\n          remove$7(replica, k);\n        } else {\n          set$2(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    var pasteReplace = function (cell) {\n      return cell;\n    };\n    var cloneFormats = function (oldCell, newCell, formats) {\n      var first$1 = first(oldCell);\n      return first$1.map(function (firstText) {\n        var formatSelector = formats.join(',');\n        var parents = ancestors$3(firstText, formatSelector, function (element) {\n          return eq$1(element, oldCell);\n        });\n        return foldr(parents, function (last, parent) {\n          var clonedFormat = shallow(parent);\n          remove$7(clonedFormat, 'contenteditable');\n          append$1(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    var cloneAppropriateAttributes = function (original, clone) {\n      each$1(transferableAttributes, function (validAttributes, attributeName) {\n        return getOpt(original, attributeName).filter(function (attribute) {\n          return contains$2(validAttributes, attribute);\n        }).each(function (attribute) {\n          return set$2(clone, attributeName, attribute);\n        });\n      });\n    };\n    var cellOperations = function (mutate, doc, formatsToClone) {\n      var cloneCss = function (prev, clone) {\n        copy$2(prev.element, clone);\n        remove$6(clone, 'height');\n        if (prev.colspan !== 1) {\n          remove$6(clone, 'width');\n        }\n      };\n      var newCell = function (prev) {\n        var td = SugarElement.fromTag(name(prev.element), doc.dom);\n        var formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        var lastNode = formats.length > 0 ? cloneFormats(prev.element, td, formats) : td;\n        append$1(lastNode, SugarElement.fromTag('br'));\n        cloneCss(prev, td);\n        cloneAppropriateAttributes(prev.element, td);\n        mutate(prev.element, td);\n        return td;\n      };\n      var newCol = function (prev) {\n        var col = SugarElement.fromTag(name(prev.element), doc.dom);\n        cloneCss(prev, col);\n        mutate(prev.element, col);\n        return col;\n      };\n      return {\n        col: newCol,\n        colgroup: createColgroup(doc),\n        row: createRow$1(doc),\n        cell: newCell,\n        replace: replace$1,\n        colGap: createCol(doc),\n        gap: createCell(doc)\n      };\n    };\n    var paste$1 = function (doc) {\n      return {\n        col: createCol(doc),\n        colgroup: createColgroup(doc),\n        row: createRow$1(doc),\n        cell: createCell(doc),\n        replace: pasteReplace,\n        colGap: createCol(doc),\n        gap: createCell(doc)\n      };\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      return children$3(SugarElement.fromDom(div));\n    };\n    var fromDom = function (nodes) {\n      return map$1(nodes, SugarElement.fromDom);\n    };\n\n    var getNodeName = function (elm) {\n      return elm.nodeName.toLowerCase();\n    };\n    var getBody = function (editor) {\n      return SugarElement.fromDom(editor.getBody());\n    };\n    var getPixelWidth = function (elm) {\n      return elm.getBoundingClientRect().width;\n    };\n    var getPixelHeight = function (elm) {\n      return elm.getBoundingClientRect().height;\n    };\n    var getIsRoot = function (editor) {\n      return function (element) {\n        return eq$1(element, getBody(editor));\n      };\n    };\n    var removePxSuffix = function (size) {\n      return size ? size.replace(/px$/, '') : '';\n    };\n    var addPxSuffix = function (size) {\n      return /^\\d+(\\.\\d+)?$/.test(size) ? size + 'px' : size;\n    };\n    var removeDataStyle = function (table) {\n      remove$7(table, 'data-mce-style');\n      var removeStyleAttribute = function (element) {\n        return remove$7(element, 'data-mce-style');\n      };\n      each$2(cells$1(table), removeStyleAttribute);\n      each$2(columns$1(table), removeStyleAttribute);\n    };\n    var getRawWidth = function (editor, elm) {\n      var raw = editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      return Optional.from(raw).filter(isNotEmpty);\n    };\n    var isPercentage$1 = function (value) {\n      return /^(\\d+(\\.\\d+)?)%$/.test(value);\n    };\n    var isPixel = function (value) {\n      return /^(\\d+(\\.\\d+)?)px$/.test(value);\n    };\n    var getSelectionStart = function (editor) {\n      return SugarElement.fromDom(editor.selection.getStart());\n    };\n    var getSelectionEnd = function (editor) {\n      return SugarElement.fromDom(editor.selection.getEnd());\n    };\n\n    var selection = function (selections) {\n      return cata$2(selections.get(), constant([]), identity, pure);\n    };\n    var unmergable = function (selections) {\n      var hasSpan = function (elem, type) {\n        return getOpt(elem, type).exists(function (span) {\n          return parseInt(span, 10) > 1;\n        });\n      };\n      var hasRowOrColSpan = function (elem) {\n        return hasSpan(elem, 'rowspan') || hasSpan(elem, 'colspan');\n      };\n      var candidates = selection(selections);\n      return candidates.length > 0 && forall(candidates, hasRowOrColSpan) ? Optional.some(candidates) : Optional.none();\n    };\n    var mergable = function (table, selections, ephemera) {\n      return cata$2(selections.get(), Optional.none, function (cells) {\n        if (cells.length <= 1) {\n          return Optional.none();\n        } else {\n          return retrieveBox(table, ephemera.firstSelectedSelector, ephemera.lastSelectedSelector).map(function (bounds) {\n            return {\n              bounds: bounds,\n              cells: cells\n            };\n          });\n        }\n      }, Optional.none);\n    };\n\n    var strSelected = 'data-mce-selected';\n    var strSelectedSelector = 'td[' + strSelected + '],th[' + strSelected + ']';\n    var strAttributeSelector = '[' + strSelected + ']';\n    var strFirstSelected = 'data-mce-first-selected';\n    var strFirstSelectedSelector = 'td[' + strFirstSelected + '],th[' + strFirstSelected + ']';\n    var strLastSelected = 'data-mce-last-selected';\n    var strLastSelectedSelector = 'td[' + strLastSelected + '],th[' + strLastSelected + ']';\n    var attributeSelector = strAttributeSelector;\n    var ephemera = {\n      selected: strSelected,\n      selectedSelector: strSelectedSelector,\n      firstSelected: strFirstSelected,\n      firstSelectedSelector: strFirstSelectedSelector,\n      lastSelected: strLastSelected,\n      lastSelectedSelector: strLastSelectedSelector\n    };\n\n    var noMenu = function (cell) {\n      return {\n        element: cell,\n        mergable: Optional.none(),\n        unmergable: Optional.none(),\n        selection: [cell]\n      };\n    };\n    var forMenu = function (selections, table, cell) {\n      return {\n        element: cell,\n        mergable: mergable(table, selections, ephemera),\n        unmergable: unmergable(selections),\n        selection: selection(selections)\n      };\n    };\n    var paste = function (element, clipboard, generators) {\n      return {\n        element: element,\n        clipboard: clipboard,\n        generators: generators\n      };\n    };\n    var pasteRows = function (selections, cell, clipboard, generators) {\n      return {\n        selection: selection(selections),\n        clipboard: clipboard,\n        generators: generators\n      };\n    };\n\n    var getSelectionCellFallback = function (element) {\n      return table(element).bind(function (table) {\n        return retrieve(table, ephemera.firstSelectedSelector);\n      }).fold(constant(element), function (cells) {\n        return cells[0];\n      });\n    };\n    var getSelectionFromSelector = function (selector) {\n      return function (initCell, isRoot) {\n        var cellName = name(initCell);\n        var cell = cellName === 'col' || cellName === 'colgroup' ? getSelectionCellFallback(initCell) : initCell;\n        return closest$1(cell, selector, isRoot);\n      };\n    };\n    var getSelectionCellOrCaption = getSelectionFromSelector('th,td,caption');\n    var getSelectionCell = getSelectionFromSelector('th,td');\n    var getCellsFromSelection = function (selections) {\n      return selection(selections);\n    };\n    var getRowsFromSelection = function (selected, selector) {\n      var cellOpt = getSelectionCell(selected);\n      var rowsOpt = cellOpt.bind(function (cell) {\n        return table(cell);\n      }).map(function (table) {\n        return rows$1(table);\n      });\n      return lift2(cellOpt, rowsOpt, function (cell, rows) {\n        return filter$2(rows, function (row) {\n          return exists(fromDom(row.dom.cells), function (rowCell) {\n            return get$b(rowCell, selector) === '1' || eq$1(rowCell, cell);\n          });\n        });\n      }).getOr([]);\n    };\n\n    var extractSelected = function (cells) {\n      return table(cells[0]).map(function (table) {\n        var replica = extract$1(table, attributeSelector);\n        removeDataStyle(replica);\n        return [replica];\n      });\n    };\n    var serializeElements = function (editor, elements) {\n      return map$1(elements, function (elm) {\n        return editor.selection.serializer.serialize(elm.dom, {});\n      }).join('');\n    };\n    var getTextContent = function (elements) {\n      return map$1(elements, function (element) {\n        return element.dom.innerText;\n      }).join('');\n    };\n    var registerEvents = function (editor, selections, actions) {\n      editor.on('BeforeGetContent', function (e) {\n        var multiCellContext = function (cells) {\n          e.preventDefault();\n          extractSelected(cells).each(function (elements) {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          cata$2(selections.get(), noop, multiCellContext, noop);\n        }\n      });\n      editor.on('BeforeSetContent', function (e) {\n        if (e.selection === true && e.paste === true) {\n          var selectedCells = getCellsFromSelection(selections);\n          head(selectedCells).each(function (cell) {\n            table(cell).each(function (table) {\n              var elements = filter$2(fromHtml(e.content), function (content) {\n                return name(content) !== 'meta';\n              });\n              var isTable = isTag('table');\n              if (elements.length === 1 && isTable(elements[0])) {\n                e.preventDefault();\n                var doc = SugarElement.fromDom(editor.getDoc());\n                var generators = paste$1(doc);\n                var targets = paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(function () {\n                  editor.focus();\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n\n    var adt$7 = Adt.generate([\n      { none: [] },\n      { only: ['index'] },\n      {\n        left: [\n          'index',\n          'next'\n        ]\n      },\n      {\n        middle: [\n          'prev',\n          'index',\n          'next'\n        ]\n      },\n      {\n        right: [\n          'prev',\n          'index'\n        ]\n      }\n    ]);\n    var ColumnContext = __assign({}, adt$7);\n\n    var neighbours = function (input, index) {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    var determine = function (input, column, step, tableSize, resize) {\n      var result = input.slice(0);\n      var context = neighbours(input, column);\n      var onNone = constant(map$1(result, constant(0)));\n      var onOnly = function (index) {\n        return tableSize.singleColumnWidth(result[index], step);\n      };\n      var onLeft = function (index, next) {\n        return resize.calcLeftEdgeDeltas(result, index, next, step, tableSize.minCellWidth(), tableSize.isRelative);\n      };\n      var onMiddle = function (prev, index, next) {\n        return resize.calcMiddleDeltas(result, prev, index, next, step, tableSize.minCellWidth(), tableSize.isRelative);\n      };\n      var onRight = function (prev, index) {\n        return resize.calcRightEdgeDeltas(result, prev, index, step, tableSize.minCellWidth(), tableSize.isRelative);\n      };\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n\n    var total = function (start, end, measures) {\n      var r = 0;\n      for (var i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    var recalculateWidthForCells = function (warehouse, widths) {\n      var all = Warehouse.justCells(warehouse);\n      return map$1(all, function (cell) {\n        var width = total(cell.column, cell.column + cell.colspan, widths);\n        return {\n          element: cell.element,\n          width: width,\n          colspan: cell.colspan\n        };\n      });\n    };\n    var recalculateWidthForColumns = function (warehouse, widths) {\n      var groups = Warehouse.justColumns(warehouse);\n      return map$1(groups, function (column, index) {\n        return {\n          element: column.element,\n          width: widths[index],\n          colspan: column.colspan\n        };\n      });\n    };\n    var recalculateHeightForCells = function (warehouse, heights) {\n      var all = Warehouse.justCells(warehouse);\n      return map$1(all, function (cell) {\n        var height = total(cell.row, cell.row + cell.rowspan, heights);\n        return {\n          element: cell.element,\n          height: height,\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    var matchRowHeight = function (warehouse, heights) {\n      return map$1(warehouse.all, function (row, i) {\n        return {\n          element: row.element,\n          height: heights[i]\n        };\n      });\n    };\n\n    var sumUp = function (newSize) {\n      return foldr(newSize, function (b, a) {\n        return b + a;\n      }, 0);\n    };\n    var recalculate = function (warehouse, widths) {\n      if (Warehouse.hasColumns(warehouse)) {\n        return recalculateWidthForColumns(warehouse, widths);\n      } else {\n        return recalculateWidthForCells(warehouse, widths);\n      }\n    };\n    var recalculateAndApply = function (warehouse, widths, tableSize) {\n      var newSizes = recalculate(warehouse, widths);\n      each$2(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element, cell.width);\n      });\n    };\n    var adjustWidth = function (table, delta, index, resizing, tableSize) {\n      var warehouse = Warehouse.fromTable(table);\n      var step = tableSize.getCellDelta(delta);\n      var widths = tableSize.getWidths(warehouse, tableSize);\n      var isLastColumn = index === warehouse.grid.columns - 1;\n      var clampedStep = resizing.clampTableDelta(widths, index, step, tableSize.minCellWidth(), isLastColumn);\n      var deltas = determine(widths, index, clampedStep, tableSize, resizing);\n      var newWidths = map$1(deltas, function (dx, i) {\n        return dx + widths[i];\n      });\n      recalculateAndApply(warehouse, newWidths, tableSize);\n      resizing.resizeTable(tableSize.adjustTableWidth, clampedStep, isLastColumn);\n    };\n    var adjustHeight = function (table, delta, index, direction) {\n      var warehouse = Warehouse.fromTable(table);\n      var heights = getPixelHeights(warehouse, table, direction);\n      var newHeights = map$1(heights, function (dy, i) {\n        return index === i ? Math.max(delta + dy, minHeight()) : dy;\n      });\n      var newCellSizes = recalculateHeightForCells(warehouse, newHeights);\n      var newRowSizes = matchRowHeight(warehouse, newHeights);\n      each$2(newRowSizes, function (row) {\n        setHeight(row.element, row.height);\n      });\n      each$2(newCellSizes, function (cell) {\n        setHeight(cell.element, cell.height);\n      });\n      var total = sumUp(newHeights);\n      setHeight(table, total);\n    };\n    var adjustAndRedistributeWidths$1 = function (_table, list, details, tableSize, resizeBehaviour) {\n      var warehouse = Warehouse.generate(list);\n      var sizes = tableSize.getWidths(warehouse, tableSize);\n      var tablePixelWidth = tableSize.pixelWidth();\n      var _a = resizeBehaviour.calcRedestributedWidths(sizes, tablePixelWidth, details.pixelDelta, tableSize.isRelative), newSizes = _a.newSizes, delta = _a.delta;\n      recalculateAndApply(warehouse, newSizes, tableSize);\n      tableSize.adjustTableWidth(delta);\n    };\n    var adjustWidthTo = function (_table, list, _info, tableSize) {\n      var warehouse = Warehouse.generate(list);\n      var widths = tableSize.getWidths(warehouse, tableSize);\n      recalculateAndApply(warehouse, widths, tableSize);\n    };\n\n    var zero = function (array) {\n      return map$1(array, constant(0));\n    };\n    var surround = function (sizes, startIndex, endIndex, results, f) {\n      return f(sizes.slice(0, startIndex)).concat(results).concat(f(sizes.slice(endIndex)));\n    };\n    var clampDeltaHelper = function (predicate) {\n      return function (sizes, index, delta, minCellSize) {\n        if (!predicate(delta)) {\n          return delta;\n        } else {\n          var newSize = Math.max(minCellSize, sizes[index] - Math.abs(delta));\n          var diff = Math.abs(newSize - sizes[index]);\n          return delta >= 0 ? diff : -diff;\n        }\n      };\n    };\n    var clampNegativeDelta = clampDeltaHelper(function (delta) {\n      return delta < 0;\n    });\n    var clampDelta = clampDeltaHelper(always);\n    var resizeTable = function () {\n      var calcFixedDeltas = function (sizes, index, next, delta, minCellSize) {\n        var clampedDelta = clampNegativeDelta(sizes, index, delta, minCellSize);\n        return surround(sizes, index, next + 1, [\n          clampedDelta,\n          0\n        ], zero);\n      };\n      var calcRelativeDeltas = function (sizes, index, delta, minCellSize) {\n        var ratio = (100 + delta) / 100;\n        var newThis = Math.max(minCellSize, (sizes[index] + delta) / ratio);\n        return map$1(sizes, function (size, idx) {\n          var newSize = idx === index ? newThis : size / ratio;\n          return newSize - size;\n        });\n      };\n      var calcLeftEdgeDeltas = function (sizes, index, next, delta, minCellSize, isRelative) {\n        if (isRelative) {\n          return calcRelativeDeltas(sizes, index, delta, minCellSize);\n        } else {\n          return calcFixedDeltas(sizes, index, next, delta, minCellSize);\n        }\n      };\n      var calcMiddleDeltas = function (sizes, _prev, index, next, delta, minCellSize, isRelative) {\n        return calcLeftEdgeDeltas(sizes, index, next, delta, minCellSize, isRelative);\n      };\n      var resizeTable = function (resizer, delta) {\n        return resizer(delta);\n      };\n      var calcRightEdgeDeltas = function (sizes, _prev, index, delta, minCellSize, isRelative) {\n        if (isRelative) {\n          return calcRelativeDeltas(sizes, index, delta, minCellSize);\n        } else {\n          var clampedDelta = clampNegativeDelta(sizes, index, delta, minCellSize);\n          return zero(sizes.slice(0, index)).concat([clampedDelta]);\n        }\n      };\n      var calcRedestributedWidths = function (sizes, totalWidth, pixelDelta, isRelative) {\n        if (isRelative) {\n          var tableWidth = totalWidth + pixelDelta;\n          var ratio_1 = tableWidth / totalWidth;\n          var newSizes = map$1(sizes, function (size) {\n            return size / ratio_1;\n          });\n          return {\n            delta: ratio_1 * 100 - 100,\n            newSizes: newSizes\n          };\n        } else {\n          return {\n            delta: pixelDelta,\n            newSizes: sizes\n          };\n        }\n      };\n      return {\n        resizeTable: resizeTable,\n        clampTableDelta: clampNegativeDelta,\n        calcLeftEdgeDeltas: calcLeftEdgeDeltas,\n        calcMiddleDeltas: calcMiddleDeltas,\n        calcRightEdgeDeltas: calcRightEdgeDeltas,\n        calcRedestributedWidths: calcRedestributedWidths\n      };\n    };\n    var preserveTable = function () {\n      var calcLeftEdgeDeltas = function (sizes, index, next, delta, minCellSize) {\n        var idx = delta >= 0 ? next : index;\n        var clampedDelta = clampDelta(sizes, idx, delta, minCellSize);\n        return surround(sizes, index, next + 1, [\n          clampedDelta,\n          -clampedDelta\n        ], zero);\n      };\n      var calcMiddleDeltas = function (sizes, _prev, index, next, delta, minCellSize) {\n        return calcLeftEdgeDeltas(sizes, index, next, delta, minCellSize);\n      };\n      var resizeTable = function (resizer, delta, isLastColumn) {\n        if (isLastColumn) {\n          resizer(delta);\n        }\n      };\n      var calcRightEdgeDeltas = function (sizes, _prev, _index, delta, _minCellSize, isRelative) {\n        if (isRelative) {\n          return zero(sizes);\n        } else {\n          var diff = delta / sizes.length;\n          return map$1(sizes, constant(diff));\n        }\n      };\n      var clampTableDelta = function (sizes, index, delta, minCellSize, isLastColumn) {\n        if (isLastColumn) {\n          if (delta >= 0) {\n            return delta;\n          } else {\n            var maxDelta = foldl(sizes, function (a, b) {\n              return a + b - minCellSize;\n            }, 0);\n            return Math.max(-maxDelta, delta);\n          }\n        } else {\n          return clampNegativeDelta(sizes, index, delta, minCellSize);\n        }\n      };\n      var calcRedestributedWidths = function (sizes, _totalWidth, _pixelDelta, _isRelative) {\n        return {\n          delta: 0,\n          newSizes: sizes\n        };\n      };\n      return {\n        resizeTable: resizeTable,\n        clampTableDelta: clampTableDelta,\n        calcLeftEdgeDeltas: calcLeftEdgeDeltas,\n        calcMiddleDeltas: calcMiddleDeltas,\n        calcRightEdgeDeltas: calcRightEdgeDeltas,\n        calcRedestributedWidths: calcRedestributedWidths\n      };\n    };\n\n    var only = function (element, isResizable) {\n      var parent = Optional.from(element.dom.documentElement).map(SugarElement.fromDom).getOr(element);\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(SugarPosition(0, 0)),\n        isResizable: isResizable\n      };\n    };\n    var detached = function (editable, chrome, isResizable) {\n      var origin = function () {\n        return absolute(chrome);\n      };\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: origin,\n        isResizable: isResizable\n      };\n    };\n    var body = function (editable, chrome, isResizable) {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(SugarPosition(0, 0)),\n        isResizable: isResizable\n      };\n    };\n    var ResizeWire = {\n      only: only,\n      detached: detached,\n      body: body\n    };\n\n    var adt$6 = Adt.generate([\n      { invalid: ['raw'] },\n      { pixels: ['value'] },\n      { percent: ['value'] }\n    ]);\n    var validateFor = function (suffix, type, value) {\n      var rawAmount = value.substring(0, value.length - suffix.length);\n      var amount = parseFloat(rawAmount);\n      return rawAmount === amount.toString() ? type(amount) : adt$6.invalid(value);\n    };\n    var from = function (value) {\n      if (endsWith(value, '%')) {\n        return validateFor('%', adt$6.percent, value);\n      }\n      if (endsWith(value, 'px')) {\n        return validateFor('px', adt$6.pixels, value);\n      }\n      return adt$6.invalid(value);\n    };\n    var Size = __assign(__assign({}, adt$6), { from: from });\n\n    var redistributeToPercent = function (widths, totalWidth) {\n      return map$1(widths, function (w) {\n        var colType = Size.from(w);\n        return colType.fold(function () {\n          return w;\n        }, function (px) {\n          var ratio = px / totalWidth * 100;\n          return ratio + '%';\n        }, function (pc) {\n          return pc + '%';\n        });\n      });\n    };\n    var redistributeToPx = function (widths, totalWidth, newTotalWidth) {\n      var scale = newTotalWidth / totalWidth;\n      return map$1(widths, function (w) {\n        var colType = Size.from(w);\n        return colType.fold(function () {\n          return w;\n        }, function (px) {\n          return px * scale + 'px';\n        }, function (pc) {\n          return pc / 100 * newTotalWidth + 'px';\n        });\n      });\n    };\n    var redistributeEmpty = function (newWidthType, columns) {\n      var f = newWidthType.fold(function () {\n        return constant('');\n      }, function (pixels) {\n        var num = pixels / columns;\n        return constant(num + 'px');\n      }, function () {\n        var num = 100 / columns;\n        return constant(num + '%');\n      });\n      return range$1(columns, f);\n    };\n    var redistributeValues = function (newWidthType, widths, totalWidth) {\n      return newWidthType.fold(function () {\n        return widths;\n      }, function (px) {\n        return redistributeToPx(widths, totalWidth, px);\n      }, function (_pc) {\n        return redistributeToPercent(widths, totalWidth);\n      });\n    };\n    var redistribute$1 = function (widths, totalWidth, newWidth) {\n      var newType = Size.from(newWidth);\n      var floats = forall(widths, function (s) {\n        return s === '0px';\n      }) ? redistributeEmpty(newType, widths.length) : redistributeValues(newType, widths, totalWidth);\n      return normalize(floats);\n    };\n    var sum = function (values, fallback) {\n      if (values.length === 0) {\n        return fallback;\n      }\n      return foldr(values, function (rest, v) {\n        return Size.from(v).fold(constant(0), identity, identity) + rest;\n      }, 0);\n    };\n    var roundDown = function (num, unit) {\n      var floored = Math.floor(num);\n      return {\n        value: floored + unit,\n        remainder: num - floored\n      };\n    };\n    var add$3 = function (value, amount) {\n      return Size.from(value).fold(constant(value), function (px) {\n        return px + amount + 'px';\n      }, function (pc) {\n        return pc + amount + '%';\n      });\n    };\n    var normalize = function (values) {\n      if (values.length === 0) {\n        return values;\n      }\n      var scan = foldr(values, function (rest, value) {\n        var info = Size.from(value).fold(function () {\n          return {\n            value: value,\n            remainder: 0\n          };\n        }, function (num) {\n          return roundDown(num, 'px');\n        }, function (num) {\n          return {\n            value: num + '%',\n            remainder: 0\n          };\n        });\n        return {\n          output: [info.value].concat(rest.output),\n          remainder: rest.remainder + info.remainder\n        };\n      }, {\n        output: [],\n        remainder: 0\n      });\n      var r = scan.output;\n      return r.slice(0, r.length - 1).concat([add$3(r[r.length - 1], Math.round(scan.remainder))]);\n    };\n    var validate = Size.from;\n\n    var redistributeToW = function (newWidths, cells, unit) {\n      each$2(cells, function (cell) {\n        var widths = newWidths.slice(cell.column, cell.colspan + cell.column);\n        var w = sum(widths, minWidth());\n        set$1(cell.element, 'width', w + unit);\n      });\n    };\n    var redistributeToColumns = function (newWidths, columns, unit) {\n      each$2(columns, function (column, index) {\n        var width = sum([newWidths[index]], minWidth());\n        set$1(column.element, 'width', width + unit);\n      });\n    };\n    var redistributeToH = function (newHeights, rows, cells, unit) {\n      each$2(cells, function (cell) {\n        var heights = newHeights.slice(cell.row, cell.rowspan + cell.row);\n        var h = sum(heights, minHeight());\n        set$1(cell.element, 'height', h + unit);\n      });\n      each$2(rows, function (row, i) {\n        set$1(row.element, 'height', newHeights[i]);\n      });\n    };\n    var getUnit = function (newSize) {\n      return validate(newSize).fold(constant('px'), constant('px'), constant('%'));\n    };\n    var redistribute = function (table, optWidth, optHeight) {\n      var warehouse = Warehouse.fromTable(table);\n      var rows = warehouse.all;\n      var cells = Warehouse.justCells(warehouse);\n      var columns = Warehouse.justColumns(warehouse);\n      optWidth.each(function (newWidth) {\n        var widthUnit = getUnit(newWidth);\n        var totalWidth = get$8(table);\n        var oldWidths = getRawWidths(warehouse, table);\n        var nuWidths = redistribute$1(oldWidths, totalWidth, newWidth);\n        if (Warehouse.hasColumns(warehouse)) {\n          redistributeToColumns(nuWidths, columns, widthUnit);\n        } else {\n          redistributeToW(nuWidths, cells, widthUnit);\n        }\n        set$1(table, 'width', newWidth);\n      });\n      optHeight.each(function (newHeight) {\n        var hUnit = getUnit(newHeight);\n        var totalHeight = get$7(table);\n        var oldHeights = getRawHeights(warehouse, table, height);\n        var nuHeights = redistribute$1(oldHeights, totalHeight, newHeight);\n        redistributeToH(nuHeights, rows, cells, hUnit);\n        set$1(table, 'height', newHeight);\n      });\n    };\n    var isPercentSizing = isPercentSizing$1;\n    var isPixelSizing = isPixelSizing$1;\n    var isNoneSizing = isNoneSizing$1;\n\n    var getGridSize = function (table) {\n      var warehouse = Warehouse.fromTable(table);\n      return warehouse.grid;\n    };\n\n    var Event = function (fields) {\n      var handlers = [];\n      var bind = function (handler) {\n        if (handler === undefined) {\n          throw new Error('Event bind error: undefined handler');\n        }\n        handlers.push(handler);\n      };\n      var unbind = function (handler) {\n        handlers = filter$2(handlers, function (h) {\n          return h !== handler;\n        });\n      };\n      var trigger = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var event = {};\n        each$2(fields, function (name, i) {\n          event[name] = args[i];\n        });\n        each$2(handlers, function (handler) {\n          handler(event);\n        });\n      };\n      return {\n        bind: bind,\n        unbind: unbind,\n        trigger: trigger\n      };\n    };\n\n    var create$4 = function (typeDefs) {\n      var registry = map(typeDefs, function (event) {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      var trigger = map(typeDefs, function (event) {\n        return event.trigger;\n      });\n      return {\n        registry: registry,\n        trigger: trigger\n      };\n    };\n\n    var last = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        cancel();\n        timer = setTimeout(function () {\n          timer = null;\n          fn.apply(null, args);\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    var sort = function (arr) {\n      return arr.slice(0).sort();\n    };\n    var reqMessage = function (required, keys) {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    var unsuppMessage = function (unsupported) {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    var validateStrArr = function (label, array) {\n      if (!isArray(array)) {\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      }\n      each$2(array, function (a) {\n        if (!isString(a)) {\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n        }\n      });\n    };\n    var invalidTypeMessage = function (incorrect, type) {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    var checkDupes = function (everything) {\n      var sorted = sort(everything);\n      var dupe = find$1(sorted, function (s, i) {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(function (d) {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    var base = function (handleUnsupported, required) {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    var baseWith = function (handleUnsupported, required, pred) {\n      if (required.length === 0) {\n        throw new Error('You must specify at least one required field.');\n      }\n      validateStrArr('required', required);\n      checkDupes(required);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains$2(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        handleUnsupported(required, keys$1);\n        var invalidKeys = filter$2(required, function (key) {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0) {\n          invalidTypeMessage(invalidKeys, pred.label);\n        }\n        return obj;\n      };\n    };\n    var handleExact = function (required, keys) {\n      var unsupported = filter$2(keys, function (key) {\n        return !contains$2(required, key);\n      });\n      if (unsupported.length > 0) {\n        unsuppMessage(unsupported);\n      }\n    };\n    var exactly = function (required) {\n      return base(handleExact, required);\n    };\n\n    var DragMode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    var DragSink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    var DragApi = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n\n    var InDrag = function () {\n      var previous = Optional.none();\n      var reset = function () {\n        previous = Optional.none();\n      };\n      var update = function (mode, nu) {\n        var result = previous.map(function (old) {\n          return mode.compare(old, nu);\n        });\n        previous = Optional.some(nu);\n        return result;\n      };\n      var onEvent = function (event, mode) {\n        var dataOption = mode.extract(event);\n        dataOption.each(function (data) {\n          var offset = update(mode, data);\n          offset.each(function (d) {\n            events.trigger.move(d);\n          });\n        });\n      };\n      var events = create$4({ move: Event(['info']) });\n      return {\n        onEvent: onEvent,\n        reset: reset,\n        events: events.registry\n      };\n    };\n\n    var NoDrag = function () {\n      var events = create$4({ move: Event(['info']) });\n      return {\n        onEvent: noop,\n        reset: noop,\n        events: events.registry\n      };\n    };\n\n    var Movement = function () {\n      var noDragState = NoDrag();\n      var inDragState = InDrag();\n      var dragState = noDragState;\n      var on = function () {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      var off = function () {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      var onEvent = function (event, mode) {\n        dragState.onEvent(event, mode);\n      };\n      var isOn = function () {\n        return dragState === inDragState;\n      };\n      return {\n        on: on,\n        off: off,\n        isOn: isOn,\n        onEvent: onEvent,\n        events: inDragState.events\n      };\n    };\n\n    var setup = function (mutation, mode, settings) {\n      var active = false;\n      var events = create$4({\n        start: Event([]),\n        stop: Event([])\n      });\n      var movement = Movement();\n      var drop = function () {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      var throttledDrop = last(drop, 200);\n      var go = function (parent) {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      var mousemove = function (event) {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(function (event) {\n        mode.mutate(mutation, event.info);\n      });\n      var on = function () {\n        active = true;\n      };\n      var off = function () {\n        active = false;\n      };\n      var runIfActive = function (f) {\n        return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          if (active) {\n            f.apply(null, args);\n          }\n        };\n      };\n      var sink = mode.sink(DragApi({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      var destroy = function () {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go: go,\n        on: on,\n        off: off,\n        destroy: destroy,\n        events: events.registry\n      };\n    };\n\n    var mkEvent = function (target, x, y, stop, prevent, kill, raw) {\n      return {\n        target: target,\n        x: x,\n        y: y,\n        stop: stop,\n        prevent: prevent,\n        kill: kill,\n        raw: raw\n      };\n    };\n    var fromRawEvent$1 = function (rawEvent) {\n      var target = SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));\n      var stop = function () {\n        return rawEvent.stopPropagation();\n      };\n      var prevent = function () {\n        return rawEvent.preventDefault();\n      };\n      var kill = compose(prevent, stop);\n      return mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n    };\n    var handle$2 = function (filter, handler) {\n      return function (rawEvent) {\n        if (filter(rawEvent)) {\n          handler(fromRawEvent$1(rawEvent));\n        }\n      };\n    };\n    var binder = function (element, event, filter, handler, useCapture) {\n      var wrapped = handle$2(filter, handler);\n      element.dom.addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    var bind$1 = function (element, event, filter, handler) {\n      return binder(element, event, filter, handler, false);\n    };\n    var unbind = function (element, event, handler, useCapture) {\n      element.dom.removeEventListener(event, handler, useCapture);\n    };\n\n    var filter = always;\n    var bind = function (element, event, handler) {\n      return bind$1(element, event, filter, handler);\n    };\n    var fromRawEvent = fromRawEvent$1;\n\n    var read = function (element, attr) {\n      var value = get$b(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    var add$2 = function (element, attr, id) {\n      var old = read(element, attr);\n      var nu = old.concat([id]);\n      set$2(element, attr, nu.join(' '));\n      return true;\n    };\n    var remove$4 = function (element, attr, id) {\n      var nu = filter$2(read(element, attr), function (v) {\n        return v !== id;\n      });\n      if (nu.length > 0) {\n        set$2(element, attr, nu.join(' '));\n      } else {\n        remove$7(element, attr);\n      }\n      return false;\n    };\n\n    var supports = function (element) {\n      return element.dom.classList !== undefined;\n    };\n    var get$5 = function (element) {\n      return read(element, 'class');\n    };\n    var add$1 = function (element, clazz) {\n      return add$2(element, 'class', clazz);\n    };\n    var remove$3 = function (element, clazz) {\n      return remove$4(element, 'class', clazz);\n    };\n\n    var add = function (element, clazz) {\n      if (supports(element)) {\n        element.dom.classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    var cleanClass = function (element) {\n      var classList = supports(element) ? element.dom.classList : get$5(element);\n      if (classList.length === 0) {\n        remove$7(element, 'class');\n      }\n    };\n    var remove$2 = function (element, clazz) {\n      if (supports(element)) {\n        var classList = element.dom.classList;\n        classList.remove(clazz);\n      } else {\n        remove$3(element, clazz);\n      }\n      cleanClass(element);\n    };\n    var has = function (element, clazz) {\n      return supports(element) && element.dom.classList.contains(clazz);\n    };\n\n    var css = function (namespace) {\n      var dashNamespace = namespace.replace(/\\./g, '-');\n      var resolve = function (str) {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve: resolve };\n    };\n\n    var styles$1 = css('ephox-dragster');\n    var resolve$1 = styles$1.resolve;\n\n    var Blocker = function (options) {\n      var settings = __assign({ layerClass: resolve$1('blocker') }, options);\n      var div = SugarElement.fromTag('div');\n      set$2(div, 'role', 'presentation');\n      setAll(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add(div, resolve$1('blocker'));\n      add(div, settings.layerClass);\n      var element = constant(div);\n      var destroy = function () {\n        remove$5(div);\n      };\n      return {\n        element: element,\n        destroy: destroy\n      };\n    };\n\n    var compare = function (old, nu) {\n      return SugarPosition(nu.left - old.left, nu.top - old.top);\n    };\n    var extract = function (event) {\n      return Optional.some(SugarPosition(event.x, event.y));\n    };\n    var mutate = function (mutation, info) {\n      mutation.mutate(info.left, info.top);\n    };\n    var sink = function (dragApi, settings) {\n      var blocker = Blocker(settings);\n      var mdown = bind(blocker.element(), 'mousedown', dragApi.forceDrop);\n      var mup = bind(blocker.element(), 'mouseup', dragApi.drop);\n      var mmove = bind(blocker.element(), 'mousemove', dragApi.move);\n      var mout = bind(blocker.element(), 'mouseout', dragApi.delayDrop);\n      var destroy = function () {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      var start = function (parent) {\n        append$1(parent, blocker.element());\n      };\n      var stop = function () {\n        remove$5(blocker.element());\n      };\n      return DragSink({\n        element: blocker.element,\n        start: start,\n        stop: stop,\n        destroy: destroy\n      });\n    };\n    var MouseDrag = DragMode({\n      compare: compare,\n      extract: extract,\n      sink: sink,\n      mutate: mutate\n    });\n\n    var transform$1 = function (mutation, settings) {\n      if (settings === void 0) {\n        settings = {};\n      }\n      var mode = settings.mode !== undefined ? settings.mode : MouseDrag;\n      return setup(mutation, mode, settings);\n    };\n\n    var closest = function (target) {\n      return closest$1(target, '[contenteditable]');\n    };\n    var isEditable$1 = function (element, assumeEditable) {\n      if (assumeEditable === void 0) {\n        assumeEditable = false;\n      }\n      if (!detect$3().browser.isIE() && inBody(element)) {\n        return element.dom.isContentEditable;\n      } else {\n        return closest(element).fold(constant(assumeEditable), function (editable) {\n          return getRaw(editable) === 'true';\n        });\n      }\n    };\n    var getRaw = function (element) {\n      return element.dom.contentEditable;\n    };\n\n    var styles = css('ephox-snooker');\n    var resolve = styles.resolve;\n\n    var Mutation = function () {\n      var events = create$4({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      var mutate = function (x, y) {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate: mutate,\n        events: events.registry\n      };\n    };\n\n    var BarMutation = function () {\n      var events = create$4({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      var target = Optional.none();\n      var delegate = Mutation();\n      delegate.events.drag.bind(function (event) {\n        target.each(function (t) {\n          events.trigger.drag(event.xDelta, event.yDelta, t);\n        });\n      });\n      var assign = function (t) {\n        target = Optional.some(t);\n      };\n      var get = function () {\n        return target;\n      };\n      return {\n        assign: assign,\n        get: get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    };\n\n    var col = function (column, x, y, w, h) {\n      var bar = SugarElement.fromTag('div');\n      setAll(bar, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll$1(bar, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return bar;\n    };\n    var row = function (r, x, y, w, h) {\n      var bar = SugarElement.fromTag('div');\n      setAll(bar, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll$1(bar, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return bar;\n    };\n\n    var resizeBar = resolve('resizer-bar');\n    var resizeRowBar = resolve('resizer-rows');\n    var resizeColBar = resolve('resizer-cols');\n    var BAR_THICKNESS = 7;\n    var resizableRows = function (warehouse, isResizable) {\n      return bind$2(warehouse.all, function (row, i) {\n        return isResizable(row.element) ? [i] : [];\n      });\n    };\n    var resizableColumns = function (warehouse, isResizable) {\n      var resizableCols = [];\n      range$1(warehouse.grid.columns, function (index) {\n        var colElmOpt = Warehouse.getColumnAt(warehouse, index).map(function (col) {\n          return col.element;\n        });\n        if (colElmOpt.forall(isResizable)) {\n          resizableCols.push(index);\n        }\n      });\n      return filter$2(resizableCols, function (colIndex) {\n        var columnCells = Warehouse.filterItems(warehouse, function (cell) {\n          return cell.column === colIndex;\n        });\n        return forall(columnCells, function (cell) {\n          return isResizable(cell.element);\n        });\n      });\n    };\n    var destroy = function (wire) {\n      var previous = descendants(wire.parent(), '.' + resizeBar);\n      each$2(previous, remove$5);\n    };\n    var drawBar = function (wire, positions, create) {\n      var origin = wire.origin();\n      each$2(positions, function (cpOption) {\n        cpOption.each(function (cp) {\n          var bar = create(origin, cp);\n          add(bar, resizeBar);\n          append$1(wire.parent(), bar);\n        });\n      });\n    };\n    var refreshCol = function (wire, colPositions, position, tableHeight) {\n      drawBar(wire, colPositions, function (origin, cp) {\n        var colBar = col(cp.col, cp.x - origin.left, position.top - origin.top, BAR_THICKNESS, tableHeight);\n        add(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    var refreshRow = function (wire, rowPositions, position, tableWidth) {\n      drawBar(wire, rowPositions, function (origin, cp) {\n        var rowBar = row(cp.row, position.left - origin.left, cp.y - origin.top, tableWidth, BAR_THICKNESS);\n        add(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    var refreshGrid = function (warhouse, wire, table, rows, cols) {\n      var position = absolute(table);\n      var isResizable = wire.isResizable;\n      var rowPositions = rows.length > 0 ? height.positions(rows, table) : [];\n      var resizableRowBars = rowPositions.length > 0 ? resizableRows(warhouse, isResizable) : [];\n      var resizableRowPositions = filter$2(rowPositions, function (_pos, i) {\n        return exists(resizableRowBars, function (barIndex) {\n          return i === barIndex;\n        });\n      });\n      refreshRow(wire, resizableRowPositions, position, getOuter$2(table));\n      var colPositions = cols.length > 0 ? width.positions(cols, table) : [];\n      var resizableColBars = colPositions.length > 0 ? resizableColumns(warhouse, isResizable) : [];\n      var resizableColPositions = filter$2(colPositions, function (_pos, i) {\n        return exists(resizableColBars, function (barIndex) {\n          return i === barIndex;\n        });\n      });\n      refreshCol(wire, resizableColPositions, position, getOuter$1(table));\n    };\n    var refresh = function (wire, table) {\n      destroy(wire);\n      if (wire.isResizable(table)) {\n        var warehouse = Warehouse.fromTable(table);\n        var rows$1 = rows(warehouse);\n        var cols = columns(warehouse);\n        refreshGrid(warehouse, wire, table, rows$1, cols);\n      }\n    };\n    var each = function (wire, f) {\n      var bars = descendants(wire.parent(), '.' + resizeBar);\n      each$2(bars, f);\n    };\n    var hide = function (wire) {\n      each(wire, function (bar) {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    var show = function (wire) {\n      each(wire, function (bar) {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    var isRowBar = function (element) {\n      return has(element, resizeRowBar);\n    };\n    var isColBar = function (element) {\n      return has(element, resizeColBar);\n    };\n\n    var resizeBarDragging = resolve('resizer-bar-dragging');\n    var BarManager = function (wire) {\n      var mutation = BarMutation();\n      var resizing = transform$1(mutation, {});\n      var hoverTable = Optional.none();\n      var getResizer = function (element, type) {\n        return Optional.from(get$b(element, type));\n      };\n      mutation.events.drag.bind(function (event) {\n        getResizer(event.target, 'data-row').each(function (_dataRow) {\n          var currentRow = getCssValue(event.target, 'top');\n          set$1(event.target, 'top', currentRow + event.yDelta + 'px');\n        });\n        getResizer(event.target, 'data-column').each(function (_dataCol) {\n          var currentCol = getCssValue(event.target, 'left');\n          set$1(event.target, 'left', currentCol + event.xDelta + 'px');\n        });\n      });\n      var getDelta = function (target, dir) {\n        var newX = getCssValue(target, dir);\n        var oldX = getAttrValue(target, 'data-initial-' + dir, 0);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(function () {\n        mutation.get().each(function (target) {\n          hoverTable.each(function (table) {\n            getResizer(target, 'data-row').each(function (row) {\n              var delta = getDelta(target, 'top');\n              remove$7(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(function (column) {\n              var delta = getDelta(target, 'left');\n              remove$7(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            refresh(wire, table);\n          });\n        });\n      });\n      var handler = function (target, dir) {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set$2(target, 'data-initial-' + dir, getCssValue(target, dir));\n        add(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      var mousedown = bind(wire.parent(), 'mousedown', function (event) {\n        if (isRowBar(event.target)) {\n          handler(event.target, 'top');\n        }\n        if (isColBar(event.target)) {\n          handler(event.target, 'left');\n        }\n      });\n      var isRoot = function (e) {\n        return eq$1(e, wire.view());\n      };\n      var findClosestEditableTable = function (target) {\n        return closest$1(target, 'table', isRoot).filter(isEditable$1);\n      };\n      var mouseover = bind(wire.view(), 'mouseover', function (event) {\n        findClosestEditableTable(event.target).fold(function () {\n          if (inBody(event.target)) {\n            destroy(wire);\n          }\n        }, function (table) {\n          hoverTable = Optional.some(table);\n          refresh(wire, table);\n        });\n      });\n      var destroy$1 = function () {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        destroy(wire);\n      };\n      var refresh$1 = function (tbl) {\n        refresh(wire, tbl);\n      };\n      var events = create$4({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy$1,\n        refresh: refresh$1,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(hide, wire),\n        showBars: curry(show, wire),\n        events: events.registry\n      };\n    };\n\n    var create$3 = function (wire, resizing, lazySizing) {\n      var hdirection = height;\n      var vdirection = width;\n      var manager = BarManager(wire);\n      var events = create$4({\n        beforeResize: Event([\n          'table',\n          'type'\n        ]),\n        afterResize: Event([\n          'table',\n          'type'\n        ]),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(function (event) {\n        var table = event.table;\n        events.trigger.beforeResize(table, 'row');\n        var delta = hdirection.delta(event.delta, table);\n        adjustHeight(table, delta, event.row, hdirection);\n        events.trigger.afterResize(table, 'row');\n      });\n      manager.events.startAdjust.bind(function (_event) {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(function (event) {\n        var table = event.table;\n        events.trigger.beforeResize(table, 'col');\n        var delta = vdirection.delta(event.delta, table);\n        var tableSize = lazySizing(table);\n        adjustWidth(table, delta, event.column, resizing, tableSize);\n        events.trigger.afterResize(table, 'col');\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    };\n    var TableResize = { create: create$3 };\n\n    var fireNewRow = function (editor, row) {\n      return editor.fire('newrow', { node: row });\n    };\n    var fireNewCell = function (editor, cell) {\n      return editor.fire('newcell', { node: cell });\n    };\n    var fireObjectResizeStart = function (editor, target, width, height, origin) {\n      editor.fire('ObjectResizeStart', {\n        target: target,\n        width: width,\n        height: height,\n        origin: origin\n      });\n    };\n    var fireObjectResized = function (editor, target, width, height, origin) {\n      editor.fire('ObjectResized', {\n        target: target,\n        width: width,\n        height: height,\n        origin: origin\n      });\n    };\n    var fireTableSelectionChange = function (editor, cells, start, finish, otherCells) {\n      editor.fire('TableSelectionChange', {\n        cells: cells,\n        start: start,\n        finish: finish,\n        otherCells: otherCells\n      });\n    };\n    var fireTableSelectionClear = function (editor) {\n      editor.fire('TableSelectionClear');\n    };\n    var fireTableModified = function (editor, table, data) {\n      editor.fire('TableModified', __assign(__assign({}, data), { table: table }));\n    };\n    var styleModified = {\n      structure: false,\n      style: true\n    };\n    var structureModified = {\n      structure: true,\n      style: false\n    };\n    var styleAndStructureModified = {\n      structure: true,\n      style: true\n    };\n\n    var defaultTableToolbar = 'tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol';\n    var defaultStyles = {\n      'border-collapse': 'collapse',\n      'width': '100%'\n    };\n    var defaultCellBorderWidths = range$1(5, function (i) {\n      var size = i + 1 + 'px';\n      return {\n        title: size,\n        value: size\n      };\n    });\n    var defaultCellBorderStyles = map$1([\n      'Solid',\n      'Dotted',\n      'Dashed',\n      'Double',\n      'Groove',\n      'Ridge',\n      'Inset',\n      'Outset',\n      'None',\n      'Hidden'\n    ], function (type) {\n      return {\n        title: type,\n        value: type.toLowerCase()\n      };\n    });\n    var determineDefaultStyles = function (editor) {\n      var _a;\n      if (isPixelsForced(editor)) {\n        var dom = editor.dom;\n        var parentBlock = (_a = dom.getParent(editor.selection.getStart(), dom.isBlock)) !== null && _a !== void 0 ? _a : editor.getBody();\n        var contentWidth = getInner(SugarElement.fromDom(parentBlock));\n        return __assign(__assign({}, defaultStyles), { width: contentWidth + 'px' });\n      } else if (isResponsiveForced(editor)) {\n        return filter$1(defaultStyles, function (_value, key) {\n          return key !== 'width';\n        });\n      } else {\n        return defaultStyles;\n      }\n    };\n    var defaultAttributes = { border: '1' };\n    var defaultColumnResizingBehaviour = 'preservetable';\n    var getTableSizingMode = function (editor) {\n      return editor.getParam('table_sizing_mode', 'auto');\n    };\n    var getTableResponseWidth = function (editor) {\n      return editor.getParam('table_responsive_width');\n    };\n    var getTableBorderWidths = function (editor) {\n      return editor.getParam('table_border_widths', defaultCellBorderWidths, 'array');\n    };\n    var getTableBorderStyles = function (editor) {\n      return editor.getParam('table_border_styles', defaultCellBorderStyles, 'array');\n    };\n    var getDefaultAttributes = function (editor) {\n      return editor.getParam('table_default_attributes', defaultAttributes, 'object');\n    };\n    var getDefaultStyles = function (editor) {\n      return editor.getParam('table_default_styles', determineDefaultStyles(editor), 'object');\n    };\n    var hasTableResizeBars = function (editor) {\n      return editor.getParam('table_resize_bars', true, 'boolean');\n    };\n    var hasTabNavigation = function (editor) {\n      return editor.getParam('table_tab_navigation', true, 'boolean');\n    };\n    var hasAdvancedCellTab = function (editor) {\n      return editor.getParam('table_cell_advtab', true, 'boolean');\n    };\n    var hasAdvancedRowTab = function (editor) {\n      return editor.getParam('table_row_advtab', true, 'boolean');\n    };\n    var hasAdvancedTableTab = function (editor) {\n      return editor.getParam('table_advtab', true, 'boolean');\n    };\n    var hasAppearanceOptions = function (editor) {\n      return editor.getParam('table_appearance_options', true, 'boolean');\n    };\n    var hasTableGrid = function (editor) {\n      return editor.getParam('table_grid', true, 'boolean');\n    };\n    var shouldStyleWithCss = function (editor) {\n      return editor.getParam('table_style_by_css', false, 'boolean');\n    };\n    var getCellClassList = function (editor) {\n      return editor.getParam('table_cell_class_list', [], 'array');\n    };\n    var getRowClassList = function (editor) {\n      return editor.getParam('table_row_class_list', [], 'array');\n    };\n    var getTableClassList = function (editor) {\n      return editor.getParam('table_class_list', [], 'array');\n    };\n    var isPercentagesForced = function (editor) {\n      return getTableSizingMode(editor) === 'relative' || getTableResponseWidth(editor) === true;\n    };\n    var isPixelsForced = function (editor) {\n      return getTableSizingMode(editor) === 'fixed' || getTableResponseWidth(editor) === false;\n    };\n    var isResponsiveForced = function (editor) {\n      return getTableSizingMode(editor) === 'responsive';\n    };\n    var getToolbar = function (editor) {\n      return editor.getParam('table_toolbar', defaultTableToolbar);\n    };\n    var useColumnGroup = function (editor) {\n      return editor.getParam('table_use_colgroups', false, 'boolean');\n    };\n    var getTableHeaderType = function (editor) {\n      var defaultValue = 'section';\n      var value = editor.getParam('table_header_type', defaultValue, 'string');\n      var validValues = [\n        'section',\n        'cells',\n        'sectionCells',\n        'auto'\n      ];\n      if (!contains$2(validValues, value)) {\n        return defaultValue;\n      } else {\n        return value;\n      }\n    };\n    var getColumnResizingBehaviour = function (editor) {\n      var validModes = [\n        'preservetable',\n        'resizetable'\n      ];\n      var givenMode = editor.getParam('table_column_resizing', defaultColumnResizingBehaviour, 'string');\n      return find$1(validModes, function (mode) {\n        return mode === givenMode;\n      }).getOr(defaultColumnResizingBehaviour);\n    };\n    var isPreserveTableColumnResizing = function (editor) {\n      return getColumnResizingBehaviour(editor) === 'preservetable';\n    };\n    var isResizeTableColumnResizing = function (editor) {\n      return getColumnResizingBehaviour(editor) === 'resizetable';\n    };\n    var getCloneElements = function (editor) {\n      var cloneElements = editor.getParam('table_clone_elements');\n      if (isString(cloneElements)) {\n        return Optional.some(cloneElements.split(/[ ,]/));\n      } else if (Array.isArray(cloneElements)) {\n        return Optional.some(cloneElements);\n      } else {\n        return Optional.none();\n      }\n    };\n    var hasObjectResizing = function (editor) {\n      var objectResizing = editor.getParam('object_resizing', true);\n      return isString(objectResizing) ? objectResizing === 'table' : objectResizing;\n    };\n    var getTableBackgroundColorMap = function (editor) {\n      return editor.getParam('table_background_color_map', [], 'array');\n    };\n    var getTableBorderColorMap = function (editor) {\n      return editor.getParam('table_border_color_map', [], 'array');\n    };\n\n    var get$4 = function (editor, table) {\n      if (isPercentagesForced(editor)) {\n        return TableSize.percentageSize(table);\n      } else if (isPixelsForced(editor)) {\n        return TableSize.pixelSize(table);\n      } else {\n        return TableSize.getTableSize(table);\n      }\n    };\n\n    var cleanupLegacyAttributes = function (element) {\n      remove$7(element, 'width');\n    };\n    var convertToPercentSize = function (table) {\n      var newWidth = getPercentTableWidth(table);\n      redistribute(table, Optional.some(newWidth), Optional.none());\n      cleanupLegacyAttributes(table);\n    };\n    var convertToPixelSize = function (table) {\n      var newWidth = getPixelTableWidth(table);\n      redistribute(table, Optional.some(newWidth), Optional.none());\n      cleanupLegacyAttributes(table);\n    };\n    var convertToNoneSize = function (table) {\n      remove$6(table, 'width');\n      var columns = columns$1(table);\n      var rowElements = columns.length > 0 ? columns : cells$1(table);\n      each$2(rowElements, function (cell) {\n        remove$6(cell, 'width');\n        cleanupLegacyAttributes(cell);\n      });\n      cleanupLegacyAttributes(table);\n    };\n\n    var enforcePercentage = convertToPercentSize;\n    var enforcePixels = convertToPixelSize;\n    var enforceNone = convertToNoneSize;\n    var syncPixels = function (table) {\n      var warehouse = Warehouse.fromTable(table);\n      if (!Warehouse.hasColumns(warehouse)) {\n        each$2(cells$1(table), function (cell) {\n          var computedWidth = get$a(cell, 'width');\n          set$1(cell, 'width', computedWidth);\n          remove$7(cell, 'width');\n        });\n      }\n    };\n\n    var createContainer = function () {\n      var container = SugarElement.fromTag('div');\n      setAll(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append$1(body$1(), container);\n      return container;\n    };\n    var get$3 = function (editor, isResizable) {\n      return editor.inline ? ResizeWire.body(getBody(editor), createContainer(), isResizable) : ResizeWire.only(SugarElement.fromDom(editor.getDoc()), isResizable);\n    };\n    var remove$1 = function (editor, wire) {\n      if (editor.inline) {\n        remove$5(wire.parent());\n      }\n    };\n\n    var barResizerPrefix = 'bar-';\n    var isResizable = function (elm) {\n      return get$b(elm, 'data-mce-resize') !== 'false';\n    };\n    var getResizeHandler = function (editor) {\n      var selectionRng = Optional.none();\n      var resize = Optional.none();\n      var wire = Optional.none();\n      var startW;\n      var startRawW;\n      var isTable = function (elm) {\n        return elm.nodeName === 'TABLE';\n      };\n      var lazyResize = function () {\n        return resize;\n      };\n      var lazyWire = function () {\n        return wire.getOr(ResizeWire.only(SugarElement.fromDom(editor.getBody()), isResizable));\n      };\n      var lazySizing = function (table) {\n        return get$4(editor, table);\n      };\n      var lazyResizingBehaviour = function () {\n        return isPreserveTableColumnResizing(editor) ? preserveTable() : resizeTable();\n      };\n      var getNumColumns = function (table) {\n        return getGridSize(table).columns;\n      };\n      var afterCornerResize = function (table, origin, width) {\n        var isRightEdgeResize = endsWith(origin, 'e');\n        if (startRawW === '') {\n          enforcePercentage(table);\n        }\n        if (width !== startW && startRawW !== '') {\n          set$1(table, 'width', startRawW);\n          var resizing = lazyResizingBehaviour();\n          var tableSize = lazySizing(table);\n          var col = isPreserveTableColumnResizing(editor) || isRightEdgeResize ? getNumColumns(table) - 1 : 0;\n          adjustWidth(table, width - startW, col, resizing, tableSize);\n        } else if (isPercentage$1(startRawW)) {\n          var percentW = parseFloat(startRawW.replace('%', ''));\n          var targetPercentW = width * percentW / startW;\n          set$1(table, 'width', targetPercentW + '%');\n        }\n        if (isPixel(startRawW)) {\n          syncPixels(table);\n        }\n      };\n      var destroy = function () {\n        resize.each(function (sz) {\n          sz.destroy();\n        });\n        wire.each(function (w) {\n          remove$1(editor, w);\n        });\n      };\n      editor.on('init', function () {\n        var rawWire = get$3(editor, isResizable);\n        wire = Optional.some(rawWire);\n        if (hasObjectResizing(editor) && hasTableResizeBars(editor)) {\n          var resizing = lazyResizingBehaviour();\n          var sz = TableResize.create(rawWire, resizing, lazySizing);\n          sz.on();\n          sz.events.startDrag.bind(function (_event) {\n            selectionRng = Optional.some(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(function (event) {\n            var rawTable = event.table.dom;\n            fireObjectResizeStart(editor, rawTable, getPixelWidth(rawTable), getPixelHeight(rawTable), barResizerPrefix + event.type);\n          });\n          sz.events.afterResize.bind(function (event) {\n            var table = event.table;\n            var rawTable = table.dom;\n            removeDataStyle(table);\n            selectionRng.each(function (rng) {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth(rawTable), getPixelHeight(rawTable), barResizerPrefix + event.type);\n            editor.undoManager.add();\n          });\n          resize = Optional.some(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          var table = SugarElement.fromDom(targetElm);\n          each$2(editor.dom.select('.mce-clonedresizable'), function (clone) {\n            editor.dom.addClass(clone, 'mce-' + getColumnResizingBehaviour(editor) + '-columns');\n          });\n          if (!isPixelSizing(table) && isPixelsForced(editor)) {\n            enforcePixels(table);\n          } else if (!isPercentSizing(table) && isPercentagesForced(editor)) {\n            enforcePercentage(table);\n          }\n          if (isNoneSizing(table) && startsWith(e.origin, barResizerPrefix)) {\n            enforcePercentage(table);\n          }\n          startW = e.width;\n          startRawW = isResponsiveForced(editor) ? '' : getRawWidth(editor, targetElm).getOr('');\n        }\n      });\n      editor.on('ObjectResized', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          var table = SugarElement.fromDom(targetElm);\n          var origin_1 = e.origin;\n          if (startsWith(origin_1, 'corner-')) {\n            afterCornerResize(table, origin_1, e.width);\n          }\n          removeDataStyle(table);\n          fireTableModified(editor, table.dom, styleModified);\n        }\n      });\n      editor.on('SwitchMode', function () {\n        lazyResize().each(function (resize) {\n          if (editor.mode.isReadOnly()) {\n            resize.hideBars();\n          } else {\n            resize.showBars();\n          }\n        });\n      });\n      return {\n        lazyResize: lazyResize,\n        lazyWire: lazyWire,\n        destroy: destroy\n      };\n    };\n\n    var point = function (element, offset) {\n      return {\n        element: element,\n        offset: offset\n      };\n    };\n\n    var scan$1 = function (universe, element, direction) {\n      if (universe.property().isText(element) && universe.property().getText(element).trim().length === 0 || universe.property().isComment(element)) {\n        return direction(element).bind(function (elem) {\n          return scan$1(universe, elem, direction).orThunk(function () {\n            return Optional.some(elem);\n          });\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    var toEnd = function (universe, element) {\n      if (universe.property().isText(element)) {\n        return universe.property().getText(element).length;\n      }\n      var children = universe.property().children(element);\n      return children.length;\n    };\n    var freefallRtl$2 = function (universe, element) {\n      var candidate = scan$1(universe, element, universe.query().prevSibling).getOr(element);\n      if (universe.property().isText(candidate)) {\n        return point(candidate, toEnd(universe, candidate));\n      }\n      var children = universe.property().children(candidate);\n      return children.length > 0 ? freefallRtl$2(universe, children[children.length - 1]) : point(candidate, toEnd(universe, candidate));\n    };\n\n    var freefallRtl$1 = freefallRtl$2;\n\n    var universe$2 = DomUniverse();\n    var freefallRtl = function (element) {\n      return freefallRtl$1(universe$2, element);\n    };\n\n    var halve = function (main, other) {\n      var colspan = getSpan(main, 'colspan');\n      if (colspan === 1) {\n        var width = getGenericWidth(main);\n        width.each(function (w) {\n          var newWidth = w.value / 2;\n          setGenericWidth(main, newWidth, w.unit);\n          setGenericWidth(other, newWidth, w.unit);\n        });\n      }\n    };\n\n    var isHeaderCell = isTag('th');\n    var isHeaderCells = function (cells) {\n      return forall(cells, function (cell) {\n        return isHeaderCell(cell.element);\n      });\n    };\n    var getRowHeaderType = function (isHeaderRow, isHeaderCells) {\n      if (isHeaderRow && isHeaderCells) {\n        return 'sectionCells';\n      } else if (isHeaderRow) {\n        return 'section';\n      } else {\n        return 'cells';\n      }\n    };\n    var getRowType$1 = function (row) {\n      var isHeaderRow = row.section === 'thead';\n      var isHeaderCells = is(findCommonCellType(row.cells), 'th');\n      if (isHeaderRow || isHeaderCells) {\n        return {\n          type: 'header',\n          subType: getRowHeaderType(isHeaderRow, isHeaderCells)\n        };\n      } else if (row.section === 'tfoot') {\n        return { type: 'footer' };\n      } else {\n        return { type: 'body' };\n      }\n    };\n    var findCommonCellType = function (cells) {\n      var headerCells = filter$2(cells, function (cell) {\n        return isHeaderCell(cell.element);\n      });\n      if (headerCells.length === 0) {\n        return Optional.some('td');\n      } else if (headerCells.length === cells.length) {\n        return Optional.some('th');\n      } else {\n        return Optional.none();\n      }\n    };\n    var findCommonRowType = function (rows) {\n      var rowTypes = map$1(rows, function (row) {\n        return getRowType$1(row).type;\n      });\n      var hasHeader = contains$2(rowTypes, 'header');\n      var hasFooter = contains$2(rowTypes, 'footer');\n      if (!hasHeader && !hasFooter) {\n        return Optional.some('body');\n      } else {\n        var hasBody = contains$2(rowTypes, 'body');\n        if (hasHeader && !hasBody && !hasFooter) {\n          return Optional.some('header');\n        } else if (!hasHeader && !hasBody && hasFooter) {\n          return Optional.some('footer');\n        } else {\n          return Optional.none();\n        }\n      }\n    };\n    var findTableRowHeaderType = function (warehouse) {\n      return findMap(warehouse.all, function (row) {\n        var rowType = getRowType$1(row);\n        return rowType.type === 'header' ? Optional.from(rowType.subType) : Optional.none();\n      });\n    };\n\n    var transformCell = function (cell, comparator, substitution) {\n      return elementnew(substitution(cell.element, comparator), true, cell.isLocked);\n    };\n    var transformRow = function (row, section) {\n      return row.section !== section ? rowcells(row.element, row.cells, section, row.isNew) : row;\n    };\n    var section = function () {\n      return {\n        transformRow: transformRow,\n        transformCell: function (cell, comparator, substitution) {\n          var newCell = substitution(cell.element, comparator);\n          var fixedCell = name(newCell) !== 'td' ? mutate$1(newCell, 'td') : newCell;\n          return elementnew(fixedCell, cell.isNew, cell.isLocked);\n        }\n      };\n    };\n    var sectionCells = function () {\n      return {\n        transformRow: transformRow,\n        transformCell: transformCell\n      };\n    };\n    var cells = function () {\n      return {\n        transformRow: function (row, section) {\n          var newSection = section === 'thead' ? 'tbody' : section;\n          return transformRow(row, newSection);\n        },\n        transformCell: transformCell\n      };\n    };\n    var fallback = function () {\n      return {\n        transformRow: identity,\n        transformCell: transformCell\n      };\n    };\n    var getTableSectionType = function (table, fallback) {\n      var warehouse = Warehouse.fromTable(table);\n      var type = findTableRowHeaderType(warehouse).getOr(fallback);\n      switch (type) {\n      case 'section':\n        return section();\n      case 'sectionCells':\n        return sectionCells();\n      case 'cells':\n        return cells();\n      }\n    };\n    var TableSection = {\n      getTableSectionType: getTableSectionType,\n      section: section,\n      sectionCells: sectionCells,\n      cells: cells,\n      fallback: fallback\n    };\n\n    var setIfNot = function (element, property, value, ignore) {\n      if (value === ignore) {\n        remove$7(element, property);\n      } else {\n        set$2(element, property, value);\n      }\n    };\n    var insert$1 = function (table, selector, element) {\n      last$2(children$1(table, selector)).fold(function () {\n        return prepend(table, element);\n      }, function (child) {\n        return after$5(child, element);\n      });\n    };\n    var generateSection = function (table, sectionName) {\n      var section = child$1(table, sectionName).getOrThunk(function () {\n        var newSection = SugarElement.fromTag(sectionName, owner(table).dom);\n        if (sectionName === 'thead') {\n          insert$1(table, 'caption,colgroup', newSection);\n        } else if (sectionName === 'colgroup') {\n          insert$1(table, 'caption', newSection);\n        } else {\n          append$1(table, newSection);\n        }\n        return newSection;\n      });\n      empty(section);\n      return section;\n    };\n    var render$1 = function (table, grid) {\n      var newRows = [];\n      var newCells = [];\n      var syncRows = function (gridSection) {\n        return map$1(gridSection, function (row) {\n          if (row.isNew) {\n            newRows.push(row.element);\n          }\n          var tr = row.element;\n          empty(tr);\n          each$2(row.cells, function (cell) {\n            if (cell.isNew) {\n              newCells.push(cell.element);\n            }\n            setIfNot(cell.element, 'colspan', cell.colspan, 1);\n            setIfNot(cell.element, 'rowspan', cell.rowspan, 1);\n            append$1(tr, cell.element);\n          });\n          return tr;\n        });\n      };\n      var syncColGroup = function (gridSection) {\n        return bind$2(gridSection, function (colGroup) {\n          return map$1(colGroup.cells, function (col) {\n            setIfNot(col.element, 'span', col.colspan, 1);\n            return col.element;\n          });\n        });\n      };\n      var renderSection = function (gridSection, sectionName) {\n        var section = generateSection(table, sectionName);\n        var sync = sectionName === 'colgroup' ? syncColGroup : syncRows;\n        var sectionElems = sync(gridSection);\n        append(section, sectionElems);\n      };\n      var removeSection = function (sectionName) {\n        child$1(table, sectionName).each(remove$5);\n      };\n      var renderOrRemoveSection = function (gridSection, sectionName) {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      var headSection = [];\n      var bodySection = [];\n      var footSection = [];\n      var columnGroupsSection = [];\n      each$2(grid, function (row) {\n        switch (row.section) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        case 'colgroup':\n          columnGroupsSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(columnGroupsSection, 'colgroup');\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows: newRows,\n        newCells: newCells\n      };\n    };\n    var copy = function (grid) {\n      return map$1(grid, function (row) {\n        var tr = shallow(row.element);\n        each$2(row.cells, function (cell) {\n          var clonedCell = deep(cell.element);\n          setIfNot(clonedCell, 'colspan', cell.colspan, 1);\n          setIfNot(clonedCell, 'rowspan', cell.rowspan, 1);\n          append$1(tr, clonedCell);\n        });\n        return tr;\n      });\n    };\n\n    var getColumn = function (grid, index) {\n      return map$1(grid, function (row) {\n        return getCell(row, index);\n      });\n    };\n    var getRow = function (grid, index) {\n      return grid[index];\n    };\n    var findDiff = function (xs, comp) {\n      if (xs.length === 0) {\n        return 0;\n      }\n      var first = xs[0];\n      var index = findIndex(xs, function (x) {\n        return !comp(first.element, x.element);\n      });\n      return index.getOr(xs.length);\n    };\n    var subgrid = function (grid, row, column, comparator) {\n      var gridRow = getRow(grid, row);\n      var isColRow = gridRow.section === 'colgroup';\n      var colspan = findDiff(gridRow.cells.slice(column), comparator);\n      var rowspan = isColRow ? 1 : findDiff(getColumn(grid.slice(row), column), comparator);\n      return {\n        colspan: colspan,\n        rowspan: rowspan\n      };\n    };\n\n    var toDetails = function (grid, comparator) {\n      var seen = map$1(grid, function (row) {\n        return map$1(row.cells, never);\n      });\n      var updateSeen = function (rowIndex, columnIndex, rowspan, colspan) {\n        for (var row = rowIndex; row < rowIndex + rowspan; row++) {\n          for (var column = columnIndex; column < columnIndex + colspan; column++) {\n            seen[row][column] = true;\n          }\n        }\n      };\n      return map$1(grid, function (row, rowIndex) {\n        var details = bind$2(row.cells, function (cell, columnIndex) {\n          if (seen[rowIndex][columnIndex] === false) {\n            var result = subgrid(grid, rowIndex, columnIndex, comparator);\n            updateSeen(rowIndex, columnIndex, result.rowspan, result.colspan);\n            return [detailnew(cell.element, result.rowspan, result.colspan, cell.isNew)];\n          } else {\n            return [];\n          }\n        });\n        return rowdetailnew(row.element, details, row.section, row.isNew);\n      });\n    };\n    var toGrid = function (warehouse, generators, isNew) {\n      var grid = [];\n      each$2(warehouse.colgroups, function (colgroup) {\n        var colgroupCols = [];\n        for (var columnIndex = 0; columnIndex < warehouse.grid.columns; columnIndex++) {\n          var element = Warehouse.getColumnAt(warehouse, columnIndex).map(function (column) {\n            return elementnew(column.element, isNew, false);\n          }).getOrThunk(function () {\n            return elementnew(generators.colGap(), true, false);\n          });\n          colgroupCols.push(element);\n        }\n        grid.push(rowcells(colgroup.element, colgroupCols, 'colgroup', isNew));\n      });\n      for (var rowIndex = 0; rowIndex < warehouse.grid.rows; rowIndex++) {\n        var rowCells = [];\n        for (var columnIndex = 0; columnIndex < warehouse.grid.columns; columnIndex++) {\n          var element = Warehouse.getAt(warehouse, rowIndex, columnIndex).map(function (item) {\n            return elementnew(item.element, isNew, item.isLocked);\n          }).getOrThunk(function () {\n            return elementnew(generators.gap(), true, false);\n          });\n          rowCells.push(element);\n        }\n        var rowDetail = warehouse.all[rowIndex];\n        var row = rowcells(rowDetail.element, rowCells, rowDetail.section, isNew);\n        grid.push(row);\n      }\n      return grid;\n    };\n\n    var fromWarehouse = function (warehouse, generators) {\n      return toGrid(warehouse, generators, false);\n    };\n    var toDetailList = function (grid) {\n      return toDetails(grid, eq$1);\n    };\n    var findInWarehouse = function (warehouse, element) {\n      return findMap(warehouse.all, function (r) {\n        return find$1(r.cells, function (e) {\n          return eq$1(element, e.element);\n        });\n      });\n    };\n    var extractCells = function (warehouse, target, predicate) {\n      var details = map$1(target.selection, function (cell$1) {\n        return cell(cell$1).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        }).filter(predicate);\n      });\n      var cells = cat(details);\n      return someIf(cells.length > 0, cells);\n    };\n    var run = function (operation, extract, adjustment, postAction, genWrappers) {\n      return function (wire, table, target, generators, behaviours) {\n        var warehouse = Warehouse.fromTable(table);\n        var tableSection = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.section).getOrThunk(TableSection.fallback);\n        var output = extract(warehouse, target).map(function (info) {\n          var model = fromWarehouse(warehouse, generators);\n          var result = operation(model, info, eq$1, genWrappers(generators), tableSection);\n          var lockedColumns = getLockedColumnsFromGrid(result.grid);\n          var grid = toDetailList(result.grid);\n          return {\n            info: info,\n            grid: grid,\n            cursor: result.cursor,\n            lockedColumns: lockedColumns\n          };\n        });\n        return output.bind(function (out) {\n          var newElements = render$1(table, out.grid);\n          var tableSizing = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.sizing).getOrThunk(function () {\n            return TableSize.getTableSize(table);\n          });\n          var resizing = Optional.from(behaviours === null || behaviours === void 0 ? void 0 : behaviours.resize).getOrThunk(preserveTable);\n          adjustment(table, out.grid, out.info, {\n            sizing: tableSizing,\n            resize: resizing,\n            section: tableSection\n          });\n          postAction(table);\n          refresh(wire, table);\n          remove$7(table, LOCKED_COL_ATTR);\n          if (out.lockedColumns.length > 0) {\n            set$2(table, LOCKED_COL_ATTR, out.lockedColumns.join(','));\n          }\n          return Optional.some({\n            cursor: out.cursor,\n            newRows: newElements.newRows,\n            newCells: newElements.newCells\n          });\n        });\n      };\n    };\n    var onPaste = function (warehouse, target) {\n      return cell(target.element).bind(function (cell) {\n        return findInWarehouse(warehouse, cell).map(function (details) {\n          var value = __assign(__assign({}, details), {\n            generators: target.generators,\n            clipboard: target.clipboard\n          });\n          return value;\n        });\n      });\n    };\n    var onPasteByEditor = function (warehouse, target) {\n      return extractCells(warehouse, target, always).map(function (cells) {\n        return {\n          cells: cells,\n          generators: target.generators,\n          clipboard: target.clipboard\n        };\n      });\n    };\n    var onMergable = function (_warehouse, target) {\n      return target.mergable;\n    };\n    var onUnmergable = function (_warehouse, target) {\n      return target.unmergable;\n    };\n    var onCells = function (warehouse, target) {\n      return extractCells(warehouse, target, always);\n    };\n    var onUnlockedCells = function (warehouse, target) {\n      return extractCells(warehouse, target, function (detail) {\n        return !detail.isLocked;\n      });\n    };\n    var isUnlockedTableCell = function (warehouse, cell) {\n      return findInWarehouse(warehouse, cell).exists(function (detail) {\n        return !detail.isLocked;\n      });\n    };\n    var allUnlocked = function (warehouse, cells) {\n      return forall(cells, function (cell) {\n        return isUnlockedTableCell(warehouse, cell);\n      });\n    };\n    var onUnlockedMergable = function (warehouse, target) {\n      return onMergable(warehouse, target).filter(function (mergeable) {\n        return allUnlocked(warehouse, mergeable.cells);\n      });\n    };\n    var onUnlockedUnmergable = function (warehouse, target) {\n      return onUnmergable(warehouse, target).filter(function (cells) {\n        return allUnlocked(warehouse, cells);\n      });\n    };\n\n    var merge$2 = function (grid, bounds, comparator, substitution) {\n      var rows = extractGridDetails(grid).rows;\n      if (rows.length === 0) {\n        return grid;\n      }\n      for (var i = bounds.startRow; i <= bounds.finishRow; i++) {\n        for (var j = bounds.startCol; j <= bounds.finishCol; j++) {\n          var row = rows[i];\n          var isLocked = getCell(row, j).isLocked;\n          mutateCell(row, j, elementnew(substitution(), false, isLocked));\n        }\n      }\n      return grid;\n    };\n    var unmerge = function (grid, target, comparator, substitution) {\n      var rows = extractGridDetails(grid).rows;\n      var first = true;\n      for (var i = 0; i < rows.length; i++) {\n        for (var j = 0; j < cellLength(rows[0]); j++) {\n          var row = rows[i];\n          var currentCell = getCell(row, j);\n          var currentCellElm = currentCell.element;\n          var isToReplace = comparator(currentCellElm, target);\n          if (isToReplace === true && first === false) {\n            mutateCell(row, j, elementnew(substitution(), true, currentCell.isLocked));\n          } else if (isToReplace === true) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    var uniqueCells = function (row, comparator) {\n      return foldl(row, function (rest, cell) {\n        return exists(rest, function (currentCell) {\n          return comparator(currentCell.element, cell.element);\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    var splitCols = function (grid, index, comparator, substitution) {\n      if (index > 0 && index < grid[0].cells.length) {\n        each$2(grid, function (row) {\n          var prevCell = row.cells[index - 1];\n          var current = row.cells[index];\n          var isToReplace = comparator(current.element, prevCell.element);\n          if (isToReplace) {\n            mutateCell(row, index, elementnew(substitution(), true, current.isLocked));\n          }\n        });\n      }\n      return grid;\n    };\n    var splitRows = function (grid, index, comparator, substitution) {\n      var rows = extractGridDetails(grid).rows;\n      if (index > 0 && index < rows.length) {\n        var rowPrevCells = rows[index - 1].cells;\n        var cells = uniqueCells(rowPrevCells, comparator);\n        each$2(cells, function (cell) {\n          var replacement = Optional.none();\n          for (var i = index; i < rows.length; i++) {\n            var _loop_1 = function (j) {\n              var row = rows[i];\n              var current = getCell(row, j);\n              var isToReplace = comparator(current.element, cell.element);\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Optional.some(substitution());\n                }\n                replacement.each(function (sub) {\n                  mutateCell(row, j, elementnew(sub, true, current.isLocked));\n                });\n              }\n            };\n            for (var j = 0; j < cellLength(rows[0]); j++) {\n              _loop_1(j);\n            }\n          }\n        });\n      }\n      return grid;\n    };\n\n    var value$1 = function (o) {\n      var or = function (_opt) {\n        return value$1(o);\n      };\n      var orThunk = function (_f) {\n        return value$1(o);\n      };\n      var map = function (f) {\n        return value$1(f(o));\n      };\n      var mapError = function (_f) {\n        return value$1(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOptional = function () {\n        return Optional.some(o);\n      };\n      return {\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOptional: toOptional\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = identity;\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (_f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (_f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOptional: Optional.none\n      };\n    };\n    var fromOption = function (opt, err) {\n      return opt.fold(function () {\n        return error(err);\n      }, value$1);\n    };\n    var Result = {\n      value: value$1,\n      error: error,\n      fromOption: fromOption\n    };\n\n    var measure = function (startAddress, gridA, gridB) {\n      if (startAddress.row >= gridA.length || startAddress.column > cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row + ', column: ' + startAddress.column);\n      }\n      var rowRemainder = gridA.slice(startAddress.row);\n      var colRemainder = rowRemainder[0].cells.slice(startAddress.column);\n      var colRequired = cellLength(gridB[0]);\n      var rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: rowRemainder.length - rowRequired,\n        colDelta: colRemainder.length - colRequired\n      });\n    };\n    var measureWidth = function (gridA, gridB) {\n      var colLengthA = cellLength(gridA[0]);\n      var colLengthB = cellLength(gridB[0]);\n      return {\n        rowDelta: 0,\n        colDelta: colLengthA - colLengthB\n      };\n    };\n    var measureHeight = function (gridA, gridB) {\n      var rowLengthA = gridA.length;\n      var rowLengthB = gridB.length;\n      return {\n        rowDelta: rowLengthA - rowLengthB,\n        colDelta: 0\n      };\n    };\n    var generateElements = function (amount, row, generators, isLocked) {\n      var generator = row.section === 'colgroup' ? generators.col : generators.cell;\n      return range$1(amount, function (idx) {\n        return elementnew(generator(), true, isLocked(idx));\n      });\n    };\n    var rowFill = function (grid, amount, generators, lockedColumns) {\n      var exampleRow = grid[grid.length - 1];\n      return grid.concat(range$1(amount, function () {\n        var generator = exampleRow.section === 'colgroup' ? generators.colgroup : generators.row;\n        var row = clone$1(exampleRow, generator, identity);\n        var elements = generateElements(row.cells.length, row, generators, function (idx) {\n          return has$1(lockedColumns, idx.toString());\n        });\n        return setCells(row, elements);\n      }));\n    };\n    var colFill = function (grid, amount, generators, startIndex) {\n      return map$1(grid, function (row) {\n        var newChildren = generateElements(amount, row, generators, never);\n        return addCells(row, startIndex, newChildren);\n      });\n    };\n    var lockedColFill = function (grid, generators, lockedColumns) {\n      return map$1(grid, function (row) {\n        return foldl(lockedColumns, function (acc, colNum) {\n          var newChild = generateElements(1, row, generators, always)[0];\n          return addCell(acc, colNum, newChild);\n        }, row);\n      });\n    };\n    var tailor = function (gridA, delta, generators) {\n      var fillCols = delta.colDelta < 0 ? colFill : identity;\n      var fillRows = delta.rowDelta < 0 ? rowFill : identity;\n      var lockedColumns = getLockedColumnsFromGrid(gridA);\n      var gridWidth = cellLength(gridA[0]);\n      var isLastColLocked = exists(lockedColumns, function (locked) {\n        return locked === gridWidth - 1;\n      });\n      var modifiedCols = fillCols(gridA, Math.abs(delta.colDelta), generators, isLastColLocked ? gridWidth - 1 : gridWidth);\n      var newLockedColumns = getLockedColumnsFromGrid(modifiedCols);\n      return fillRows(modifiedCols, Math.abs(delta.rowDelta), generators, mapToObject(newLockedColumns, always));\n    };\n\n    var isSpanning = function (grid, row, col, comparator) {\n      var candidate = getCell(grid[row], col);\n      var matching = curry(comparator, candidate.element);\n      var currentRow = grid[row];\n      return grid.length > 1 && cellLength(currentRow) > 1 && (col > 0 && matching(getCellElement(currentRow, col - 1)) || col < currentRow.cells.length - 1 && matching(getCellElement(currentRow, col + 1)) || row > 0 && matching(getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(getCellElement(grid[row + 1], col)));\n    };\n    var mergeTables = function (startAddress, gridA, gridB, generator, comparator, lockedColumns) {\n      var startRow = startAddress.row;\n      var startCol = startAddress.column;\n      var mergeHeight = gridB.length;\n      var mergeWidth = cellLength(gridB[0]);\n      var endRow = startRow + mergeHeight;\n      var endCol = startCol + mergeWidth + lockedColumns.length;\n      var lockedColumnObj = mapToObject(lockedColumns, always);\n      for (var r = startRow; r < endRow; r++) {\n        var skippedCol = 0;\n        for (var c = startCol; c < endCol; c++) {\n          if (lockedColumnObj[c]) {\n            skippedCol++;\n            continue;\n          }\n          if (isSpanning(gridA, r, c, comparator)) {\n            unmerge(gridA, getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          var gridBColIndex = c - startCol - skippedCol;\n          var newCell = getCell(gridB[r - startRow], gridBColIndex);\n          var newCellElm = newCell.element;\n          var replacement = generator.replace(newCellElm);\n          mutateCell(gridA[r], c, elementnew(replacement, true, newCell.isLocked));\n        }\n      }\n      return gridA;\n    };\n    var getValidStartAddress = function (currentStartAddress, grid, lockedColumns) {\n      var gridColLength = cellLength(grid[0]);\n      var adjustedRowAddress = extractGridDetails(grid).cols.length + currentStartAddress.row;\n      var possibleColAddresses = range$1(gridColLength - currentStartAddress.column, function (num) {\n        return num + currentStartAddress.column;\n      });\n      var validColAddress = find$1(possibleColAddresses, function (num) {\n        return forall(lockedColumns, function (col) {\n          return col !== num;\n        });\n      }).getOr(gridColLength - 1);\n      return {\n        row: adjustedRowAddress,\n        column: validColAddress\n      };\n    };\n    var getLockedColumnsWithinBounds = function (startAddress, grid, lockedColumns) {\n      return filter$2(lockedColumns, function (colNum) {\n        return colNum >= startAddress.column && colNum <= cellLength(grid[0]) + startAddress.column;\n      });\n    };\n    var merge$1 = function (startAddress, gridA, gridB, generator, comparator) {\n      var lockedColumns = getLockedColumnsFromGrid(gridA);\n      var validStartAddress = getValidStartAddress(startAddress, gridA, lockedColumns);\n      var gridBRows = extractGridDetails(gridB).rows;\n      var lockedColumnsWithinBounds = getLockedColumnsWithinBounds(validStartAddress, gridBRows, lockedColumns);\n      var result = measure(validStartAddress, gridA, gridBRows);\n      return result.map(function (diff) {\n        var delta = __assign(__assign({}, diff), { colDelta: diff.colDelta - lockedColumnsWithinBounds.length });\n        var fittedGrid = tailor(gridA, delta, generator);\n        var newLockedColumns = getLockedColumnsFromGrid(fittedGrid);\n        var newLockedColumnsWithinBounds = getLockedColumnsWithinBounds(validStartAddress, gridBRows, newLockedColumns);\n        return mergeTables(validStartAddress, fittedGrid, gridBRows, generator, comparator, newLockedColumnsWithinBounds);\n      });\n    };\n    var insertCols = function (index, gridA, gridB, generator, comparator) {\n      splitCols(gridA, index, comparator, generator.cell);\n      var delta = measureHeight(gridB, gridA);\n      var fittedNewGrid = tailor(gridB, delta, generator);\n      var secondDelta = measureHeight(gridA, fittedNewGrid);\n      var fittedOldGrid = tailor(gridA, secondDelta, generator);\n      return map$1(fittedOldGrid, function (gridRow, i) {\n        return addCells(gridRow, index, fittedNewGrid[i].cells);\n      });\n    };\n    var insertRows = function (index, gridA, gridB, generator, comparator) {\n      splitRows(gridA, index, comparator, generator.cell);\n      var locked = getLockedColumnsFromGrid(gridA);\n      var diff = measureWidth(gridA, gridB);\n      var delta = __assign(__assign({}, diff), { colDelta: diff.colDelta - locked.length });\n      var fittedOldGrid = tailor(gridA, delta, generator);\n      var _a = extractGridDetails(fittedOldGrid), oldCols = _a.cols, oldRows = _a.rows;\n      var newLocked = getLockedColumnsFromGrid(fittedOldGrid);\n      var secondDiff = measureWidth(gridB, gridA);\n      var secondDelta = __assign(__assign({}, secondDiff), { colDelta: secondDiff.colDelta + newLocked.length });\n      var fittedGridB = lockedColFill(gridB, generator, newLocked);\n      var fittedNewGrid = tailor(fittedGridB, secondDelta, generator);\n      return oldCols.concat(oldRows.slice(0, index)).concat(fittedNewGrid).concat(oldRows.slice(index, oldRows.length));\n    };\n\n    var cloneRow = function (row, cloneCell, comparator, substitution) {\n      return clone$1(row, function (elem) {\n        return substitution(elem, comparator);\n      }, cloneCell);\n    };\n    var insertRowAt = function (grid, index, example, comparator, substitution) {\n      var _a = extractGridDetails(grid), rows = _a.rows, cols = _a.cols;\n      var before = rows.slice(0, index);\n      var after = rows.slice(index);\n      var newRow = cloneRow(rows[example], function (ex, c) {\n        var withinSpan = index > 0 && index < rows.length && comparator(getCellElement(rows[index - 1], c), getCellElement(rows[index], c));\n        var ret = withinSpan ? getCell(rows[index], c) : elementnew(substitution(ex.element, comparator), true, ex.isLocked);\n        return ret;\n      }, comparator, substitution);\n      return cols.concat(before).concat([newRow]).concat(after);\n    };\n    var getElementFor = function (row, column, section, withinSpan, example, comparator, substitution) {\n      if (section === 'colgroup' || !withinSpan) {\n        var cell = getCell(row, example);\n        return elementnew(substitution(cell.element, comparator), true, false);\n      } else {\n        return getCell(row, column);\n      }\n    };\n    var insertColumnAt = function (grid, index, example, comparator, substitution) {\n      return map$1(grid, function (row) {\n        var withinSpan = index > 0 && index < cellLength(row) && comparator(getCellElement(row, index - 1), getCellElement(row, index));\n        var sub = getElementFor(row, index, row.section, withinSpan, example, comparator, substitution);\n        return addCell(row, index, sub);\n      });\n    };\n    var deleteColumnsAt = function (grid, columns) {\n      return bind$2(grid, function (row) {\n        var existingCells = row.cells;\n        var cells = foldr(columns, function (acc, column) {\n          return column >= 0 && column < acc.length ? acc.slice(0, column).concat(acc.slice(column + 1)) : acc;\n        }, existingCells);\n        return cells.length > 0 ? [rowcells(row.element, cells, row.section, row.isNew)] : [];\n      });\n    };\n    var deleteRowsAt = function (grid, start, finish) {\n      var _a = extractGridDetails(grid), rows = _a.rows, cols = _a.cols;\n      return cols.concat(rows.slice(0, start)).concat(rows.slice(finish + 1));\n    };\n\n    var notInStartRow = function (grid, rowIndex, colIndex, comparator) {\n      return getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(getCellElement(grid[rowIndex - 1], colIndex), getCellElement(grid[rowIndex], colIndex)));\n    };\n    var notInStartColumn = function (row, index, comparator) {\n      return index > 0 && comparator(getCellElement(row, index - 1), getCellElement(row, index));\n    };\n    var isDuplicatedCell = function (grid, rowIndex, colIndex, comparator) {\n      return notInStartRow(grid, rowIndex, colIndex, comparator) || notInStartColumn(grid[rowIndex], colIndex, comparator);\n    };\n    var rowReplacerPredicate = function (targetRow, columnHeaders) {\n      var entireTableIsHeader = forall(columnHeaders, identity) && isHeaderCells(targetRow.cells);\n      return entireTableIsHeader ? always : function (cell, _rowIndex, colIndex) {\n        var type = name(cell.element);\n        return !(type === 'th' && columnHeaders[colIndex]);\n      };\n    };\n    var columnReplacePredicate = function (targetColumn, rowHeaders) {\n      var entireTableIsHeader = forall(rowHeaders, identity) && isHeaderCells(targetColumn);\n      return entireTableIsHeader ? always : function (cell, rowIndex, _colIndex) {\n        var type = name(cell.element);\n        return !(type === 'th' && rowHeaders[rowIndex]);\n      };\n    };\n    var determineScope = function (applyScope, element, newScope, isInHeader) {\n      var hasSpan = function (scope) {\n        return scope === 'row' ? hasRowspan(element) : hasColspan(element);\n      };\n      var getScope = function (scope) {\n        return hasSpan(scope) ? scope + 'group' : scope;\n      };\n      if (applyScope) {\n        return isHeaderCell(element) ? getScope(newScope) : null;\n      } else if (isInHeader && isHeaderCell(element)) {\n        var oppositeScope = newScope === 'row' ? 'col' : 'row';\n        return getScope(oppositeScope);\n      } else {\n        return null;\n      }\n    };\n    var rowScopeGenerator = function (applyScope, columnHeaders) {\n      return function (cell, rowIndex, columnIndex) {\n        return Optional.some(determineScope(applyScope, cell.element, 'col', columnHeaders[columnIndex]));\n      };\n    };\n    var columnScopeGenerator = function (applyScope, rowHeaders) {\n      return function (cell, rowIndex) {\n        return Optional.some(determineScope(applyScope, cell.element, 'row', rowHeaders[rowIndex]));\n      };\n    };\n    var replace = function (cell, comparator, substitute) {\n      return elementnew(substitute(cell.element, comparator), true, cell.isLocked);\n    };\n    var replaceIn = function (grid, targets, comparator, substitute, replacer, genScope, shouldReplace) {\n      var isTarget = function (cell) {\n        return exists(targets, function (target) {\n          return comparator(cell.element, target.element);\n        });\n      };\n      return map$1(grid, function (row, rowIndex) {\n        return mapCells(row, function (cell, colIndex) {\n          if (isTarget(cell)) {\n            var newCell_1 = shouldReplace(cell, rowIndex, colIndex) ? replacer(cell, comparator, substitute) : cell;\n            genScope(newCell_1, rowIndex, colIndex).each(function (scope) {\n              setOptions(newCell_1.element, { scope: Optional.from(scope) });\n            });\n            return newCell_1;\n          } else {\n            return cell;\n          }\n        });\n      });\n    };\n    var getColumnCells = function (rows, columnIndex, comparator) {\n      return bind$2(rows, function (row, i) {\n        return isDuplicatedCell(rows, i, columnIndex, comparator) ? [] : [getCell(row, columnIndex)];\n      });\n    };\n    var getRowCells = function (rows, rowIndex, comparator) {\n      var targetRow = rows[rowIndex];\n      return bind$2(targetRow.cells, function (item, i) {\n        return isDuplicatedCell(rows, rowIndex, i, comparator) ? [] : [item];\n      });\n    };\n    var replaceColumns = function (grid, indexes, applyScope, comparator, substitution) {\n      var rows = extractGridDetails(grid).rows;\n      var targets = bind$2(indexes, function (index) {\n        return getColumnCells(rows, index, comparator);\n      });\n      var rowHeaders = map$1(grid, function (row) {\n        return isHeaderCells(row.cells);\n      });\n      var shouldReplaceCell = columnReplacePredicate(targets, rowHeaders);\n      var scopeGenerator = columnScopeGenerator(applyScope, rowHeaders);\n      return replaceIn(grid, targets, comparator, substitution, replace, scopeGenerator, shouldReplaceCell);\n    };\n    var replaceRows = function (grid, indexes, section, applyScope, comparator, substitution, tableSection) {\n      var _a = extractGridDetails(grid), cols = _a.cols, rows = _a.rows;\n      var targetRow = rows[indexes[0]];\n      var targets = bind$2(indexes, function (index) {\n        return getRowCells(rows, index, comparator);\n      });\n      var columnHeaders = map$1(targetRow.cells, function (_cell, index) {\n        return isHeaderCells(getColumnCells(rows, index, comparator));\n      });\n      var newRows = __spreadArray([], rows, true);\n      each$2(indexes, function (index) {\n        newRows[index] = tableSection.transformRow(rows[index], section);\n      });\n      var newGrid = cols.concat(newRows);\n      var shouldReplaceCell = rowReplacerPredicate(targetRow, columnHeaders);\n      var scopeGenerator = rowScopeGenerator(applyScope, columnHeaders);\n      return replaceIn(newGrid, targets, comparator, substitution, tableSection.transformCell, scopeGenerator, shouldReplaceCell);\n    };\n    var replaceCells = function (grid, details, comparator, substitution) {\n      var rows = extractGridDetails(grid).rows;\n      var targetCells = map$1(details, function (detail) {\n        return getCell(rows[detail.row], detail.column);\n      });\n      return replaceIn(grid, targetCells, comparator, substitution, replace, Optional.none, always);\n    };\n\n    var uniqueColumns = function (details) {\n      var uniqueCheck = function (rest, detail) {\n        var columnExists = exists(rest, function (currentDetail) {\n          return currentDetail.column === detail.column;\n        });\n        return columnExists ? rest : rest.concat([detail]);\n      };\n      return foldl(details, uniqueCheck, []).sort(function (detailA, detailB) {\n        return detailA.column - detailB.column;\n      });\n    };\n\n    var isCol = isTag('col');\n    var isColgroup = isTag('colgroup');\n    var isRow$1 = function (element) {\n      return name(element) === 'tr' || isColgroup(element);\n    };\n    var elementToData = function (element) {\n      var colspan = getAttrValue(element, 'colspan', 1);\n      var rowspan = getAttrValue(element, 'rowspan', 1);\n      return {\n        element: element,\n        colspan: colspan,\n        rowspan: rowspan\n      };\n    };\n    var modification = function (generators, toData) {\n      if (toData === void 0) {\n        toData = elementToData;\n      }\n      var nuCell = function (data) {\n        return isCol(data.element) ? generators.col(data) : generators.cell(data);\n      };\n      var nuRow = function (data) {\n        return isColgroup(data.element) ? generators.colgroup(data) : generators.row(data);\n      };\n      var add = function (element) {\n        if (isRow$1(element)) {\n          return nuRow({ element: element });\n        } else {\n          var replacement = nuCell(toData(element));\n          recent = Optional.some({\n            item: element,\n            replacement: replacement\n          });\n          return replacement;\n        }\n      };\n      var recent = Optional.none();\n      var getOrInit = function (element, comparator) {\n        return recent.fold(function () {\n          return add(element);\n        }, function (p) {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return { getOrInit: getOrInit };\n    };\n    var transform = function (tag) {\n      return function (generators) {\n        var list = [];\n        var find = function (element, comparator) {\n          return find$1(list, function (x) {\n            return comparator(x.item, element);\n          });\n        };\n        var makeNew = function (element) {\n          var attrs = tag === 'td' ? { scope: null } : {};\n          var cell = generators.replace(element, tag, attrs);\n          list.push({\n            item: element,\n            sub: cell\n          });\n          return cell;\n        };\n        var replaceOrInit = function (element, comparator) {\n          if (isRow$1(element) || isCol(element)) {\n            return element;\n          } else {\n            return find(element, comparator).fold(function () {\n              return makeNew(element);\n            }, function (p) {\n              return comparator(element, p.item) ? p.sub : makeNew(element);\n            });\n          }\n        };\n        return { replaceOrInit: replaceOrInit };\n      };\n    };\n    var getScopeAttribute = function (cell) {\n      return getOpt(cell, 'scope').map(function (attribute) {\n        return attribute.substr(0, 3);\n      });\n    };\n    var merging = function (generators) {\n      var unmerge = function (cell) {\n        var scope = getScopeAttribute(cell);\n        scope.each(function (attribute) {\n          return set$2(cell, 'scope', attribute);\n        });\n        return function () {\n          var raw = generators.cell({\n            element: cell,\n            colspan: 1,\n            rowspan: 1\n          });\n          remove$6(raw, 'width');\n          remove$6(cell, 'width');\n          scope.each(function (attribute) {\n            return set$2(raw, 'scope', attribute);\n          });\n          return raw;\n        };\n      };\n      var merge = function (cells) {\n        var getScopeProperty = function () {\n          var stringAttributes = cat(map$1(cells, getScopeAttribute));\n          if (stringAttributes.length === 0) {\n            return Optional.none();\n          } else {\n            var baseScope_1 = stringAttributes[0];\n            var scopes_1 = [\n              'row',\n              'col'\n            ];\n            var isMixed = exists(stringAttributes, function (attribute) {\n              return attribute !== baseScope_1 && contains$2(scopes_1, attribute);\n            });\n            return isMixed ? Optional.none() : Optional.from(baseScope_1);\n          }\n        };\n        remove$6(cells[0], 'width');\n        getScopeProperty().fold(function () {\n          return remove$7(cells[0], 'scope');\n        }, function (attribute) {\n          return set$2(cells[0], 'scope', attribute + 'group');\n        });\n        return constant(cells[0]);\n      };\n      return {\n        unmerge: unmerge,\n        merge: merge\n      };\n    };\n    var Generators = {\n      modification: modification,\n      transform: transform,\n      merging: merging\n    };\n\n    var blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    var isList$1 = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains$2([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    var isBlock$1 = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains$2(blockList, tagName);\n    };\n    var isEmptyTag$1 = function (universe, item) {\n      return contains$2([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n\n    var universe$1 = DomUniverse();\n    var isBlock = function (element) {\n      return isBlock$1(universe$1, element);\n    };\n    var isList = function (element) {\n      return isList$1(universe$1, element);\n    };\n    var isEmptyTag = function (element) {\n      return isEmptyTag$1(universe$1, element);\n    };\n\n    var merge = function (cells) {\n      var isBr = function (el) {\n        return name(el) === 'br';\n      };\n      var advancedBr = function (children) {\n        return forall(children, function (c) {\n          return isBr(c) || isText(c) && get$9(c).trim().length === 0;\n        });\n      };\n      var isListItem = function (el) {\n        return name(el) === 'li' || ancestor$2(el, isList).isSome();\n      };\n      var siblingIsBlock = function (el) {\n        return nextSibling(el).map(function (rightSibling) {\n          if (isBlock(rightSibling)) {\n            return true;\n          }\n          if (isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n          return false;\n        }).getOr(false);\n      };\n      var markCell = function (cell) {\n        return last$1(cell).bind(function (rightEdge) {\n          var rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(function (parent) {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || isBlock(parent) && !eq$1(cell, parent) ? [] : [SugarElement.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      var markContent = function () {\n        var content = bind$2(cells, function (cell) {\n          var children = children$3(cell);\n          return advancedBr(children) ? [] : children.concat(markCell(cell));\n        });\n        return content.length === 0 ? [SugarElement.fromTag('br')] : content;\n      };\n      var contents = markContent();\n      empty(cells[0]);\n      append(cells[0], contents);\n    };\n\n    var isEditable = function (elem) {\n      return isEditable$1(elem, true);\n    };\n    var prune = function (table) {\n      var cells = cells$1(table);\n      if (cells.length === 0) {\n        remove$5(table);\n      }\n    };\n    var outcome = function (grid, cursor) {\n      return {\n        grid: grid,\n        cursor: cursor\n      };\n    };\n    var findEditableCursorPosition = function (rows) {\n      return findMap(rows, function (row) {\n        return findMap(row.cells, function (cell) {\n          var elem = cell.element;\n          return someIf(isEditable(elem), elem);\n        });\n      });\n    };\n    var elementFromGrid = function (grid, row, column) {\n      var _a, _b;\n      var rows = extractGridDetails(grid).rows;\n      return Optional.from((_b = (_a = rows[row]) === null || _a === void 0 ? void 0 : _a.cells[column]) === null || _b === void 0 ? void 0 : _b.element).filter(isEditable).orThunk(function () {\n        return findEditableCursorPosition(rows);\n      });\n    };\n    var bundle = function (grid, row, column) {\n      var cursorElement = elementFromGrid(grid, row, column);\n      return outcome(grid, cursorElement);\n    };\n    var uniqueRows = function (details) {\n      var rowCompilation = function (rest, detail) {\n        var rowExists = exists(rest, function (currentDetail) {\n          return currentDetail.row === detail.row;\n        });\n        return rowExists ? rest : rest.concat([detail]);\n      };\n      return foldl(details, rowCompilation, []).sort(function (detailA, detailB) {\n        return detailA.row - detailB.row;\n      });\n    };\n    var opInsertRowsBefore = function (grid, details, comparator, genWrappers) {\n      var targetIndex = details[0].row;\n      var rows = uniqueRows(details);\n      var newGrid = foldr(rows, function (acc, row) {\n        var newG = insertRowAt(acc.grid, targetIndex, row.row + acc.delta, comparator, genWrappers.getOrInit);\n        return {\n          grid: newG,\n          delta: acc.delta + 1\n        };\n      }, {\n        grid: grid,\n        delta: 0\n      }).grid;\n      return bundle(newGrid, targetIndex, details[0].column);\n    };\n    var opInsertRowsAfter = function (grid, details, comparator, genWrappers) {\n      var rows = uniqueRows(details);\n      var target = rows[rows.length - 1];\n      var targetIndex = target.row + target.rowspan;\n      var newGrid = foldr(rows, function (newG, row) {\n        return insertRowAt(newG, targetIndex, row.row, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column);\n    };\n    var opInsertColumnsBefore = function (grid, extractDetail, comparator, genWrappers) {\n      var details = extractDetail.details;\n      var columns = uniqueColumns(details);\n      var targetIndex = columns[0].column;\n      var newGrid = foldr(columns, function (acc, col) {\n        var newG = insertColumnAt(acc.grid, targetIndex, col.column + acc.delta, comparator, genWrappers.getOrInit);\n        return {\n          grid: newG,\n          delta: acc.delta + 1\n        };\n      }, {\n        grid: grid,\n        delta: 0\n      }).grid;\n      return bundle(newGrid, details[0].row, targetIndex);\n    };\n    var opInsertColumnsAfter = function (grid, extractDetail, comparator, genWrappers) {\n      var details = extractDetail.details;\n      var target = details[details.length - 1];\n      var targetIndex = target.column + target.colspan;\n      var columns = uniqueColumns(details);\n      var newGrid = foldr(columns, function (newG, col) {\n        return insertColumnAt(newG, targetIndex, col.column, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row, targetIndex);\n    };\n    var opMakeColumnsHeader = function (initialGrid, details, comparator, genWrappers) {\n      var columns = uniqueColumns(details);\n      var columnIndexes = map$1(columns, function (detail) {\n        return detail.column;\n      });\n      var newGrid = replaceColumns(initialGrid, columnIndexes, true, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    var opMakeCellsHeader = function (initialGrid, details, comparator, genWrappers) {\n      var newGrid = replaceCells(initialGrid, details, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    var opUnmakeColumnsHeader = function (initialGrid, details, comparator, genWrappers) {\n      var columns = uniqueColumns(details);\n      var columnIndexes = map$1(columns, function (detail) {\n        return detail.column;\n      });\n      var newGrid = replaceColumns(initialGrid, columnIndexes, false, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    var opUnmakeCellsHeader = function (initialGrid, details, comparator, genWrappers) {\n      var newGrid = replaceCells(initialGrid, details, comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, details[0].row, details[0].column);\n    };\n    var makeRowsSection = function (section, applyScope) {\n      return function (initialGrid, details, comparator, genWrappers, tableSection) {\n        var rows = uniqueRows(details);\n        var rowIndexes = map$1(rows, function (detail) {\n          return detail.row;\n        });\n        var newGrid = replaceRows(initialGrid, rowIndexes, section, applyScope, comparator, genWrappers.replaceOrInit, tableSection);\n        return bundle(newGrid, details[0].row, details[0].column);\n      };\n    };\n    var opMakeRowsHeader = makeRowsSection('thead', true);\n    var opMakeRowsBody = makeRowsSection('tbody', false);\n    var opMakeRowsFooter = makeRowsSection('tfoot', false);\n    var opEraseColumns = function (grid, extractDetail, _comparator, _genWrappers) {\n      var columns = uniqueColumns(extractDetail.details);\n      var newGrid = deleteColumnsAt(grid, map$1(columns, function (column) {\n        return column.column;\n      }));\n      var maxColIndex = newGrid.length > 0 ? newGrid[0].cells.length - 1 : 0;\n      return bundle(newGrid, columns[0].row, Math.min(columns[0].column, maxColIndex));\n    };\n    var opEraseRows = function (grid, details, _comparator, _genWrappers) {\n      var rows = uniqueRows(details);\n      var newGrid = deleteRowsAt(grid, rows[0].row, rows[rows.length - 1].row);\n      var maxRowIndex = newGrid.length > 0 ? newGrid.length - 1 : 0;\n      return bundle(newGrid, Math.min(details[0].row, maxRowIndex), details[0].column);\n    };\n    var opMergeCells = function (grid, mergable, comparator, genWrappers) {\n      var cells = mergable.cells;\n      merge(cells);\n      var newGrid = merge$2(grid, mergable.bounds, comparator, genWrappers.merge(cells));\n      return outcome(newGrid, Optional.from(cells[0]));\n    };\n    var opUnmergeCells = function (grid, unmergable, comparator, genWrappers) {\n      var unmerge$1 = function (b, cell) {\n        return unmerge(b, cell, comparator, genWrappers.unmerge(cell));\n      };\n      var newGrid = foldr(unmergable, unmerge$1, grid);\n      return outcome(newGrid, Optional.from(unmergable[0]));\n    };\n    var opPasteCells = function (grid, pasteDetails, comparator, _genWrappers) {\n      var gridify = function (table, generators) {\n        var wh = Warehouse.fromTable(table);\n        return toGrid(wh, generators, true);\n      };\n      var gridB = gridify(pasteDetails.clipboard, pasteDetails.generators);\n      var startAddress = address(pasteDetails.row, pasteDetails.column);\n      var mergedGrid = merge$1(startAddress, grid, gridB, pasteDetails.generators, comparator);\n      return mergedGrid.fold(function () {\n        return outcome(grid, Optional.some(pasteDetails.element));\n      }, function (newGrid) {\n        return bundle(newGrid, pasteDetails.row, pasteDetails.column);\n      });\n    };\n    var gridifyRows = function (rows, generators, context) {\n      var pasteDetails = fromPastedRows(rows, context.section);\n      var wh = Warehouse.generate(pasteDetails);\n      return toGrid(wh, generators, true);\n    };\n    var opPasteColsBefore = function (grid, pasteDetails, comparator, _genWrappers) {\n      var rows = extractGridDetails(grid).rows;\n      var index = pasteDetails.cells[0].column;\n      var context = rows[pasteDetails.cells[0].row];\n      var gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      var mergedGrid = insertCols(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    var opPasteColsAfter = function (grid, pasteDetails, comparator, _genWrappers) {\n      var rows = extractGridDetails(grid).rows;\n      var index = pasteDetails.cells[pasteDetails.cells.length - 1].column + pasteDetails.cells[pasteDetails.cells.length - 1].colspan;\n      var context = rows[pasteDetails.cells[0].row];\n      var gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      var mergedGrid = insertCols(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    var opPasteRowsBefore = function (grid, pasteDetails, comparator, _genWrappers) {\n      var rows = extractGridDetails(grid).rows;\n      var index = pasteDetails.cells[0].row;\n      var context = rows[index];\n      var gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      var mergedGrid = insertRows(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    var opPasteRowsAfter = function (grid, pasteDetails, comparator, _genWrappers) {\n      var rows = extractGridDetails(grid).rows;\n      var index = pasteDetails.cells[pasteDetails.cells.length - 1].row + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan;\n      var context = rows[pasteDetails.cells[0].row];\n      var gridB = gridifyRows(pasteDetails.clipboard, pasteDetails.generators, context);\n      var mergedGrid = insertRows(index, grid, gridB, pasteDetails.generators, comparator);\n      return bundle(mergedGrid, pasteDetails.cells[0].row, pasteDetails.cells[0].column);\n    };\n    var opGetColumnsType = function (table, target) {\n      var house = Warehouse.fromTable(table);\n      var details = onCells(house, target);\n      return details.bind(function (selectedCells) {\n        var lastSelectedCell = selectedCells[selectedCells.length - 1];\n        var minColRange = selectedCells[0].column;\n        var maxColRange = lastSelectedCell.column + lastSelectedCell.colspan;\n        var selectedColumnCells = flatten$1(map$1(house.all, function (row) {\n          return filter$2(row.cells, function (cell) {\n            return cell.column >= minColRange && cell.column < maxColRange;\n          });\n        }));\n        return findCommonCellType(selectedColumnCells);\n      }).getOr('');\n    };\n    var opGetCellsType = function (table, target) {\n      var house = Warehouse.fromTable(table);\n      var details = onCells(house, target);\n      return details.bind(findCommonCellType).getOr('');\n    };\n    var opGetRowsType = function (table, target) {\n      var house = Warehouse.fromTable(table);\n      var details = onCells(house, target);\n      return details.bind(function (selectedCells) {\n        var lastSelectedCell = selectedCells[selectedCells.length - 1];\n        var minRowRange = selectedCells[0].row;\n        var maxRowRange = lastSelectedCell.row + lastSelectedCell.rowspan;\n        var selectedRows = house.all.slice(minRowRange, maxRowRange);\n        return findCommonRowType(selectedRows);\n      }).getOr('');\n    };\n    var resize = function (table, list, details, behaviours) {\n      return adjustWidthTo(table, list, details, behaviours.sizing);\n    };\n    var adjustAndRedistributeWidths = function (table, list, details, behaviours) {\n      return adjustAndRedistributeWidths$1(table, list, details, behaviours.sizing, behaviours.resize);\n    };\n    var firstColumnIsLocked = function (_warehouse, details) {\n      return exists(details, function (detail) {\n        return detail.column === 0 && detail.isLocked;\n      });\n    };\n    var lastColumnIsLocked = function (warehouse, details) {\n      return exists(details, function (detail) {\n        return detail.column + detail.colspan >= warehouse.grid.columns && detail.isLocked;\n      });\n    };\n    var getColumnsWidth = function (warehouse, details) {\n      var columns$1 = columns(warehouse);\n      var uniqueCols = uniqueColumns(details);\n      return foldl(uniqueCols, function (acc, detail) {\n        var column = columns$1[detail.column];\n        var colWidth = column.map(getOuter$2).getOr(0);\n        return acc + colWidth;\n      }, 0);\n    };\n    var insertColumnsExtractor = function (before) {\n      return function (warehouse, target) {\n        return onCells(warehouse, target).filter(function (details) {\n          var checkLocked = before ? firstColumnIsLocked : lastColumnIsLocked;\n          return !checkLocked(warehouse, details);\n        }).map(function (details) {\n          return {\n            details: details,\n            pixelDelta: getColumnsWidth(warehouse, details)\n          };\n        });\n      };\n    };\n    var eraseColumnsExtractor = function (warehouse, target) {\n      return onUnlockedCells(warehouse, target).map(function (details) {\n        return {\n          details: details,\n          pixelDelta: -getColumnsWidth(warehouse, details)\n        };\n      });\n    };\n    var pasteColumnsExtractor = function (before) {\n      return function (warehouse, target) {\n        return onPasteByEditor(warehouse, target).filter(function (details) {\n          var checkLocked = before ? firstColumnIsLocked : lastColumnIsLocked;\n          return !checkLocked(warehouse, details.cells);\n        });\n      };\n    };\n    var headerCellGenerator = Generators.transform('th');\n    var bodyCellGenerator = Generators.transform('td');\n    var insertRowsBefore = run(opInsertRowsBefore, onCells, noop, noop, Generators.modification);\n    var insertRowsAfter = run(opInsertRowsAfter, onCells, noop, noop, Generators.modification);\n    var insertColumnsBefore = run(opInsertColumnsBefore, insertColumnsExtractor(true), adjustAndRedistributeWidths, noop, Generators.modification);\n    var insertColumnsAfter = run(opInsertColumnsAfter, insertColumnsExtractor(false), adjustAndRedistributeWidths, noop, Generators.modification);\n    var eraseColumns = run(opEraseColumns, eraseColumnsExtractor, adjustAndRedistributeWidths, prune, Generators.modification);\n    var eraseRows = run(opEraseRows, onCells, noop, prune, Generators.modification);\n    var makeColumnsHeader = run(opMakeColumnsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    var unmakeColumnsHeader = run(opUnmakeColumnsHeader, onUnlockedCells, noop, noop, bodyCellGenerator);\n    var makeRowsHeader = run(opMakeRowsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    var makeRowsBody = run(opMakeRowsBody, onUnlockedCells, noop, noop, bodyCellGenerator);\n    var makeRowsFooter = run(opMakeRowsFooter, onUnlockedCells, noop, noop, bodyCellGenerator);\n    var makeCellsHeader = run(opMakeCellsHeader, onUnlockedCells, noop, noop, headerCellGenerator);\n    var unmakeCellsHeader = run(opUnmakeCellsHeader, onUnlockedCells, noop, noop, bodyCellGenerator);\n    var mergeCells = run(opMergeCells, onUnlockedMergable, resize, noop, Generators.merging);\n    var unmergeCells = run(opUnmergeCells, onUnlockedUnmergable, resize, noop, Generators.merging);\n    var pasteCells = run(opPasteCells, onPaste, resize, noop, Generators.modification);\n    var pasteColsBefore = run(opPasteColsBefore, pasteColumnsExtractor(true), noop, noop, Generators.modification);\n    var pasteColsAfter = run(opPasteColsAfter, pasteColumnsExtractor(false), noop, noop, Generators.modification);\n    var pasteRowsBefore = run(opPasteRowsBefore, onPasteByEditor, noop, noop, Generators.modification);\n    var pasteRowsAfter = run(opPasteRowsAfter, onPasteByEditor, noop, noop, Generators.modification);\n    var getColumnsType = opGetColumnsType;\n    var getCellsType = opGetCellsType;\n    var getRowsType = opGetRowsType;\n\n    var TableActions = function (editor, cellSelection, lazyWire) {\n      var isTableBody = function (editor) {\n        return name(getBody(editor)) === 'table';\n      };\n      var lastRowGuard = function (table) {\n        return isTableBody(editor) === false || getGridSize(table).rows > 1;\n      };\n      var lastColumnGuard = function (table) {\n        return isTableBody(editor) === false || getGridSize(table).columns > 1;\n      };\n      var cloneFormats = getCloneElements(editor);\n      var colMutationOp = isResizeTableColumnResizing(editor) ? noop : halve;\n      var getTableSectionType = function (table) {\n        switch (getTableHeaderType(editor)) {\n        case 'section':\n          return TableSection.section();\n        case 'sectionCells':\n          return TableSection.sectionCells();\n        case 'cells':\n          return TableSection.cells();\n        default:\n          return TableSection.getTableSectionType(table, 'section');\n        }\n      };\n      var setSelectionFromAction = function (table, result) {\n        return result.cursor.fold(function () {\n          var cells = cells$1(table);\n          return head(cells).filter(inBody).map(function (firstCell) {\n            cellSelection.clear(table);\n            var rng = editor.dom.createRng();\n            rng.selectNode(firstCell.dom);\n            editor.selection.setRng(rng);\n            set$2(firstCell, 'data-mce-selected', '1');\n            return rng;\n          });\n        }, function (cell) {\n          var des = freefallRtl(cell);\n          var rng = editor.dom.createRng();\n          rng.setStart(des.element.dom, des.offset);\n          rng.setEnd(des.element.dom, des.offset);\n          editor.selection.setRng(rng);\n          cellSelection.clear(table);\n          return Optional.some(rng);\n        });\n      };\n      var execute = function (operation, guard, mutate, lazyWire, effect) {\n        return function (table, target, noEvents) {\n          if (noEvents === void 0) {\n            noEvents = false;\n          }\n          removeDataStyle(table);\n          var wire = lazyWire();\n          var doc = SugarElement.fromDom(editor.getDoc());\n          var generators = cellOperations(mutate, doc, cloneFormats);\n          var behaviours = {\n            sizing: get$4(editor, table),\n            resize: isResizeTableColumnResizing(editor) ? resizeTable() : preserveTable(),\n            section: getTableSectionType(table)\n          };\n          return guard(table) ? operation(wire, table, target, generators, behaviours).bind(function (result) {\n            each$2(result.newRows, function (row) {\n              fireNewRow(editor, row.dom);\n            });\n            each$2(result.newCells, function (cell) {\n              fireNewCell(editor, cell.dom);\n            });\n            var range = setSelectionFromAction(table, result);\n            if (inBody(table)) {\n              removeDataStyle(table);\n              if (!noEvents) {\n                fireTableModified(editor, table.dom, effect);\n              }\n            }\n            return range.map(function (rng) {\n              return {\n                rng: rng,\n                effect: effect\n              };\n            });\n          }) : Optional.none();\n        };\n      };\n      var deleteRow = execute(eraseRows, lastRowGuard, noop, lazyWire, structureModified);\n      var deleteColumn = execute(eraseColumns, lastColumnGuard, noop, lazyWire, structureModified);\n      var insertRowsBefore$1 = execute(insertRowsBefore, always, noop, lazyWire, structureModified);\n      var insertRowsAfter$1 = execute(insertRowsAfter, always, noop, lazyWire, structureModified);\n      var insertColumnsBefore$1 = execute(insertColumnsBefore, always, colMutationOp, lazyWire, structureModified);\n      var insertColumnsAfter$1 = execute(insertColumnsAfter, always, colMutationOp, lazyWire, structureModified);\n      var mergeCells$1 = execute(mergeCells, always, noop, lazyWire, structureModified);\n      var unmergeCells$1 = execute(unmergeCells, always, noop, lazyWire, structureModified);\n      var pasteColsBefore$1 = execute(pasteColsBefore, always, noop, lazyWire, structureModified);\n      var pasteColsAfter$1 = execute(pasteColsAfter, always, noop, lazyWire, structureModified);\n      var pasteRowsBefore$1 = execute(pasteRowsBefore, always, noop, lazyWire, structureModified);\n      var pasteRowsAfter$1 = execute(pasteRowsAfter, always, noop, lazyWire, structureModified);\n      var pasteCells$1 = execute(pasteCells, always, noop, lazyWire, styleAndStructureModified);\n      var makeCellsHeader$1 = execute(makeCellsHeader, always, noop, lazyWire, structureModified);\n      var unmakeCellsHeader$1 = execute(unmakeCellsHeader, always, noop, lazyWire, structureModified);\n      var makeColumnsHeader$1 = execute(makeColumnsHeader, always, noop, lazyWire, structureModified);\n      var unmakeColumnsHeader$1 = execute(unmakeColumnsHeader, always, noop, lazyWire, structureModified);\n      var makeRowsHeader$1 = execute(makeRowsHeader, always, noop, lazyWire, structureModified);\n      var makeRowsBody$1 = execute(makeRowsBody, always, noop, lazyWire, structureModified);\n      var makeRowsFooter$1 = execute(makeRowsFooter, always, noop, lazyWire, structureModified);\n      var getTableCellType = getCellsType;\n      var getTableColType = getColumnsType;\n      var getTableRowType = getRowsType;\n      return {\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        insertRowsBefore: insertRowsBefore$1,\n        insertRowsAfter: insertRowsAfter$1,\n        insertColumnsBefore: insertColumnsBefore$1,\n        insertColumnsAfter: insertColumnsAfter$1,\n        mergeCells: mergeCells$1,\n        unmergeCells: unmergeCells$1,\n        pasteColsBefore: pasteColsBefore$1,\n        pasteColsAfter: pasteColsAfter$1,\n        pasteRowsBefore: pasteRowsBefore$1,\n        pasteRowsAfter: pasteRowsAfter$1,\n        pasteCells: pasteCells$1,\n        makeCellsHeader: makeCellsHeader$1,\n        unmakeCellsHeader: unmakeCellsHeader$1,\n        makeColumnsHeader: makeColumnsHeader$1,\n        unmakeColumnsHeader: unmakeColumnsHeader$1,\n        makeRowsHeader: makeRowsHeader$1,\n        makeRowsBody: makeRowsBody$1,\n        makeRowsFooter: makeRowsFooter$1,\n        getTableRowType: getTableRowType,\n        getTableCellType: getTableCellType,\n        getTableColType: getTableColType\n      };\n    };\n\n    var DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      colGroups: false\n    };\n    var tableHeaderCell = function () {\n      return SugarElement.fromTag('th');\n    };\n    var tableCell = function () {\n      return SugarElement.fromTag('td');\n    };\n    var tableColumn = function () {\n      return SugarElement.fromTag('col');\n    };\n    var createRow = function (columns, rowHeaders, columnHeaders, rowIndex) {\n      var tr = SugarElement.fromTag('tr');\n      for (var j = 0; j < columns; j++) {\n        var td = rowIndex < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n        if (j < columnHeaders) {\n          set$2(td, 'scope', 'row');\n        }\n        if (rowIndex < rowHeaders) {\n          set$2(td, 'scope', 'col');\n        }\n        append$1(td, SugarElement.fromTag('br'));\n        append$1(tr, td);\n      }\n      return tr;\n    };\n    var createGroupRow = function (columns) {\n      var columnGroup = SugarElement.fromTag('colgroup');\n      range$1(columns, function () {\n        return append$1(columnGroup, tableColumn());\n      });\n      return columnGroup;\n    };\n    var createRows = function (rows, columns, rowHeaders, columnHeaders) {\n      return range$1(rows, function (r) {\n        return createRow(columns, rowHeaders, columnHeaders, r);\n      });\n    };\n    var render = function (rows, columns, rowHeaders, columnHeaders, headerType, renderOpts) {\n      if (renderOpts === void 0) {\n        renderOpts = DefaultRenderOptions;\n      }\n      var table = SugarElement.fromTag('table');\n      var rowHeadersGoInThead = headerType !== 'cells';\n      setAll(table, renderOpts.styles);\n      setAll$1(table, renderOpts.attributes);\n      if (renderOpts.colGroups) {\n        append$1(table, createGroupRow(columns));\n      }\n      var actualRowHeaders = Math.min(rows, rowHeaders);\n      if (rowHeadersGoInThead && rowHeaders > 0) {\n        var thead = SugarElement.fromTag('thead');\n        append$1(table, thead);\n        var theadRowHeaders = headerType === 'sectionCells' ? actualRowHeaders : 0;\n        var theadRows = createRows(rowHeaders, columns, theadRowHeaders, columnHeaders);\n        append(thead, theadRows);\n      }\n      var tbody = SugarElement.fromTag('tbody');\n      append$1(table, tbody);\n      var numRows = rowHeadersGoInThead ? rows - actualRowHeaders : rows;\n      var numRowHeaders = rowHeadersGoInThead ? 0 : rowHeaders;\n      var tbodyRows = createRows(numRows, columns, numRowHeaders, columnHeaders);\n      append(tbody, tbodyRows);\n      return table;\n    };\n\n    var get$2 = function (element) {\n      return element.dom.innerHTML;\n    };\n    var getOuter = function (element) {\n      var container = SugarElement.fromTag('div');\n      var clone = SugarElement.fromDom(element.dom.cloneNode(true));\n      append$1(container, clone);\n      return get$2(container);\n    };\n\n    var placeCaretInCell = function (editor, cell) {\n      editor.selection.select(cell.dom, true);\n      editor.selection.collapse(true);\n    };\n    var selectFirstCellInTable = function (editor, tableElm) {\n      descendant(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    var fireEvents = function (editor, table) {\n      each$2(descendants(table, 'tr'), function (row) {\n        fireNewRow(editor, row.dom);\n        each$2(descendants(row, 'th,td'), function (cell) {\n          fireNewCell(editor, cell.dom);\n        });\n      });\n    };\n    var isPercentage = function (width) {\n      return isString(width) && width.indexOf('%') !== -1;\n    };\n    var insert = function (editor, columns, rows, colHeaders, rowHeaders) {\n      var defaultStyles = getDefaultStyles(editor);\n      var options = {\n        styles: defaultStyles,\n        attributes: getDefaultAttributes(editor),\n        colGroups: useColumnGroup(editor)\n      };\n      editor.undoManager.ignore(function () {\n        var table = render(rows, columns, rowHeaders, colHeaders, getTableHeaderType(editor), options);\n        set$2(table, 'data-mce-id', '__mce');\n        var html = getOuter(table);\n        editor.insertContent(html);\n        editor.addVisual();\n      });\n      return descendant(getBody(editor), 'table[data-mce-id=\"__mce\"]').map(function (table) {\n        if (isPixelsForced(editor)) {\n          enforcePixels(table);\n        } else if (isResponsiveForced(editor)) {\n          enforceNone(table);\n        } else if (isPercentagesForced(editor) || isPercentage(defaultStyles.width)) {\n          enforcePercentage(table);\n        }\n        removeDataStyle(table);\n        remove$7(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom;\n      }).getOr(null);\n    };\n    var insertTableWithDataValidation = function (editor, rows, columns, options, errorMsg) {\n      if (options === void 0) {\n        options = {};\n      }\n      var checkInput = function (val) {\n        return isNumber(val) && val > 0;\n      };\n      if (checkInput(rows) && checkInput(columns)) {\n        var headerRows = options.headerRows || 0;\n        var headerColumns = options.headerColumns || 0;\n        return insert(editor, columns, rows, headerColumns, headerRows);\n      } else {\n        console.error(errorMsg);\n        return null;\n      }\n    };\n\n    var getClipboardElements = function (getClipboard) {\n      return function () {\n        return getClipboard().fold(function () {\n          return [];\n        }, function (elems) {\n          return map$1(elems, function (e) {\n            return e.dom;\n          });\n        });\n      };\n    };\n    var setClipboardElements = function (setClipboard) {\n      return function (elems) {\n        var elmsOpt = elems.length > 0 ? Optional.some(fromDom(elems)) : Optional.none();\n        setClipboard(elmsOpt);\n      };\n    };\n    var insertTable = function (editor) {\n      return function (columns, rows, options) {\n        if (options === void 0) {\n          options = {};\n        }\n        var table = insertTableWithDataValidation(editor, rows, columns, options, 'Invalid values for insertTable - rows and columns values are required to insert a table.');\n        editor.undoManager.add();\n        return table;\n      };\n    };\n    var getApi = function (editor, clipboard, resizeHandler, selectionTargets) {\n      return {\n        insertTable: insertTable(editor),\n        setClipboardRows: setClipboardElements(clipboard.setRows),\n        getClipboardRows: getClipboardElements(clipboard.getRows),\n        setClipboardCols: setClipboardElements(clipboard.setColumns),\n        getClipboardCols: getClipboardElements(clipboard.getColumns),\n        resizeHandler: resizeHandler,\n        selectionTargets: selectionTargets\n      };\n    };\n\n    var constrainSpan = function (element, property, value) {\n      var currentColspan = getAttrValue(element, property, 1);\n      if (value === 1 || currentColspan <= 1) {\n        remove$7(element, property);\n      } else {\n        set$2(element, property, Math.min(value, currentColspan));\n      }\n    };\n    var generateColGroup = function (house, minColRange, maxColRange) {\n      if (Warehouse.hasColumns(house)) {\n        var colsToCopy = filter$2(Warehouse.justColumns(house), function (col) {\n          return col.column >= minColRange && col.column < maxColRange;\n        });\n        var copiedCols = map$1(colsToCopy, function (c) {\n          var clonedCol = deep(c.element);\n          constrainSpan(clonedCol, 'span', maxColRange - minColRange);\n          return clonedCol;\n        });\n        var fakeColgroup = SugarElement.fromTag('colgroup');\n        append(fakeColgroup, copiedCols);\n        return [fakeColgroup];\n      } else {\n        return [];\n      }\n    };\n    var generateRows = function (house, minColRange, maxColRange) {\n      return map$1(house.all, function (row) {\n        var cellsToCopy = filter$2(row.cells, function (cell) {\n          return cell.column >= minColRange && cell.column < maxColRange;\n        });\n        var copiedCells = map$1(cellsToCopy, function (cell) {\n          var clonedCell = deep(cell.element);\n          constrainSpan(clonedCell, 'colspan', maxColRange - minColRange);\n          return clonedCell;\n        });\n        var fakeTR = SugarElement.fromTag('tr');\n        append(fakeTR, copiedCells);\n        return fakeTR;\n      });\n    };\n    var copyCols = function (table, target) {\n      var house = Warehouse.fromTable(table);\n      var details = onUnlockedCells(house, target);\n      return details.map(function (selectedCells) {\n        var lastSelectedCell = selectedCells[selectedCells.length - 1];\n        var minColRange = selectedCells[0].column;\n        var maxColRange = lastSelectedCell.column + lastSelectedCell.colspan;\n        var fakeColGroups = generateColGroup(house, minColRange, maxColRange);\n        var fakeRows = generateRows(house, minColRange, maxColRange);\n        return __spreadArray(__spreadArray([], fakeColGroups, true), fakeRows, true);\n      });\n    };\n\n    var copyRows = function (table, target, generators) {\n      var warehouse = Warehouse.fromTable(table);\n      var details = onCells(warehouse, target);\n      return details.bind(function (selectedCells) {\n        var grid = toGrid(warehouse, generators, false);\n        var rows = extractGridDetails(grid).rows;\n        var slicedGrid = rows.slice(selectedCells[0].row, selectedCells[selectedCells.length - 1].row + selectedCells[selectedCells.length - 1].rowspan);\n        var filteredGrid = bind$2(slicedGrid, function (row) {\n          var newCells = filter$2(row.cells, function (cell) {\n            return !cell.isLocked;\n          });\n          return newCells.length > 0 ? [__assign(__assign({}, row), { cells: newCells })] : [];\n        });\n        var slicedDetails = toDetailList(filteredGrid);\n        return someIf(slicedDetails.length > 0, slicedDetails);\n      }).map(function (slicedDetails) {\n        return copy(slicedDetails);\n      });\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTDTHOverallStyle = function (dom, elm, name) {\n      var cells = dom.select('td,th', elm);\n      var firstChildStyle;\n      var checkChildren = function (firstChildStyle, elms) {\n        for (var i = 0; i < elms.length; i++) {\n          var currentStyle = dom.getStyle(elms[i], name);\n          if (typeof firstChildStyle === 'undefined') {\n            firstChildStyle = currentStyle;\n          }\n          if (firstChildStyle !== currentStyle) {\n            return '';\n          }\n        }\n        return firstChildStyle;\n      };\n      return checkChildren(firstChildStyle, cells);\n    };\n    var applyAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('align' + name, {}, elm);\n      }\n    };\n    var applyVAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('valign' + name, {}, elm);\n      }\n    };\n    var unApplyAlign = function (editor, elm) {\n      global$2.each('left center right'.split(' '), function (name) {\n        editor.formatter.remove('align' + name, {}, elm);\n      });\n    };\n    var unApplyVAlign = function (editor, elm) {\n      global$2.each('top middle bottom'.split(' '), function (name) {\n        editor.formatter.remove('valign' + name, {}, elm);\n      });\n    };\n\n    var verticalAlignValues = [\n      {\n        text: 'None',\n        value: ''\n      },\n      {\n        text: 'Top',\n        value: 'top'\n      },\n      {\n        text: 'Middle',\n        value: 'middle'\n      },\n      {\n        text: 'Bottom',\n        value: 'bottom'\n      }\n    ];\n\n    var hexColour = function (value) {\n      return { value: value };\n    };\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    var longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    var isHexString = function (hex) {\n      return shorthandRegex.test(hex) || longformRegex.test(hex);\n    };\n    var normalizeHex = function (hex) {\n      return removeLeading(hex, '#').toUpperCase();\n    };\n    var fromString$1 = function (hex) {\n      return isHexString(hex) ? Optional.some({ value: normalizeHex(hex) }) : Optional.none();\n    };\n    var toHex = function (component) {\n      var hex = component.toString(16);\n      return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n    };\n    var fromRgba = function (rgbaColour) {\n      var value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue);\n      return hexColour(value);\n    };\n\n    var rgbRegex = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/;\n    var rgbaRegex = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d?(?:\\.\\d+)?)\\)/;\n    var rgbaColour = function (red, green, blue, alpha) {\n      return {\n        red: red,\n        green: green,\n        blue: blue,\n        alpha: alpha\n      };\n    };\n    var fromStringValues = function (red, green, blue, alpha) {\n      var r = parseInt(red, 10);\n      var g = parseInt(green, 10);\n      var b = parseInt(blue, 10);\n      var a = parseFloat(alpha);\n      return rgbaColour(r, g, b, a);\n    };\n    var fromString = function (rgbaString) {\n      if (rgbaString === 'transparent') {\n        return Optional.some(rgbaColour(0, 0, 0, 0));\n      }\n      var rgbMatch = rgbRegex.exec(rgbaString);\n      if (rgbMatch !== null) {\n        return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n      }\n      var rgbaMatch = rgbaRegex.exec(rgbaString);\n      if (rgbaMatch !== null) {\n        return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n      }\n      return Optional.none();\n    };\n\n    var anyToHex = function (color) {\n      return fromString$1(color).orThunk(function () {\n        return fromString(color).map(fromRgba);\n      }).getOrThunk(function () {\n        var canvas = document.createElement('canvas');\n        canvas.height = 1;\n        canvas.width = 1;\n        var canvasContext = canvas.getContext('2d');\n        canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n        canvasContext.fillStyle = '#FFFFFF';\n        canvasContext.fillStyle = color;\n        canvasContext.fillRect(0, 0, 1, 1);\n        var rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n        var r = rgba[0];\n        var g = rgba[1];\n        var b = rgba[2];\n        var a = rgba[3];\n        return fromRgba(rgbaColour(r, g, b, a));\n      });\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var singleton = function (doRevoke) {\n      var subject = Cell(Optional.none());\n      var revoke = function () {\n        return subject.get().each(doRevoke);\n      };\n      var clear = function () {\n        revoke();\n        subject.set(Optional.none());\n      };\n      var isSet = function () {\n        return subject.get().isSome();\n      };\n      var get = function () {\n        return subject.get();\n      };\n      var set = function (s) {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear: clear,\n        isSet: isSet,\n        get: get,\n        set: set\n      };\n    };\n    var unbindable = function () {\n      return singleton(function (s) {\n        return s.unbind();\n      });\n    };\n    var value = function () {\n      var subject = singleton(noop);\n      var on = function (f) {\n        return subject.get().each(f);\n      };\n      return __assign(__assign({}, subject), { on: on });\n    };\n\n    var onSetupToggle = function (editor, selections, formatName, formatValue) {\n      return function (api) {\n        var boundCallback = unbindable();\n        var isNone = isEmpty$1(formatValue);\n        var init = function () {\n          var selectedCells = getCellsFromSelection(selections);\n          var checkNode = function (cell) {\n            return editor.formatter.match(formatName, { value: formatValue }, cell.dom, isNone);\n          };\n          if (isNone) {\n            api.setActive(!exists(selectedCells, checkNode));\n            boundCallback.set(editor.formatter.formatChanged(formatName, function (match) {\n              return api.setActive(!match);\n            }, true));\n          } else {\n            api.setActive(forall(selectedCells, checkNode));\n            boundCallback.set(editor.formatter.formatChanged(formatName, api.setActive, false, { value: formatValue }));\n          }\n        };\n        editor.initialized ? init() : editor.on('init', init);\n        return boundCallback.clear;\n      };\n    };\n    var isListGroup = function (item) {\n      return hasNonNullableKey(item, 'menu');\n    };\n    var buildListItems = function (items) {\n      return map$1(items, function (item) {\n        var text = item.text || item.title;\n        if (isListGroup(item)) {\n          return {\n            text: text,\n            items: buildListItems(item.menu)\n          };\n        } else {\n          return {\n            text: text,\n            value: item.value\n          };\n        }\n      });\n    };\n    var buildMenuItems = function (editor, selections, items, format, onAction) {\n      return map$1(items, function (item) {\n        var text = item.text || item.title;\n        if (isListGroup(item)) {\n          return {\n            type: 'nestedmenuitem',\n            text: text,\n            getSubmenuItems: function () {\n              return buildMenuItems(editor, selections, item.menu, format, onAction);\n            }\n          };\n        } else {\n          return {\n            text: text,\n            type: 'togglemenuitem',\n            onAction: function () {\n              return onAction(item.value);\n            },\n            onSetup: onSetupToggle(editor, selections, format, item.value)\n          };\n        }\n      });\n    };\n    var applyTableCellStyle = function (editor, style) {\n      return function (value) {\n        var _a;\n        editor.execCommand('mceTableApplyCellStyle', false, (_a = {}, _a[style] = value, _a));\n      };\n    };\n    var filterNoneItem = function (list) {\n      return bind$2(list, function (item) {\n        if (isListGroup(item)) {\n          return [__assign(__assign({}, item), { menu: filterNoneItem(item.menu) })];\n        } else {\n          return isNotEmpty(item.value) ? [item] : [];\n        }\n      });\n    };\n    var generateMenuItemsCallback = function (editor, selections, items, format, onAction) {\n      return function (callback) {\n        return callback(buildMenuItems(editor, selections, items, format, onAction));\n      };\n    };\n    var buildColorMenu = function (editor, colorList, style) {\n      var colorMap = map$1(colorList, function (entry) {\n        return {\n          text: entry.title,\n          value: '#' + anyToHex(entry.value).value,\n          type: 'choiceitem'\n        };\n      });\n      return [{\n          type: 'fancymenuitem',\n          fancytype: 'colorswatch',\n          initData: {\n            colors: colorMap.length > 0 ? colorMap : undefined,\n            allowCustomColors: false\n          },\n          onAction: function (data) {\n            var _a;\n            var value = data.value === 'remove' ? '' : data.value;\n            editor.execCommand('mceTableApplyCellStyle', false, (_a = {}, _a[style] = value, _a));\n          }\n        }];\n    };\n    var changeRowHeader = function (editor) {\n      return function () {\n        var currentType = editor.queryCommandValue('mceTableRowType');\n        var newType = currentType === 'header' ? 'body' : 'header';\n        editor.execCommand('mceTableRowType', false, { type: newType });\n      };\n    };\n    var changeColumnHeader = function (editor) {\n      return function () {\n        var currentType = editor.queryCommandValue('mceTableColType');\n        var newType = currentType === 'th' ? 'td' : 'th';\n        editor.execCommand('mceTableColType', false, { type: newType });\n      };\n    };\n\n    var getClassList$1 = function (editor) {\n      var classes = buildListItems(getCellClassList(editor));\n      if (classes.length > 0) {\n        return Optional.some({\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Optional.none();\n    };\n    var children = [\n      {\n        name: 'width',\n        type: 'input',\n        label: 'Width'\n      },\n      {\n        name: 'height',\n        type: 'input',\n        label: 'Height'\n      },\n      {\n        name: 'celltype',\n        type: 'listbox',\n        label: 'Cell type',\n        items: [\n          {\n            text: 'Cell',\n            value: 'td'\n          },\n          {\n            text: 'Header cell',\n            value: 'th'\n          }\n        ]\n      },\n      {\n        name: 'scope',\n        type: 'listbox',\n        label: 'Scope',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Row',\n            value: 'row'\n          },\n          {\n            text: 'Column',\n            value: 'col'\n          },\n          {\n            text: 'Row group',\n            value: 'rowgroup'\n          },\n          {\n            text: 'Column group',\n            value: 'colgroup'\n          }\n        ]\n      },\n      {\n        name: 'halign',\n        type: 'listbox',\n        label: 'Horizontal align',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        name: 'valign',\n        type: 'listbox',\n        label: 'Vertical align',\n        items: verticalAlignValues\n      }\n    ];\n    var getItems$2 = function (editor) {\n      return children.concat(getClassList$1(editor).toArray());\n    };\n\n    var getAdvancedTab = function (editor, dialogName) {\n      var emptyBorderStyle = [{\n          text: 'Select...',\n          value: ''\n        }];\n      var advTabItems = [\n        {\n          name: 'borderstyle',\n          type: 'listbox',\n          label: 'Border style',\n          items: emptyBorderStyle.concat(buildListItems(getTableBorderStyles(editor)))\n        },\n        {\n          name: 'bordercolor',\n          type: 'colorinput',\n          label: 'Border color'\n        },\n        {\n          name: 'backgroundcolor',\n          type: 'colorinput',\n          label: 'Background color'\n        }\n      ];\n      var borderWidth = {\n        name: 'borderwidth',\n        type: 'input',\n        label: 'Border width'\n      };\n      var items = dialogName === 'cell' ? [borderWidth].concat(advTabItems) : advTabItems;\n      return {\n        title: 'Advanced',\n        name: 'advanced',\n        items: items\n      };\n    };\n\n    var modifiers = function (testTruthy) {\n      return function (editor, node) {\n        var dom = editor.dom;\n        var setAttrib = function (attr, value) {\n          if (!testTruthy || value) {\n            dom.setAttrib(node, attr, value);\n          }\n        };\n        var setStyle = function (prop, value) {\n          if (!testTruthy || value) {\n            dom.setStyle(node, prop, value);\n          }\n        };\n        var setFormat = function (formatName, value) {\n          if (!testTruthy || value) {\n            if (value === '') {\n              editor.formatter.remove(formatName, { value: null }, node, true);\n            } else {\n              editor.formatter.apply(formatName, { value: value }, node);\n            }\n          }\n        };\n        return {\n          setAttrib: setAttrib,\n          setStyle: setStyle,\n          setFormat: setFormat\n        };\n      };\n    };\n    var DomModifier = {\n      normal: modifiers(false),\n      ifTruthy: modifiers(true)\n    };\n\n    var rgbToHex = function (dom) {\n      return function (value) {\n        return startsWith(value, 'rgb') ? dom.toHex(value) : value;\n      };\n    };\n    var extractAdvancedStyles = function (dom, elm) {\n      var element = SugarElement.fromDom(elm);\n      return {\n        borderwidth: getRaw$2(element, 'border-width').getOr(''),\n        borderstyle: getRaw$2(element, 'border-style').getOr(''),\n        bordercolor: getRaw$2(element, 'border-color').map(rgbToHex(dom)).getOr(''),\n        backgroundcolor: getRaw$2(element, 'background-color').map(rgbToHex(dom)).getOr('')\n      };\n    };\n    var getSharedValues = function (data) {\n      var baseData = data[0];\n      var comparisonData = data.slice(1);\n      each$2(comparisonData, function (items) {\n        each$2(keys(baseData), function (key) {\n          each$1(items, function (itemValue, itemKey) {\n            var comparisonValue = baseData[key];\n            if (comparisonValue !== '' && key === itemKey) {\n              if (comparisonValue !== itemValue) {\n                baseData[key] = '';\n              }\n            }\n          });\n        });\n      });\n      return baseData;\n    };\n    var getAlignment = function (formats, formatName, editor, elm) {\n      return find$1(formats, function (name) {\n        return !isUndefined(editor.formatter.matchNode(elm, formatName + name));\n      }).getOr('');\n    };\n    var getHAlignment = curry(getAlignment, [\n      'left',\n      'center',\n      'right'\n    ], 'align');\n    var getVAlignment = curry(getAlignment, [\n      'top',\n      'middle',\n      'bottom'\n    ], 'valign');\n    var extractDataFromSettings = function (editor, hasAdvTableTab) {\n      var style = getDefaultStyles(editor);\n      var attrs = getDefaultAttributes(editor);\n      var extractAdvancedStyleData = function (dom) {\n        return {\n          borderstyle: get$c(style, 'border-style').getOr(''),\n          bordercolor: rgbToHex(dom)(get$c(style, 'border-color').getOr('')),\n          backgroundcolor: rgbToHex(dom)(get$c(style, 'background-color').getOr(''))\n        };\n      };\n      var defaultData = {\n        height: '',\n        width: '100%',\n        cellspacing: '',\n        cellpadding: '',\n        caption: false,\n        class: '',\n        align: '',\n        border: ''\n      };\n      var getBorder = function () {\n        var borderWidth = style['border-width'];\n        if (shouldStyleWithCss(editor) && borderWidth) {\n          return { border: borderWidth };\n        }\n        return get$c(attrs, 'border').fold(function () {\n          return {};\n        }, function (border) {\n          return { border: border };\n        });\n      };\n      var advStyle = hasAdvTableTab ? extractAdvancedStyleData(editor.dom) : {};\n      var getCellPaddingCellSpacing = function () {\n        var spacing = get$c(style, 'border-spacing').or(get$c(attrs, 'cellspacing')).fold(function () {\n          return {};\n        }, function (cellspacing) {\n          return { cellspacing: cellspacing };\n        });\n        var padding = get$c(style, 'border-padding').or(get$c(attrs, 'cellpadding')).fold(function () {\n          return {};\n        }, function (cellpadding) {\n          return { cellpadding: cellpadding };\n        });\n        return __assign(__assign({}, spacing), padding);\n      };\n      var data = __assign(__assign(__assign(__assign(__assign(__assign({}, defaultData), style), attrs), advStyle), getBorder()), getCellPaddingCellSpacing());\n      return data;\n    };\n    var getRowType = function (elm) {\n      return table(SugarElement.fromDom(elm)).map(function (table) {\n        var target = { selection: fromDom(elm.cells) };\n        return getRowsType(table, target);\n      }).getOr('');\n    };\n    var extractDataFromTableElement = function (editor, elm, hasAdvTableTab) {\n      var getBorder = function (dom, elm) {\n        var optBorderWidth = getRaw$2(SugarElement.fromDom(elm), 'border-width');\n        if (shouldStyleWithCss(editor) && optBorderWidth.isSome()) {\n          return optBorderWidth.getOr('');\n        }\n        return dom.getAttrib(elm, 'border') || getTDTHOverallStyle(editor.dom, elm, 'border-width') || getTDTHOverallStyle(editor.dom, elm, 'border');\n      };\n      var dom = editor.dom;\n      var cellspacing = shouldStyleWithCss(editor) ? dom.getStyle(elm, 'border-spacing') || dom.getAttrib(elm, 'cellspacing') : dom.getAttrib(elm, 'cellspacing') || dom.getStyle(elm, 'border-spacing');\n      var cellpadding = shouldStyleWithCss(editor) ? getTDTHOverallStyle(dom, elm, 'padding') || dom.getAttrib(elm, 'cellpadding') : dom.getAttrib(elm, 'cellpadding') || getTDTHOverallStyle(dom, elm, 'padding');\n      return __assign({\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        cellspacing: cellspacing,\n        cellpadding: cellpadding,\n        border: getBorder(dom, elm),\n        caption: !!dom.select('caption', elm)[0],\n        class: dom.getAttrib(elm, 'class', ''),\n        align: getHAlignment(editor, elm)\n      }, hasAdvTableTab ? extractAdvancedStyles(dom, elm) : {});\n    };\n    var extractDataFromRowElement = function (editor, elm, hasAdvancedRowTab) {\n      var dom = editor.dom;\n      return __assign({\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        class: dom.getAttrib(elm, 'class', ''),\n        type: getRowType(elm),\n        align: getHAlignment(editor, elm)\n      }, hasAdvancedRowTab ? extractAdvancedStyles(dom, elm) : {});\n    };\n    var extractDataFromCellElement = function (editor, cell, hasAdvancedCellTab, column) {\n      var dom = editor.dom;\n      var colElm = column.getOr(cell);\n      var getStyle = function (element, style) {\n        return dom.getStyle(element, style) || dom.getAttrib(element, style);\n      };\n      return __assign({\n        width: getStyle(colElm, 'width'),\n        height: getStyle(cell, 'height'),\n        scope: dom.getAttrib(cell, 'scope'),\n        celltype: getNodeName(cell),\n        class: dom.getAttrib(cell, 'class', ''),\n        halign: getHAlignment(editor, cell),\n        valign: getVAlignment(editor, cell)\n      }, hasAdvancedCellTab ? extractAdvancedStyles(dom, cell) : {});\n    };\n\n    var getSelectedCells = function (table, cells) {\n      var warehouse = Warehouse.fromTable(table);\n      var allCells = Warehouse.justCells(warehouse);\n      var filtered = filter$2(allCells, function (cellA) {\n        return exists(cells, function (cellB) {\n          return eq$1(cellA.element, cellB);\n        });\n      });\n      return map$1(filtered, function (cell) {\n        return {\n          element: cell.element.dom,\n          column: Warehouse.getColumnAt(warehouse, cell.column).map(function (col) {\n            return col.element.dom;\n          })\n        };\n      });\n    };\n    var updateSimpleProps$1 = function (modifier, colModifier, data) {\n      modifier.setAttrib('scope', data.scope);\n      modifier.setAttrib('class', data.class);\n      modifier.setStyle('height', addPxSuffix(data.height));\n      colModifier.setStyle('width', addPxSuffix(data.width));\n    };\n    var updateAdvancedProps$1 = function (modifier, data) {\n      modifier.setFormat('tablecellbackgroundcolor', data.backgroundcolor);\n      modifier.setFormat('tablecellbordercolor', data.bordercolor);\n      modifier.setFormat('tablecellborderstyle', data.borderstyle);\n      modifier.setFormat('tablecellborderwidth', addPxSuffix(data.borderwidth));\n    };\n    var applyStyleData$1 = function (editor, cells, data) {\n      var isSingleCell = cells.length === 1;\n      each$2(cells, function (item) {\n        var cellElm = item.element;\n        var modifier = isSingleCell ? DomModifier.normal(editor, cellElm) : DomModifier.ifTruthy(editor, cellElm);\n        var colModifier = item.column.map(function (col) {\n          return isSingleCell ? DomModifier.normal(editor, col) : DomModifier.ifTruthy(editor, col);\n        }).getOr(modifier);\n        updateSimpleProps$1(modifier, colModifier, data);\n        if (hasAdvancedCellTab(editor)) {\n          updateAdvancedProps$1(modifier, data);\n        }\n        if (isSingleCell) {\n          unApplyAlign(editor, cellElm);\n          unApplyVAlign(editor, cellElm);\n        }\n        if (data.halign) {\n          applyAlign(editor, cellElm, data.halign);\n        }\n        if (data.valign) {\n          applyVAlign(editor, cellElm, data.valign);\n        }\n      });\n    };\n    var applyStructureData$1 = function (editor, data) {\n      editor.execCommand('mceTableCellType', false, {\n        type: data.celltype,\n        no_events: true\n      });\n    };\n    var applyCellData = function (editor, cells, oldData, data) {\n      var modifiedData = filter$1(data, function (value, key) {\n        return oldData[key] !== value;\n      });\n      if (size(modifiedData) > 0 && cells.length >= 1) {\n        table(cells[0]).each(function (table) {\n          var selectedCells = getSelectedCells(table, cells);\n          var styleModified = size(filter$1(modifiedData, function (_value, key) {\n            return key !== 'scope' && key !== 'celltype';\n          })) > 0;\n          var structureModified = has$1(modifiedData, 'celltype');\n          if (styleModified || has$1(modifiedData, 'scope')) {\n            applyStyleData$1(editor, selectedCells, data);\n          }\n          if (structureModified) {\n            applyStructureData$1(editor, data);\n          }\n          fireTableModified(editor, table.dom, {\n            structure: structureModified,\n            style: styleModified\n          });\n        });\n      }\n    };\n    var onSubmitCellForm = function (editor, cells, oldData, api) {\n      var data = api.getData();\n      api.close();\n      editor.undoManager.transact(function () {\n        applyCellData(editor, cells, oldData, data);\n        editor.focus();\n      });\n    };\n    var getData = function (editor, cells) {\n      var cellsData = table(cells[0]).map(function (table) {\n        return map$1(getSelectedCells(table, cells), function (item) {\n          return extractDataFromCellElement(editor, item.element, hasAdvancedCellTab(editor), item.column);\n        });\n      });\n      return getSharedValues(cellsData.getOrDie());\n    };\n    var open$2 = function (editor, selections) {\n      var cells = getCellsFromSelection(selections);\n      if (cells.length === 0) {\n        return;\n      }\n      var data = getData(editor, cells);\n      var dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            name: 'general',\n            items: getItems$2(editor)\n          },\n          getAdvancedTab(editor, 'cell')\n        ]\n      };\n      var dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: getItems$2(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Cell Properties',\n        size: 'normal',\n        body: hasAdvancedCellTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitCellForm, editor, cells, data)\n      });\n    };\n\n    var getClassList = function (editor) {\n      var classes = buildListItems(getRowClassList(editor));\n      if (classes.length > 0) {\n        return Optional.some({\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Optional.none();\n    };\n    var formChildren = [\n      {\n        type: 'listbox',\n        name: 'type',\n        label: 'Row type',\n        items: [\n          {\n            text: 'Header',\n            value: 'header'\n          },\n          {\n            text: 'Body',\n            value: 'body'\n          },\n          {\n            text: 'Footer',\n            value: 'footer'\n          }\n        ]\n      },\n      {\n        type: 'listbox',\n        name: 'align',\n        label: 'Alignment',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        label: 'Height',\n        name: 'height',\n        type: 'input'\n      }\n    ];\n    var getItems$1 = function (editor) {\n      return formChildren.concat(getClassList(editor).toArray());\n    };\n\n    var updateSimpleProps = function (modifier, data) {\n      modifier.setAttrib('class', data.class);\n      modifier.setStyle('height', addPxSuffix(data.height));\n    };\n    var updateAdvancedProps = function (modifier, data) {\n      modifier.setStyle('background-color', data.backgroundcolor);\n      modifier.setStyle('border-color', data.bordercolor);\n      modifier.setStyle('border-style', data.borderstyle);\n    };\n    var applyStyleData = function (editor, rows, data, oldData) {\n      var isSingleRow = rows.length === 1;\n      each$2(rows, function (rowElm) {\n        var modifier = isSingleRow ? DomModifier.normal(editor, rowElm) : DomModifier.ifTruthy(editor, rowElm);\n        updateSimpleProps(modifier, data);\n        if (hasAdvancedRowTab(editor)) {\n          updateAdvancedProps(modifier, data);\n        }\n        if (data.align !== oldData.align) {\n          unApplyAlign(editor, rowElm);\n          applyAlign(editor, rowElm, data.align);\n        }\n      });\n    };\n    var applyStructureData = function (editor, data) {\n      editor.execCommand('mceTableRowType', false, {\n        type: data.type,\n        no_events: true\n      });\n    };\n    var applyRowData = function (editor, rows, oldData, data) {\n      var modifiedData = filter$1(data, function (value, key) {\n        return oldData[key] !== value;\n      });\n      if (size(modifiedData) > 0) {\n        var typeModified_1 = has$1(modifiedData, 'type');\n        var styleModified_1 = typeModified_1 ? size(modifiedData) > 1 : true;\n        if (styleModified_1) {\n          applyStyleData(editor, rows, data, oldData);\n        }\n        if (typeModified_1) {\n          applyStructureData(editor, data);\n        }\n        table(SugarElement.fromDom(rows[0])).each(function (table) {\n          return fireTableModified(editor, table.dom, {\n            structure: typeModified_1,\n            style: styleModified_1\n          });\n        });\n      }\n    };\n    var onSubmitRowForm = function (editor, rows, oldData, api) {\n      var data = api.getData();\n      api.close();\n      editor.undoManager.transact(function () {\n        applyRowData(editor, rows, oldData, data);\n        editor.focus();\n      });\n    };\n    var open$1 = function (editor) {\n      var rows = getRowsFromSelection(getSelectionStart(editor), ephemera.selected);\n      if (rows.length === 0) {\n        return;\n      }\n      var rowsData = map$1(rows, function (rowElm) {\n        return extractDataFromRowElement(editor, rowElm.dom, hasAdvancedRowTab(editor));\n      });\n      var data = getSharedValues(rowsData);\n      var dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            name: 'general',\n            items: getItems$1(editor)\n          },\n          getAdvancedTab(editor, 'row')\n        ]\n      };\n      var dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: getItems$1(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Row Properties',\n        size: 'normal',\n        body: hasAdvancedRowTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitRowForm, editor, map$1(rows, function (r) {\n          return r.dom;\n        }), data)\n      });\n    };\n\n    var getItems = function (editor, classes, insertNewTable) {\n      var rowColCountItems = !insertNewTable ? [] : [\n        {\n          type: 'input',\n          name: 'cols',\n          label: 'Cols',\n          inputMode: 'numeric'\n        },\n        {\n          type: 'input',\n          name: 'rows',\n          label: 'Rows',\n          inputMode: 'numeric'\n        }\n      ];\n      var alwaysItems = [\n        {\n          type: 'input',\n          name: 'width',\n          label: 'Width'\n        },\n        {\n          type: 'input',\n          name: 'height',\n          label: 'Height'\n        }\n      ];\n      var appearanceItems = hasAppearanceOptions(editor) ? [\n        {\n          type: 'input',\n          name: 'cellspacing',\n          label: 'Cell spacing',\n          inputMode: 'numeric'\n        },\n        {\n          type: 'input',\n          name: 'cellpadding',\n          label: 'Cell padding',\n          inputMode: 'numeric'\n        },\n        {\n          type: 'input',\n          name: 'border',\n          label: 'Border width'\n        },\n        {\n          type: 'label',\n          label: 'Caption',\n          items: [{\n              type: 'checkbox',\n              name: 'caption',\n              label: 'Show caption'\n            }]\n        }\n      ] : [];\n      var alignmentItem = [{\n          type: 'listbox',\n          name: 'align',\n          label: 'Alignment',\n          items: [\n            {\n              text: 'None',\n              value: ''\n            },\n            {\n              text: 'Left',\n              value: 'left'\n            },\n            {\n              text: 'Center',\n              value: 'center'\n            },\n            {\n              text: 'Right',\n              value: 'right'\n            }\n          ]\n        }];\n      var classListItem = classes.length > 0 ? [{\n          type: 'listbox',\n          name: 'class',\n          label: 'Class',\n          items: classes\n        }] : [];\n      return rowColCountItems.concat(alwaysItems).concat(appearanceItems).concat(alignmentItem).concat(classListItem);\n    };\n\n    var styleTDTH = function (dom, elm, name, value) {\n      if (elm.tagName === 'TD' || elm.tagName === 'TH') {\n        if (isString(name)) {\n          dom.setStyle(elm, name, value);\n        } else {\n          dom.setStyle(elm, name);\n        }\n      } else {\n        if (elm.children) {\n          for (var i = 0; i < elm.children.length; i++) {\n            styleTDTH(dom, elm.children[i], name, value);\n          }\n        }\n      }\n    };\n    var applyDataToElement = function (editor, tableElm, data) {\n      var dom = editor.dom;\n      var attrs = {};\n      var styles = {};\n      attrs.class = data.class;\n      styles.height = addPxSuffix(data.height);\n      if (dom.getAttrib(tableElm, 'width') && !shouldStyleWithCss(editor)) {\n        attrs.width = removePxSuffix(data.width);\n      } else {\n        styles.width = addPxSuffix(data.width);\n      }\n      if (shouldStyleWithCss(editor)) {\n        styles['border-width'] = addPxSuffix(data.border);\n        styles['border-spacing'] = addPxSuffix(data.cellspacing);\n      } else {\n        attrs.border = data.border;\n        attrs.cellpadding = data.cellpadding;\n        attrs.cellspacing = data.cellspacing;\n      }\n      if (shouldStyleWithCss(editor) && tableElm.children) {\n        for (var i = 0; i < tableElm.children.length; i++) {\n          styleTDTH(dom, tableElm.children[i], {\n            'border-width': addPxSuffix(data.border),\n            'padding': addPxSuffix(data.cellpadding)\n          });\n          if (hasAdvancedTableTab(editor)) {\n            styleTDTH(dom, tableElm.children[i], { 'border-color': data.bordercolor });\n          }\n        }\n      }\n      if (hasAdvancedTableTab(editor)) {\n        styles['background-color'] = data.backgroundcolor;\n        styles['border-color'] = data.bordercolor;\n        styles['border-style'] = data.borderstyle;\n      }\n      attrs.style = dom.serializeStyle(__assign(__assign({}, getDefaultStyles(editor)), styles));\n      dom.setAttribs(tableElm, __assign(__assign({}, getDefaultAttributes(editor)), attrs));\n    };\n    var onSubmitTableForm = function (editor, tableElm, oldData, api) {\n      var dom = editor.dom;\n      var data = api.getData();\n      var modifiedData = filter$1(data, function (value, key) {\n        return oldData[key] !== value;\n      });\n      api.close();\n      if (data.class === '') {\n        delete data.class;\n      }\n      editor.undoManager.transact(function () {\n        if (!tableElm) {\n          var cols = parseInt(data.cols, 10) || 1;\n          var rows = parseInt(data.rows, 10) || 1;\n          tableElm = insert(editor, cols, rows, 0, 0);\n        }\n        if (size(modifiedData) > 0) {\n          applyDataToElement(editor, tableElm, data);\n          var captionElm = dom.select('caption', tableElm)[0];\n          if (captionElm && !data.caption || !captionElm && data.caption) {\n            editor.execCommand('mceTableToggleCaption');\n          }\n          if (data.align === '') {\n            unApplyAlign(editor, tableElm);\n          } else {\n            applyAlign(editor, tableElm, data.align);\n          }\n        }\n        editor.focus();\n        editor.addVisual();\n        if (size(modifiedData) > 0) {\n          var captionModified = has$1(modifiedData, 'caption');\n          var styleModified = captionModified ? size(modifiedData) > 1 : true;\n          fireTableModified(editor, tableElm, {\n            structure: captionModified,\n            style: styleModified\n          });\n        }\n      });\n    };\n    var open = function (editor, insertNewTable) {\n      var dom = editor.dom;\n      var tableElm;\n      var data = extractDataFromSettings(editor, hasAdvancedTableTab(editor));\n      if (insertNewTable === false) {\n        tableElm = dom.getParent(editor.selection.getStart(), 'table', editor.getBody());\n        if (tableElm) {\n          data = extractDataFromTableElement(editor, tableElm, hasAdvancedTableTab(editor));\n        } else {\n          if (hasAdvancedTableTab(editor)) {\n            data.borderstyle = '';\n            data.bordercolor = '';\n            data.backgroundcolor = '';\n          }\n        }\n      } else {\n        data.cols = '1';\n        data.rows = '1';\n        if (hasAdvancedTableTab(editor)) {\n          data.borderstyle = '';\n          data.bordercolor = '';\n          data.backgroundcolor = '';\n        }\n      }\n      var classes = buildListItems(getTableClassList(editor));\n      if (classes.length > 0) {\n        if (data.class) {\n          data.class = data.class.replace(/\\s*mce\\-item\\-table\\s*/g, '');\n        }\n      }\n      var generalPanel = {\n        type: 'grid',\n        columns: 2,\n        items: getItems(editor, classes, insertNewTable)\n      };\n      var nonAdvancedForm = function () {\n        return {\n          type: 'panel',\n          items: [generalPanel]\n        };\n      };\n      var advancedForm = function () {\n        return {\n          type: 'tabpanel',\n          tabs: [\n            {\n              title: 'General',\n              name: 'general',\n              items: [generalPanel]\n            },\n            getAdvancedTab(editor, 'table')\n          ]\n        };\n      };\n      var dialogBody = hasAdvancedTableTab(editor) ? advancedForm() : nonAdvancedForm();\n      editor.windowManager.open({\n        title: 'Table Properties',\n        size: 'normal',\n        body: dialogBody,\n        onSubmit: curry(onSubmitTableForm, editor, tableElm, data),\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data\n      });\n    };\n\n    var getSelectionStartCellOrCaption = function (editor) {\n      return getSelectionCellOrCaption(getSelectionStart(editor), getIsRoot(editor));\n    };\n    var getSelectionStartCell = function (editor) {\n      return getSelectionCell(getSelectionStart(editor), getIsRoot(editor));\n    };\n    var registerCommands = function (editor, actions, cellSelection, selections, clipboard) {\n      var isRoot = getIsRoot(editor);\n      var eraseTable = function () {\n        return getSelectionStartCellOrCaption(editor).each(function (cellOrCaption) {\n          table(cellOrCaption, isRoot).filter(not(isRoot)).each(function (table) {\n            var cursor = SugarElement.fromText('');\n            after$5(table, cursor);\n            remove$5(table);\n            if (editor.dom.isEmpty(editor.getBody())) {\n              editor.setContent('');\n              editor.selection.setCursorLocation();\n            } else {\n              var rng = editor.dom.createRng();\n              rng.setStart(cursor.dom, 0);\n              rng.setEnd(cursor.dom, 0);\n              editor.selection.setRng(rng);\n              editor.nodeChanged();\n            }\n          });\n        });\n      };\n      var setSizingMode = function (sizing) {\n        return getSelectionStartCellOrCaption(editor).each(function (cellOrCaption) {\n          var isForcedSizing = isResponsiveForced(editor) || isPixelsForced(editor) || isPercentagesForced(editor);\n          if (!isForcedSizing) {\n            table(cellOrCaption, isRoot).each(function (table) {\n              if (sizing === 'relative' && !isPercentSizing(table)) {\n                enforcePercentage(table);\n              } else if (sizing === 'fixed' && !isPixelSizing(table)) {\n                enforcePixels(table);\n              } else if (sizing === 'responsive' && !isNoneSizing(table)) {\n                enforceNone(table);\n              }\n              removeDataStyle(table);\n              fireTableModified(editor, table.dom, structureModified);\n            });\n          }\n        });\n      };\n      var getTableFromCell = function (cell) {\n        return table(cell, isRoot);\n      };\n      var performActionOnSelection = function (action) {\n        return getSelectionStartCell(editor).bind(function (cell) {\n          return getTableFromCell(cell).map(function (table) {\n            return action(table, cell);\n          });\n        });\n      };\n      var toggleTableClass = function (_ui, clazz) {\n        performActionOnSelection(function (table) {\n          editor.formatter.toggle('tableclass', { value: clazz }, table.dom);\n          fireTableModified(editor, table.dom, styleModified);\n        });\n      };\n      var toggleTableCellClass = function (_ui, clazz) {\n        performActionOnSelection(function (table) {\n          var selectedCells = getCellsFromSelection(selections);\n          var allHaveClass = forall(selectedCells, function (cell) {\n            return editor.formatter.match('tablecellclass', { value: clazz }, cell.dom);\n          });\n          var formatterAction = allHaveClass ? editor.formatter.remove : editor.formatter.apply;\n          each$2(selectedCells, function (cell) {\n            return formatterAction('tablecellclass', { value: clazz }, cell.dom);\n          });\n          fireTableModified(editor, table.dom, styleModified);\n        });\n      };\n      var toggleCaption = function () {\n        getSelectionStartCellOrCaption(editor).each(function (cellOrCaption) {\n          table(cellOrCaption, isRoot).each(function (table) {\n            child$1(table, 'caption').fold(function () {\n              var caption = SugarElement.fromTag('caption');\n              append$1(caption, SugarElement.fromText('Caption'));\n              appendAt(table, caption, 0);\n              editor.selection.setCursorLocation(caption.dom, 0);\n            }, function (caption) {\n              if (isTag('caption')(cellOrCaption)) {\n                one('td', table).each(function (td) {\n                  return editor.selection.setCursorLocation(td.dom, 0);\n                });\n              }\n              remove$5(caption);\n            });\n            fireTableModified(editor, table.dom, structureModified);\n          });\n        });\n      };\n      var postExecute = function (_data) {\n        editor.focus();\n      };\n      var actOnSelection = function (execute, noEvents) {\n        if (noEvents === void 0) {\n          noEvents = false;\n        }\n        return performActionOnSelection(function (table, startCell) {\n          var targets = forMenu(selections, table, startCell);\n          execute(table, targets, noEvents).each(postExecute);\n        });\n      };\n      var copyRowSelection = function () {\n        return performActionOnSelection(function (table, startCell) {\n          var targets = forMenu(selections, table, startCell);\n          var generators = cellOperations(noop, SugarElement.fromDom(editor.getDoc()), Optional.none());\n          return copyRows(table, targets, generators);\n        });\n      };\n      var copyColSelection = function () {\n        return performActionOnSelection(function (table, startCell) {\n          var targets = forMenu(selections, table, startCell);\n          return copyCols(table, targets);\n        });\n      };\n      var pasteOnSelection = function (execute, getRows) {\n        return getRows().each(function (rows) {\n          var clonedRows = map$1(rows, function (row) {\n            return deep(row);\n          });\n          performActionOnSelection(function (table, startCell) {\n            var generators = paste$1(SugarElement.fromDom(editor.getDoc()));\n            var targets = pasteRows(selections, startCell, clonedRows, generators);\n            execute(table, targets).each(postExecute);\n          });\n        });\n      };\n      var actOnType = function (getAction) {\n        return function (_ui, args) {\n          return get$c(args, 'type').each(function (type) {\n            actOnSelection(getAction(type), args.no_events);\n          });\n        };\n      };\n      each$1({\n        mceTableSplitCells: function () {\n          return actOnSelection(actions.unmergeCells);\n        },\n        mceTableMergeCells: function () {\n          return actOnSelection(actions.mergeCells);\n        },\n        mceTableInsertRowBefore: function () {\n          return actOnSelection(actions.insertRowsBefore);\n        },\n        mceTableInsertRowAfter: function () {\n          return actOnSelection(actions.insertRowsAfter);\n        },\n        mceTableInsertColBefore: function () {\n          return actOnSelection(actions.insertColumnsBefore);\n        },\n        mceTableInsertColAfter: function () {\n          return actOnSelection(actions.insertColumnsAfter);\n        },\n        mceTableDeleteCol: function () {\n          return actOnSelection(actions.deleteColumn);\n        },\n        mceTableDeleteRow: function () {\n          return actOnSelection(actions.deleteRow);\n        },\n        mceTableCutCol: function () {\n          return copyColSelection().each(function (selection) {\n            clipboard.setColumns(selection);\n            actOnSelection(actions.deleteColumn);\n          });\n        },\n        mceTableCutRow: function () {\n          return copyRowSelection().each(function (selection) {\n            clipboard.setRows(selection);\n            actOnSelection(actions.deleteRow);\n          });\n        },\n        mceTableCopyCol: function () {\n          return copyColSelection().each(function (selection) {\n            return clipboard.setColumns(selection);\n          });\n        },\n        mceTableCopyRow: function () {\n          return copyRowSelection().each(function (selection) {\n            return clipboard.setRows(selection);\n          });\n        },\n        mceTablePasteColBefore: function () {\n          return pasteOnSelection(actions.pasteColsBefore, clipboard.getColumns);\n        },\n        mceTablePasteColAfter: function () {\n          return pasteOnSelection(actions.pasteColsAfter, clipboard.getColumns);\n        },\n        mceTablePasteRowBefore: function () {\n          return pasteOnSelection(actions.pasteRowsBefore, clipboard.getRows);\n        },\n        mceTablePasteRowAfter: function () {\n          return pasteOnSelection(actions.pasteRowsAfter, clipboard.getRows);\n        },\n        mceTableDelete: eraseTable,\n        mceTableCellToggleClass: toggleTableCellClass,\n        mceTableToggleClass: toggleTableClass,\n        mceTableToggleCaption: toggleCaption,\n        mceTableSizingMode: function (_ui, sizing) {\n          return setSizingMode(sizing);\n        },\n        mceTableCellType: actOnType(function (type) {\n          return type === 'th' ? actions.makeCellsHeader : actions.unmakeCellsHeader;\n        }),\n        mceTableColType: actOnType(function (type) {\n          return type === 'th' ? actions.makeColumnsHeader : actions.unmakeColumnsHeader;\n        }),\n        mceTableRowType: actOnType(function (type) {\n          switch (type) {\n          case 'header':\n            return actions.makeRowsHeader;\n          case 'footer':\n            return actions.makeRowsFooter;\n          default:\n            return actions.makeRowsBody;\n          }\n        })\n      }, function (func, name) {\n        return editor.addCommand(name, func);\n      });\n      each$1({\n        mceTableProps: curry(open, editor, false),\n        mceTableRowProps: curry(open$1, editor),\n        mceTableCellProps: curry(open$2, editor, selections)\n      }, function (func, name) {\n        return editor.addCommand(name, function () {\n          return func();\n        });\n      });\n      editor.addCommand('mceInsertTable', function (_ui, args) {\n        if (isObject(args) && keys(args).length > 0) {\n          insertTableWithDataValidation(editor, args.rows, args.columns, args.options, 'Invalid values for mceInsertTable - rows and columns values are required to insert a table.');\n        } else {\n          open(editor, true);\n        }\n      });\n      editor.addCommand('mceTableApplyCellStyle', function (_ui, args) {\n        var getFormatName = function (style) {\n          return 'tablecell' + style.toLowerCase().replace('-', '');\n        };\n        if (!isObject(args)) {\n          return;\n        }\n        var cells = getCellsFromSelection(selections);\n        if (cells.length === 0) {\n          return;\n        }\n        var validArgs = filter$1(args, function (value, style) {\n          return editor.formatter.has(getFormatName(style)) && isString(value);\n        });\n        if (isEmpty(validArgs)) {\n          return;\n        }\n        each$1(validArgs, function (value, style) {\n          each$2(cells, function (cell) {\n            DomModifier.normal(editor, cell.dom).setFormat(getFormatName(style), value);\n          });\n        });\n        getTableFromCell(cells[0]).each(function (table) {\n          return fireTableModified(editor, table.dom, styleModified);\n        });\n      });\n    };\n\n    var registerQueryCommands = function (editor, actions, selections) {\n      var isRoot = getIsRoot(editor);\n      var lookupOnSelection = function (action) {\n        return getSelectionCell(getSelectionStart(editor)).bind(function (cell) {\n          return table(cell, isRoot).map(function (table) {\n            var targets = forMenu(selections, table, cell);\n            return action(table, targets);\n          });\n        }).getOr('');\n      };\n      each$1({\n        mceTableRowType: function () {\n          return lookupOnSelection(actions.getTableRowType);\n        },\n        mceTableCellType: function () {\n          return lookupOnSelection(actions.getTableCellType);\n        },\n        mceTableColType: function () {\n          return lookupOnSelection(actions.getTableColType);\n        }\n      }, function (func, name) {\n        return editor.addQueryValueHandler(name, func);\n      });\n    };\n\n    var Clipboard = function () {\n      var rows = value();\n      var cols = value();\n      return {\n        getRows: rows.get,\n        setRows: function (r) {\n          r.fold(rows.clear, rows.set);\n          cols.clear();\n        },\n        clearRows: rows.clear,\n        getColumns: cols.get,\n        setColumns: function (c) {\n          c.fold(cols.clear, cols.set);\n          rows.clear();\n        },\n        clearColumns: cols.clear\n      };\n    };\n\n    var genericBase = {\n      remove_similar: true,\n      inherit: false\n    };\n    var cellBase = __assign({ selector: 'td,th' }, genericBase);\n    var cellFormats = {\n      tablecellbackgroundcolor: __assign({ styles: { backgroundColor: '%value' } }, cellBase),\n      tablecellverticalalign: __assign({ styles: { 'vertical-align': '%value' } }, cellBase),\n      tablecellbordercolor: __assign({ styles: { borderColor: '%value' } }, cellBase),\n      tablecellclass: __assign({ classes: ['%value'] }, cellBase),\n      tableclass: __assign({\n        selector: 'table',\n        classes: ['%value']\n      }, genericBase),\n      tablecellborderstyle: __assign({ styles: { borderStyle: '%value' } }, cellBase),\n      tablecellborderwidth: __assign({ styles: { borderWidth: '%value' } }, cellBase)\n    };\n    var registerFormats = function (editor) {\n      editor.formatter.register(cellFormats);\n    };\n\n    var adt$5 = Adt.generate([\n      { none: ['current'] },\n      { first: ['current'] },\n      {\n        middle: [\n          'current',\n          'target'\n        ]\n      },\n      { last: ['current'] }\n    ]);\n    var none = function (current) {\n      if (current === void 0) {\n        current = undefined;\n      }\n      return adt$5.none(current);\n    };\n    var CellLocation = __assign(__assign({}, adt$5), { none: none });\n\n    var walk = function (all, current, index, direction, isEligible) {\n      if (isEligible === void 0) {\n        isEligible = always;\n      }\n      var forwards = direction === 1;\n      if (!forwards && index <= 0) {\n        return CellLocation.first(all[0]);\n      } else if (forwards && index >= all.length - 1) {\n        return CellLocation.last(all[all.length - 1]);\n      } else {\n        var newIndex = index + direction;\n        var elem = all[newIndex];\n        return isEligible(elem) ? CellLocation.middle(current, elem) : walk(all, current, newIndex, direction, isEligible);\n      }\n    };\n    var detect$1 = function (current, isRoot) {\n      return table(current, isRoot).bind(function (table) {\n        var all = cells$1(table);\n        var index = findIndex(all, function (x) {\n          return eq$1(current, x);\n        });\n        return index.map(function (index) {\n          return {\n            index: index,\n            all: all\n          };\n        });\n      });\n    };\n    var next = function (current, isEligible, isRoot) {\n      var detection = detect$1(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none(current);\n      }, function (info) {\n        return walk(info.all, current, info.index, 1, isEligible);\n      });\n    };\n    var prev = function (current, isEligible, isRoot) {\n      var detection = detect$1(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none();\n      }, function (info) {\n        return walk(info.all, current, info.index, -1, isEligible);\n      });\n    };\n\n    var create$2 = function (start, soffset, finish, foffset) {\n      return {\n        start: start,\n        soffset: soffset,\n        finish: finish,\n        foffset: foffset\n      };\n    };\n    var SimRange = { create: create$2 };\n\n    var adt$4 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    var cata$1 = function (subject, onBefore, onOn, onAfter) {\n      return subject.fold(onBefore, onOn, onAfter);\n    };\n    var getStart$1 = function (situ) {\n      return situ.fold(identity, identity, identity);\n    };\n    var before$2 = adt$4.before;\n    var on = adt$4.on;\n    var after$3 = adt$4.after;\n    var Situ = {\n      before: before$2,\n      on: on,\n      after: after$3,\n      cata: cata$1,\n      getStart: getStart$1\n    };\n\n    var adt$3 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var exactFromRange = function (simRange) {\n      return adt$3.exact(simRange.start, simRange.soffset, simRange.finish, simRange.foffset);\n    };\n    var getStart = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return SugarElement.fromDom(rng.startContainer);\n        },\n        relative: function (startSitu, _finishSitu) {\n          return Situ.getStart(startSitu);\n        },\n        exact: function (start, _soffset, _finish, _foffset) {\n          return start;\n        }\n      });\n    };\n    var domRange = adt$3.domRange;\n    var relative = adt$3.relative;\n    var exact = adt$3.exact;\n    var getWin = function (selection) {\n      var start = getStart(selection);\n      return defaultView(start);\n    };\n    var range = SimRange.create;\n    var SimSelection = {\n      domRange: domRange,\n      relative: relative,\n      exact: exact,\n      exactFromRange: exactFromRange,\n      getWin: getWin,\n      range: range\n    };\n\n    var selectNode = function (win, element) {\n      var rng = win.document.createRange();\n      rng.selectNode(element.dom);\n      return rng;\n    };\n    var selectNodeContents = function (win, element) {\n      var rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    var selectNodeContentsUsing = function (rng, element) {\n      return rng.selectNodeContents(element.dom);\n    };\n    var setStart = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setStartBefore(e.dom);\n      }, function (e, o) {\n        rng.setStart(e.dom, o);\n      }, function (e) {\n        rng.setStartAfter(e.dom);\n      });\n    };\n    var setFinish = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setEndBefore(e.dom);\n      }, function (e, o) {\n        rng.setEnd(e.dom, o);\n      }, function (e) {\n        rng.setEndAfter(e.dom);\n      });\n    };\n    var relativeToNative = function (win, startSitu, finishSitu) {\n      var range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    var exactToNative = function (win, start, soffset, finish, foffset) {\n      var rng = win.document.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    var toRect = function (rect) {\n      return {\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        width: rect.width,\n        height: rect.height\n      };\n    };\n    var getFirstRect$1 = function (rng) {\n      var rects = rng.getClientRects();\n      var rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n\n    var adt$2 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var fromRange = function (win, type, range) {\n      return type(SugarElement.fromDom(range.startContainer), range.startOffset, SugarElement.fromDom(range.endContainer), range.endOffset);\n    };\n    var getRanges = function (win, selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return {\n            ltr: constant(rng),\n            rtl: Optional.none\n          };\n        },\n        relative: function (startSitu, finishSitu) {\n          return {\n            ltr: cached(function () {\n              return relativeToNative(win, startSitu, finishSitu);\n            }),\n            rtl: cached(function () {\n              return Optional.some(relativeToNative(win, finishSitu, startSitu));\n            })\n          };\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return {\n            ltr: cached(function () {\n              return exactToNative(win, start, soffset, finish, foffset);\n            }),\n            rtl: cached(function () {\n              return Optional.some(exactToNative(win, finish, foffset, start, soffset));\n            })\n          };\n        }\n      });\n    };\n    var doDiagnose = function (win, ranges) {\n      var rng = ranges.ltr();\n      if (rng.collapsed) {\n        var reversed = ranges.rtl().filter(function (rev) {\n          return rev.collapsed === false;\n        });\n        return reversed.map(function (rev) {\n          return adt$2.rtl(SugarElement.fromDom(rev.endContainer), rev.endOffset, SugarElement.fromDom(rev.startContainer), rev.startOffset);\n        }).getOrThunk(function () {\n          return fromRange(win, adt$2.ltr, rng);\n        });\n      } else {\n        return fromRange(win, adt$2.ltr, rng);\n      }\n    };\n    var diagnose = function (win, selection) {\n      var ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    var asLtrRange = function (win, selection) {\n      var diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(start.dom, soffset);\n          rng.setEnd(finish.dom, foffset);\n          return rng;\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(finish.dom, foffset);\n          rng.setEnd(start.dom, soffset);\n          return rng;\n        }\n      });\n    };\n    adt$2.ltr;\n    adt$2.rtl;\n\n    var searchForPoint = function (rectForOffset, x, y, maxX, length) {\n      if (length === 0) {\n        return 0;\n      } else if (x === maxX) {\n        return length - 1;\n      }\n      var xDelta = maxX;\n      for (var i = 1; i < length; i++) {\n        var rect = rectForOffset(i);\n        var curDeltaX = Math.abs(x - rect.left);\n        if (y <= rect.bottom) {\n          if (y < rect.top || curDeltaX > xDelta) {\n            return i - 1;\n          } else {\n            xDelta = curDeltaX;\n          }\n        }\n      }\n      return 0;\n    };\n    var inRect = function (rect, x, y) {\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    };\n\n    var locateOffset = function (doc, textnode, x, y, rect) {\n      var rangeForOffset = function (o) {\n        var r = doc.dom.createRange();\n        r.setStart(textnode.dom, o);\n        r.collapse(true);\n        return r;\n      };\n      var rectForOffset = function (o) {\n        var r = rangeForOffset(o);\n        return r.getBoundingClientRect();\n      };\n      var length = get$9(textnode).length;\n      var offset = searchForPoint(rectForOffset, x, y, rect.right, length);\n      return rangeForOffset(offset);\n    };\n    var locate$1 = function (doc, node, x, y) {\n      var r = doc.dom.createRange();\n      r.selectNode(node.dom);\n      var rects = r.getClientRects();\n      var foundRect = findMap(rects, function (rect) {\n        return inRect(rect, x, y) ? Optional.some(rect) : Optional.none();\n      });\n      return foundRect.map(function (rect) {\n        return locateOffset(doc, node, x, y, rect);\n      });\n    };\n\n    var searchInChildren = function (doc, node, x, y) {\n      var r = doc.dom.createRange();\n      var nodes = children$3(node);\n      return findMap(nodes, function (n) {\n        r.selectNode(n.dom);\n        return inRect(r.getBoundingClientRect(), x, y) ? locateNode(doc, n, x, y) : Optional.none();\n      });\n    };\n    var locateNode = function (doc, node, x, y) {\n      return isText(node) ? locate$1(doc, node, x, y) : searchInChildren(doc, node, x, y);\n    };\n    var locate = function (doc, node, x, y) {\n      var r = doc.dom.createRange();\n      r.selectNode(node.dom);\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locateNode(doc, node, boundedX, boundedY);\n    };\n\n    var COLLAPSE_TO_LEFT = true;\n    var COLLAPSE_TO_RIGHT = false;\n    var getCollapseDirection = function (rect, x) {\n      return x - rect.left < rect.right - x ? COLLAPSE_TO_LEFT : COLLAPSE_TO_RIGHT;\n    };\n    var createCollapsedNode = function (doc, target, collapseDirection) {\n      var r = doc.dom.createRange();\n      r.selectNode(target.dom);\n      r.collapse(collapseDirection);\n      return r;\n    };\n    var locateInElement = function (doc, node, x) {\n      var cursorRange = doc.dom.createRange();\n      cursorRange.selectNode(node.dom);\n      var rect = cursorRange.getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      var f = collapseDirection === COLLAPSE_TO_LEFT ? first : last$1;\n      return f(node).map(function (target) {\n        return createCollapsedNode(doc, target, collapseDirection);\n      });\n    };\n    var locateInEmpty = function (doc, node, x) {\n      var rect = node.dom.getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      return Optional.some(createCollapsedNode(doc, node, collapseDirection));\n    };\n    var search = function (doc, node, x) {\n      var f = children$3(node).length === 0 ? locateInEmpty : locateInElement;\n      return f(doc, node, x);\n    };\n\n    var caretPositionFromPoint = function (doc, x, y) {\n      var _a, _b;\n      return Optional.from((_b = (_a = doc.dom).caretPositionFromPoint) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)).bind(function (pos) {\n        if (pos.offsetNode === null) {\n          return Optional.none();\n        }\n        var r = doc.dom.createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Optional.some(r);\n      });\n    };\n    var caretRangeFromPoint = function (doc, x, y) {\n      var _a, _b;\n      return Optional.from((_b = (_a = doc.dom).caretRangeFromPoint) === null || _b === void 0 ? void 0 : _b.call(_a, x, y));\n    };\n    var searchTextNodes = function (doc, node, x, y) {\n      var r = doc.dom.createRange();\n      r.selectNode(node.dom);\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locate(doc, node, boundedX, boundedY);\n    };\n    var searchFromPoint = function (doc, x, y) {\n      return SugarElement.fromPoint(doc, x, y).bind(function (elem) {\n        var fallback = function () {\n          return search(doc, elem, x);\n        };\n        return children$3(elem).length === 0 ? fallback() : searchTextNodes(doc, elem, x, y).orThunk(fallback);\n      });\n    };\n    var availableSearch = function () {\n      if (document.caretPositionFromPoint) {\n        return caretPositionFromPoint;\n      } else if (document.caretRangeFromPoint) {\n        return caretRangeFromPoint;\n      } else {\n        return searchFromPoint;\n      }\n    }();\n    var fromPoint = function (win, x, y) {\n      var doc = SugarElement.fromDom(win.document);\n      return availableSearch(doc, x, y).map(function (rng) {\n        return SimRange.create(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset);\n      });\n    };\n\n    var beforeSpecial = function (element, offset) {\n      var name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains$2([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    var preprocessRelative = function (startSitu, finishSitu) {\n      var start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      var finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return SimSelection.relative(start, finish);\n    };\n    var preprocessExact = function (start, soffset, finish, foffset) {\n      var startSitu = beforeSpecial(start, soffset);\n      var finishSitu = beforeSpecial(finish, foffset);\n      return SimSelection.relative(startSitu, finishSitu);\n    };\n    var preprocess = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          var start = SugarElement.fromDom(rng.startContainer);\n          var finish = SugarElement.fromDom(rng.endContainer);\n          return preprocessExact(start, rng.startOffset, finish, rng.endOffset);\n        },\n        relative: preprocessRelative,\n        exact: preprocessExact\n      });\n    };\n\n    var makeRange = function (start, soffset, finish, foffset) {\n      var doc = owner(start);\n      var rng = doc.dom.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    var after$2 = function (start, soffset, finish, foffset) {\n      var r = makeRange(start, soffset, finish, foffset);\n      var same = eq$1(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    var getNativeSelection = function (win) {\n      return Optional.from(win.getSelection());\n    };\n    var doSetNativeRange = function (win, rng) {\n      getNativeSelection(win).each(function (selection) {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    var doSetRange = function (win, start, soffset, finish, foffset) {\n      var rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    var setLegacyRtlRange = function (win, selection, start, soffset, finish, foffset) {\n      selection.collapse(start.dom, soffset);\n      selection.extend(finish.dom, foffset);\n    };\n    var setRangeFromRelative = function (win, relative) {\n      return diagnose(win, relative).match({\n        ltr: function (start, soffset, finish, foffset) {\n          doSetRange(win, start, soffset, finish, foffset);\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          getNativeSelection(win).each(function (selection) {\n            if (selection.setBaseAndExtent) {\n              selection.setBaseAndExtent(start.dom, soffset, finish.dom, foffset);\n            } else if (selection.extend) {\n              try {\n                setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n              } catch (e) {\n                doSetRange(win, finish, foffset, start, soffset);\n              }\n            } else {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          });\n        }\n      });\n    };\n    var setExact = function (win, start, soffset, finish, foffset) {\n      var relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    var setRelative = function (win, startSitu, finishSitu) {\n      var relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    var toNative = function (selection) {\n      var win = SimSelection.getWin(selection).dom;\n      var getDomRange = function (start, soffset, finish, foffset) {\n        return exactToNative(win, start, soffset, finish, foffset);\n      };\n      var filtered = preprocess(selection);\n      return diagnose(win, filtered).match({\n        ltr: getDomRange,\n        rtl: getDomRange\n      });\n    };\n    var readRange = function (selection) {\n      if (selection.rangeCount > 0) {\n        var firstRng = selection.getRangeAt(0);\n        var lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Optional.some(SimRange.create(SugarElement.fromDom(firstRng.startContainer), firstRng.startOffset, SugarElement.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Optional.none();\n      }\n    };\n    var doGetExact = function (selection) {\n      if (selection.anchorNode === null || selection.focusNode === null) {\n        return readRange(selection);\n      } else {\n        var anchor = SugarElement.fromDom(selection.anchorNode);\n        var focus_1 = SugarElement.fromDom(selection.focusNode);\n        return after$2(anchor, selection.anchorOffset, focus_1, selection.focusOffset) ? Optional.some(SimRange.create(anchor, selection.anchorOffset, focus_1, selection.focusOffset)) : readRange(selection);\n      }\n    };\n    var setToElement = function (win, element, selectNodeContents$1) {\n      if (selectNodeContents$1 === void 0) {\n        selectNodeContents$1 = true;\n      }\n      var rngGetter = selectNodeContents$1 ? selectNodeContents : selectNode;\n      var rng = rngGetter(win, element);\n      doSetNativeRange(win, rng);\n    };\n    var getExact = function (win) {\n      return getNativeSelection(win).filter(function (sel) {\n        return sel.rangeCount > 0;\n      }).bind(doGetExact);\n    };\n    var get$1 = function (win) {\n      return getExact(win).map(function (range) {\n        return SimSelection.exact(range.start, range.soffset, range.finish, range.foffset);\n      });\n    };\n    var getFirstRect = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return getFirstRect$1(rng);\n    };\n    var getAtPoint = function (win, x, y) {\n      return fromPoint(win, x, y);\n    };\n    var clear = function (win) {\n      getNativeSelection(win).each(function (selection) {\n        return selection.removeAllRanges();\n      });\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var forward = function (editor, isRoot, cell) {\n      return go$1(editor, isRoot, next(cell, isEditable$1));\n    };\n    var backward = function (editor, isRoot, cell) {\n      return go$1(editor, isRoot, prev(cell, isEditable$1));\n    };\n    var getCellFirstCursorPosition = function (editor, cell) {\n      var selection = SimSelection.exact(cell, 0, cell, 0);\n      return toNative(selection);\n    };\n    var go$1 = function (editor, isRoot, cell) {\n      return cell.fold(Optional.none, Optional.none, function (current, next) {\n        return first(next).map(function (cell) {\n          return getCellFirstCursorPosition(editor, cell);\n        });\n      }, function (current) {\n        editor.execCommand('mceTableInsertRowAfter');\n        return forward(editor, isRoot, current);\n      });\n    };\n    var rootElements = [\n      'table',\n      'li',\n      'dl'\n    ];\n    var handle$1 = function (event, editor, cellSelection) {\n      if (event.keyCode === global$1.TAB) {\n        var body_1 = getBody(editor);\n        var isRoot_1 = function (element) {\n          var name$1 = name(element);\n          return eq$1(element, body_1) || contains$2(rootElements, name$1);\n        };\n        var rng = editor.selection.getRng();\n        var container = SugarElement.fromDom(event.shiftKey ? rng.startContainer : rng.endContainer);\n        cell(container, isRoot_1).each(function (cell) {\n          event.preventDefault();\n          table(cell, isRoot_1).each(cellSelection.clear);\n          editor.selection.collapse(event.shiftKey);\n          var navigation = event.shiftKey ? backward : forward;\n          var rng = navigation(editor, isRoot_1, cell);\n          rng.each(function (range) {\n            editor.selection.setRng(range);\n          });\n        });\n      }\n    };\n\n    var create$1 = function (selection, kill) {\n      return {\n        selection: selection,\n        kill: kill\n      };\n    };\n    var Response = { create: create$1 };\n\n    var create = function (start, soffset, finish, foffset) {\n      return {\n        start: Situ.on(start, soffset),\n        finish: Situ.on(finish, foffset)\n      };\n    };\n    var Situs = { create: create };\n\n    var convertToRange = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return SimRange.create(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset);\n    };\n    var makeSitus = Situs.create;\n\n    var sync = function (container, isRoot, start, soffset, finish, foffset, selectRange) {\n      if (!(eq$1(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(function (s) {\n          return closest$1(finish, 'td,th', isRoot).bind(function (f) {\n            return detect(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    var detect = function (container, isRoot, start, finish, selectRange) {\n      if (!eq$1(start, finish)) {\n        return identify(start, finish, isRoot).bind(function (cellSel) {\n          var boxes = cellSel.boxes.getOr([]);\n          if (boxes.length > 1) {\n            selectRange(container, boxes, cellSel.start, cellSel.finish);\n            return Optional.some(Response.create(Optional.some(makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Optional.none();\n          }\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    var update = function (rows, columns, container, selected, annotations) {\n      var updateSelection = function (newSels) {\n        annotations.clearBeforeUpdate(container);\n        annotations.selectRange(container, newSels.boxes, newSels.start, newSels.finish);\n        return newSels.boxes;\n      };\n      return shiftSelection(selected, rows, columns, annotations.firstSelectedSelector, annotations.lastSelectedSelector).map(updateSelection);\n    };\n\n    var traverse = function (item, mode) {\n      return {\n        item: item,\n        mode: mode\n      };\n    };\n    var backtrack = function (universe, item, _direction, transition) {\n      if (transition === void 0) {\n        transition = sidestep;\n      }\n      return universe.property().parent(item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var sidestep = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      return direction.sibling(universe, item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var advance = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      var children = universe.property().children(item);\n      var result = direction.first(children);\n      return result.map(function (r) {\n        return traverse(r, transition);\n      });\n    };\n    var successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Optional.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Optional.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Optional.some(sidestep)\n      }\n    ];\n    var go = function (universe, item, mode, direction, rules) {\n      if (rules === void 0) {\n        rules = successors;\n      }\n      var ruleOpt = find$1(rules, function (succ) {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(function (rule) {\n        return rule.current(universe, item, direction, rule.next).orThunk(function () {\n          return rule.fallback.bind(function (fb) {\n            return go(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    var left$1 = function () {\n      var sibling = function (universe, item) {\n        return universe.query().prevSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Optional.some(children[children.length - 1]) : Optional.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var right$1 = function () {\n      var sibling = function (universe, item) {\n        return universe.query().nextSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Optional.some(children[0]) : Optional.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var Walkers = {\n      left: left$1,\n      right: right$1\n    };\n\n    var hone = function (universe, item, predicate, mode, direction, isRoot) {\n      var next = go(universe, item, mode, direction);\n      return next.bind(function (n) {\n        if (isRoot(n.item)) {\n          return Optional.none();\n        } else {\n          return predicate(n.item) ? Optional.some(n.item) : hone(universe, n.item, predicate, n.mode, direction, isRoot);\n        }\n      });\n    };\n    var left = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    var right = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    var isLeaf = function (universe) {\n      return function (element) {\n        return universe.property().children(element).length === 0;\n      };\n    };\n    var before$1 = function (universe, item, isRoot) {\n      return seekLeft$1(universe, item, isLeaf(universe), isRoot);\n    };\n    var after$1 = function (universe, item, isRoot) {\n      return seekRight$1(universe, item, isLeaf(universe), isRoot);\n    };\n    var seekLeft$1 = left;\n    var seekRight$1 = right;\n\n    var universe = DomUniverse();\n    var before = function (element, isRoot) {\n      return before$1(universe, element, isRoot);\n    };\n    var after = function (element, isRoot) {\n      return after$1(universe, element, isRoot);\n    };\n    var seekLeft = function (element, predicate, isRoot) {\n      return seekLeft$1(universe, element, predicate, isRoot);\n    };\n    var seekRight = function (element, predicate, isRoot) {\n      return seekRight$1(universe, element, predicate, isRoot);\n    };\n\n    var ancestor = function (scope, predicate, isRoot) {\n      return ancestor$2(scope, predicate, isRoot).isSome();\n    };\n\n    var adt$1 = Adt.generate([\n      { none: ['message'] },\n      { success: [] },\n      { failedUp: ['cell'] },\n      { failedDown: ['cell'] }\n    ]);\n    var isOverlapping = function (bridge, before, after) {\n      var beforeBounds = bridge.getRect(before);\n      var afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    var isRow = function (elem) {\n      return closest$1(elem, 'tr');\n    };\n    var verify = function (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) {\n      return closest$1(after, 'td,th', isRoot).bind(function (afterCell) {\n        return closest$1(before, 'td,th', isRoot).map(function (beforeCell) {\n          if (!eq$1(afterCell, beforeCell)) {\n            return sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(function () {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$1.success() : failure(beforeCell);\n            }, function (_sharedRow) {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq$1(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$1.none('in same cell');\n          }\n        });\n      }).getOr(adt$1.none('default'));\n    };\n    var cata = function (subject, onNone, onSuccess, onFailedUp, onFailedDown) {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    var BeforeAfter = __assign(__assign({}, adt$1), {\n      verify: verify,\n      cata: cata\n    });\n\n    var inParent = function (parent, children, element, index) {\n      return {\n        parent: parent,\n        children: children,\n        element: element,\n        index: index\n      };\n    };\n    var indexInParent = function (element) {\n      return parent(element).bind(function (parent) {\n        var children = children$3(parent);\n        return indexOf(children, element).map(function (index) {\n          return inParent(parent, children, element, index);\n        });\n      });\n    };\n    var indexOf = function (elements, element) {\n      return findIndex(elements, curry(eq$1, element));\n    };\n\n    var isBr = function (elem) {\n      return name(elem) === 'br';\n    };\n    var gatherer = function (cand, gather, isRoot) {\n      return gather(cand, isRoot).bind(function (target) {\n        return isText(target) && get$9(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Optional.some(target);\n      });\n    };\n    var handleBr = function (isRoot, element, direction) {\n      return direction.traverse(element).orThunk(function () {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    var findBr = function (element, offset) {\n      return child$3(element, offset).filter(isBr).orThunk(function () {\n        return child$3(element, offset - 1).filter(isBr);\n      });\n    };\n    var handleParent = function (isRoot, element, offset, direction) {\n      return findBr(element, offset).bind(function (br) {\n        return direction.traverse(br).fold(function () {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, function (adjacent) {\n          return indexInParent(adjacent).map(function (info) {\n            return Situ.on(info.parent, info.index);\n          });\n        });\n      });\n    };\n    var tryBr = function (isRoot, element, offset, direction) {\n      var target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(function (tgt) {\n        return {\n          start: tgt,\n          finish: tgt\n        };\n      });\n    };\n    var process = function (analysis) {\n      return BeforeAfter.cata(analysis, function (_message) {\n        return Optional.none();\n      }, function () {\n        return Optional.none();\n      }, function (cell) {\n        return Optional.some(point(cell, 0));\n      }, function (cell) {\n        return Optional.some(point(cell, getEnd(cell)));\n      });\n    };\n\n    var moveDown = function (caret, amount) {\n      return {\n        left: caret.left,\n        top: caret.top + amount,\n        right: caret.right,\n        bottom: caret.bottom + amount\n      };\n    };\n    var moveUp = function (caret, amount) {\n      return {\n        left: caret.left,\n        top: caret.top - amount,\n        right: caret.right,\n        bottom: caret.bottom - amount\n      };\n    };\n    var translate = function (caret, xDelta, yDelta) {\n      return {\n        left: caret.left + xDelta,\n        top: caret.top + yDelta,\n        right: caret.right + xDelta,\n        bottom: caret.bottom + yDelta\n      };\n    };\n    var getTop = function (caret) {\n      return caret.top;\n    };\n    var getBottom = function (caret) {\n      return caret.bottom;\n    };\n\n    var getPartialBox = function (bridge, element, offset) {\n      if (offset >= 0 && offset < getEnd(element)) {\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      } else if (offset > 0) {\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      }\n      return Optional.none();\n    };\n    var toCaret = function (rect) {\n      return {\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom\n      };\n    };\n    var getElemBox = function (bridge, element) {\n      return Optional.some(bridge.getRect(element));\n    };\n    var getBoxAt = function (bridge, element, offset) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      } else {\n        return Optional.none();\n      }\n    };\n    var getEntireBox = function (bridge, element) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      } else {\n        return Optional.none();\n      }\n    };\n\n    var JUMP_SIZE = 5;\n    var NUM_RETRIES = 100;\n    var adt = Adt.generate([\n      { none: [] },\n      { retry: ['caret'] }\n    ]);\n    var isOutside = function (caret, box) {\n      return caret.left < box.left || Math.abs(box.right - caret.left) < 1 || caret.left > box.right;\n    };\n    var inOutsideBlock = function (bridge, element, caret) {\n      return closest$2(element, isBlock).fold(never, function (cell) {\n        return getEntireBox(bridge, cell).exists(function (box) {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    var adjustDown = function (bridge, element, guessBox, original, caret) {\n      var lowerCaret = moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom - original.bottom) < 1) {\n        return adt.retry(lowerCaret);\n      } else if (guessBox.top > caret.bottom) {\n        return adt.retry(lowerCaret);\n      } else if (guessBox.top === caret.bottom) {\n        return adt.retry(moveDown(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt.retry(translate(lowerCaret, JUMP_SIZE, 0)) : adt.none();\n      }\n    };\n    var adjustUp = function (bridge, element, guessBox, original, caret) {\n      var higherCaret = moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top - original.top) < 1) {\n        return adt.retry(higherCaret);\n      } else if (guessBox.bottom < caret.top) {\n        return adt.retry(higherCaret);\n      } else if (guessBox.bottom === caret.top) {\n        return adt.retry(moveUp(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt.retry(translate(higherCaret, JUMP_SIZE, 0)) : adt.none();\n      }\n    };\n    var upMovement = {\n      point: getTop,\n      adjuster: adjustUp,\n      move: moveUp,\n      gather: before\n    };\n    var downMovement = {\n      point: getBottom,\n      adjuster: adjustDown,\n      move: moveDown,\n      gather: after\n    };\n    var isAtTable = function (bridge, x, y) {\n      return bridge.elementFromPoint(x, y).filter(function (elm) {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    var adjustForTable = function (bridge, movement, original, caret, numRetries) {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    var adjustTil = function (bridge, movement, original, caret, numRetries) {\n      if (numRetries === 0) {\n        return Optional.some(caret);\n      }\n      if (isAtTable(bridge, caret.left, movement.point(caret))) {\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      }\n      return bridge.situsFromPoint(caret.left, movement.point(caret)).bind(function (guess) {\n        return guess.start.fold(Optional.none, function (element) {\n          return getEntireBox(bridge, element).bind(function (guessBox) {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Optional.none, function (newCaret) {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(function () {\n            return Optional.some(caret);\n          });\n        }, Optional.none);\n      });\n    };\n    var ieTryDown = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left, caret.bottom + JUMP_SIZE);\n    };\n    var ieTryUp = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left, caret.top - JUMP_SIZE);\n    };\n    var checkScroll = function (movement, adjusted, bridge) {\n      if (movement.point(adjusted) > bridge.getInnerHeight()) {\n        return Optional.some(movement.point(adjusted) - bridge.getInnerHeight());\n      } else if (movement.point(adjusted) < 0) {\n        return Optional.some(-movement.point(adjusted));\n      } else {\n        return Optional.none();\n      }\n    };\n    var retry = function (movement, bridge, caret) {\n      var moved = movement.move(caret, JUMP_SIZE);\n      var adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(function () {\n        return bridge.situsFromPoint(adjusted.left, movement.point(adjusted));\n      }, function (delta) {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left, movement.point(adjusted) - delta);\n      });\n    };\n    var Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      ieTryUp: ieTryUp,\n      ieTryDown: ieTryDown,\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    var MAX_RETRIES = 20;\n    var findSpot = function (bridge, isRoot, direction) {\n      return bridge.getSelection().bind(function (sel) {\n        return tryBr(isRoot, sel.finish, sel.foffset, direction).fold(function () {\n          return Optional.some(point(sel.finish, sel.foffset));\n        }, function (brNeighbour) {\n          var range = bridge.fromSitus(brNeighbour);\n          var analysis = BeforeAfter.verify(bridge, sel.finish, sel.foffset, range.finish, range.foffset, direction.failure, isRoot);\n          return process(analysis);\n        });\n      });\n    };\n    var scan = function (bridge, isRoot, element, offset, direction, numRetries) {\n      if (numRetries === 0) {\n        return Optional.none();\n      }\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(function (situs) {\n        var range = bridge.fromSitus(situs);\n        var analysis = BeforeAfter.verify(bridge, element, offset, range.finish, range.foffset, direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, function () {\n          return Optional.none();\n        }, function () {\n          return Optional.some(situs);\n        }, function (cell) {\n          if (eq$1(element, cell) && offset === 0) {\n            return tryAgain(bridge, element, offset, moveUp, direction);\n          } else {\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n          }\n        }, function (cell) {\n          if (eq$1(element, cell) && offset === getEnd(cell)) {\n            return tryAgain(bridge, element, offset, moveDown, direction);\n          } else {\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n          }\n        });\n      });\n    };\n    var tryAgain = function (bridge, element, offset, move, direction) {\n      return getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    var tryAt = function (bridge, direction, box) {\n      var browser = detect$3().browser;\n      if (browser.isChrome() || browser.isSafari() || browser.isFirefox() || browser.isEdge()) {\n        return direction.otherRetry(bridge, box);\n      } else if (browser.isIE()) {\n        return direction.ieRetry(bridge, box);\n      } else {\n        return Optional.none();\n      }\n    };\n    var tryCursor = function (bridge, isRoot, element, offset, direction) {\n      return getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    var handle = function (bridge, isRoot, direction) {\n      return findSpot(bridge, isRoot, direction).bind(function (spot) {\n        return scan(bridge, isRoot, spot.element, spot.offset, direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n\n    var inSameTable = function (elem, table) {\n      return ancestor(elem, function (e) {\n        return parent(e).exists(function (p) {\n          return eq$1(p, table);\n        });\n      });\n    };\n    var simulate = function (bridge, isRoot, direction, initial, anchor) {\n      return closest$1(initial, 'td,th', isRoot).bind(function (start) {\n        return closest$1(start, 'table', isRoot).bind(function (table) {\n          if (!inSameTable(anchor, table)) {\n            return Optional.none();\n          }\n          return handle(bridge, isRoot, direction).bind(function (range) {\n            return closest$1(range.finish, 'td,th', isRoot).map(function (finish) {\n              return {\n                start: start,\n                finish: finish,\n                range: range\n              };\n            });\n          });\n        });\n      });\n    };\n    var navigate = function (bridge, isRoot, direction, initial, anchor, precheck) {\n      if (detect$3().browser.isIE()) {\n        return Optional.none();\n      } else {\n        return precheck(initial, isRoot).orThunk(function () {\n          return simulate(bridge, isRoot, direction, initial, anchor).map(function (info) {\n            var range = info.range;\n            return Response.create(Optional.some(makeSitus(range.start, range.soffset, range.finish, range.foffset)), true);\n          });\n        });\n      }\n    };\n    var firstUpCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants(table, 'tr');\n          if (eq$1(startRow, rows[0])) {\n            return seekLeft(table, function (element) {\n              return last$1(element).isSome();\n            }, isRoot).map(function (last) {\n              var lastOffset = getEnd(last);\n              return Response.create(Optional.some(makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Optional.none();\n          }\n        });\n      });\n    };\n    var lastDownCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants(table, 'tr');\n          if (eq$1(startRow, rows[rows.length - 1])) {\n            return seekRight(table, function (element) {\n              return first(element).isSome();\n            }, isRoot).map(function (first) {\n              return Response.create(Optional.some(makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Optional.none();\n          }\n        });\n      });\n    };\n    var select = function (bridge, container, isRoot, direction, initial, anchor, selectRange) {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(function (info) {\n        return detect(container, isRoot, info.start, info.finish, selectRange);\n      });\n    };\n\n    var findCell = function (target, isRoot) {\n      return closest$1(target, 'td,th', isRoot);\n    };\n    var MouseSelection = function (bridge, container, isRoot, annotations) {\n      var cursor = value();\n      var clearstate = cursor.clear;\n      var applySelection = function (event) {\n        cursor.on(function (start) {\n          annotations.clearBeforeUpdate(container);\n          findCell(event.target, isRoot).each(function (finish) {\n            identify(start, finish, isRoot).each(function (cellSel) {\n              var boxes = cellSel.boxes.getOr([]);\n              if (boxes.length === 1) {\n                var singleCell = boxes[0];\n                var isNonEditableCell = getRaw(singleCell) === 'false';\n                var isCellClosestContentEditable = is(closest(event.target), singleCell, eq$1);\n                if (isNonEditableCell && isCellClosestContentEditable) {\n                  annotations.selectRange(container, boxes, singleCell, singleCell);\n                  bridge.selectContents(singleCell);\n                }\n              } else if (boxes.length > 1) {\n                annotations.selectRange(container, boxes, cellSel.start, cellSel.finish);\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      var mousedown = function (event) {\n        annotations.clear(container);\n        findCell(event.target, isRoot).each(cursor.set);\n      };\n      var mouseover = function (event) {\n        applySelection(event);\n      };\n      var mouseup = function (event) {\n        applySelection(event);\n        clearstate();\n      };\n      return {\n        clearstate: clearstate,\n        mousedown: mousedown,\n        mouseover: mouseover,\n        mouseup: mouseup\n      };\n    };\n\n    var down = {\n      traverse: nextSibling,\n      gather: after,\n      relative: Situ.before,\n      otherRetry: Retries.tryDown,\n      ieRetry: Retries.ieTryDown,\n      failure: BeforeAfter.failedDown\n    };\n    var up = {\n      traverse: prevSibling,\n      gather: before,\n      relative: Situ.before,\n      otherRetry: Retries.tryUp,\n      ieRetry: Retries.ieTryUp,\n      failure: BeforeAfter.failedUp\n    };\n\n    var isKey = function (key) {\n      return function (keycode) {\n        return keycode === key;\n      };\n    };\n    var isUp = isKey(38);\n    var isDown = isKey(40);\n    var isNavigation = function (keycode) {\n      return keycode >= 37 && keycode <= 40;\n    };\n    var ltr = {\n      isBackward: isKey(37),\n      isForward: isKey(39)\n    };\n    var rtl = {\n      isBackward: isKey(39),\n      isForward: isKey(37)\n    };\n\n    var get = function (_DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom : document;\n      var x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      var y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return SugarPosition(x, y);\n    };\n    var by = function (x, y, _DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom : document;\n      var win = doc.defaultView;\n      if (win) {\n        win.scrollBy(x, y);\n      }\n    };\n\n    var WindowBridge = function (win) {\n      var elementFromPoint = function (x, y) {\n        return SugarElement.fromPoint(SugarElement.fromDom(win.document), x, y);\n      };\n      var getRect = function (element) {\n        return element.dom.getBoundingClientRect();\n      };\n      var getRangedRect = function (start, soffset, finish, foffset) {\n        var sel = SimSelection.exact(start, soffset, finish, foffset);\n        return getFirstRect(win, sel);\n      };\n      var getSelection = function () {\n        return get$1(win).map(function (exactAdt) {\n          return convertToRange(win, exactAdt);\n        });\n      };\n      var fromSitus = function (situs) {\n        var relative = SimSelection.relative(situs.start, situs.finish);\n        return convertToRange(win, relative);\n      };\n      var situsFromPoint = function (x, y) {\n        return getAtPoint(win, x, y).map(function (exact) {\n          return Situs.create(exact.start, exact.soffset, exact.finish, exact.foffset);\n        });\n      };\n      var clearSelection = function () {\n        clear(win);\n      };\n      var collapseSelection = function (toStart) {\n        if (toStart === void 0) {\n          toStart = false;\n        }\n        get$1(win).each(function (sel) {\n          return sel.fold(function (rng) {\n            return rng.collapse(toStart);\n          }, function (startSitu, finishSitu) {\n            var situ = toStart ? startSitu : finishSitu;\n            setRelative(win, situ, situ);\n          }, function (start, soffset, finish, foffset) {\n            var node = toStart ? start : finish;\n            var offset = toStart ? soffset : foffset;\n            setExact(win, node, offset, node, offset);\n          });\n        });\n      };\n      var selectNode = function (element) {\n        setToElement(win, element, false);\n      };\n      var selectContents = function (element) {\n        setToElement(win, element);\n      };\n      var setSelection = function (sel) {\n        setExact(win, sel.start, sel.soffset, sel.finish, sel.foffset);\n      };\n      var setRelativeSelection = function (start, finish) {\n        setRelative(win, start, finish);\n      };\n      var getInnerHeight = function () {\n        return win.innerHeight;\n      };\n      var getScrollY = function () {\n        var pos = get(SugarElement.fromDom(win.document));\n        return pos.top;\n      };\n      var scrollBy = function (x, y) {\n        by(x, y, SugarElement.fromDom(win.document));\n      };\n      return {\n        elementFromPoint: elementFromPoint,\n        getRect: getRect,\n        getRangedRect: getRangedRect,\n        getSelection: getSelection,\n        fromSitus: fromSitus,\n        situsFromPoint: situsFromPoint,\n        clearSelection: clearSelection,\n        collapseSelection: collapseSelection,\n        setSelection: setSelection,\n        setRelativeSelection: setRelativeSelection,\n        selectNode: selectNode,\n        selectContents: selectContents,\n        getInnerHeight: getInnerHeight,\n        getScrollY: getScrollY,\n        scrollBy: scrollBy\n      };\n    };\n\n    var rc = function (rows, cols) {\n      return {\n        rows: rows,\n        cols: cols\n      };\n    };\n    var mouse = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        clearstate: handlers.clearstate,\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    var keyboard = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var clearToNavigate = function () {\n        annotations.clear(container);\n        return Optional.none();\n      };\n      var keydown = function (event, start, soffset, finish, foffset, direction) {\n        var realEvent = event.raw;\n        var keycode = realEvent.which;\n        var shiftKey = realEvent.shiftKey === true;\n        var handler = retrieve$1(container, annotations.selectedSelector).fold(function () {\n          if (isNavigation(keycode) && !shiftKey) {\n            annotations.clearBeforeUpdate(container);\n          }\n          if (isDown(keycode) && shiftKey) {\n            return curry(select, bridge, container, isRoot, down, finish, start, annotations.selectRange);\n          } else if (isUp(keycode) && shiftKey) {\n            return curry(select, bridge, container, isRoot, up, finish, start, annotations.selectRange);\n          } else if (isDown(keycode)) {\n            return curry(navigate, bridge, isRoot, down, finish, start, lastDownCheck);\n          } else if (isUp(keycode)) {\n            return curry(navigate, bridge, isRoot, up, finish, start, firstUpCheck);\n          } else {\n            return Optional.none;\n          }\n        }, function (selected) {\n          var update$1 = function (attempts) {\n            return function () {\n              var navigation = findMap(attempts, function (delta) {\n                return update(delta.rows, delta.cols, container, selected, annotations);\n              });\n              return navigation.fold(function () {\n                return getEdges(container, annotations.firstSelectedSelector, annotations.lastSelectedSelector).map(function (edges) {\n                  var relative = isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first, 0), relative(edges.table));\n                  annotations.clear(container);\n                  return Response.create(Optional.none(), true);\n                });\n              }, function (_) {\n                return Optional.some(Response.create(Optional.none(), true));\n              });\n            };\n          };\n          if (isDown(keycode) && shiftKey) {\n            return update$1([rc(+1, 0)]);\n          } else if (isUp(keycode) && shiftKey) {\n            return update$1([rc(-1, 0)]);\n          } else if (direction.isBackward(keycode) && shiftKey) {\n            return update$1([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          } else if (direction.isForward(keycode) && shiftKey) {\n            return update$1([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          } else if (isNavigation(keycode) && !shiftKey) {\n            return clearToNavigate;\n          } else {\n            return Optional.none;\n          }\n        });\n        return handler();\n      };\n      var keyup = function (event, start, soffset, finish, foffset) {\n        return retrieve$1(container, annotations.selectedSelector).fold(function () {\n          var realEvent = event.raw;\n          var keycode = realEvent.which;\n          var shiftKey = realEvent.shiftKey === true;\n          if (!shiftKey) {\n            return Optional.none();\n          }\n          if (isNavigation(keycode)) {\n            return sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          } else {\n            return Optional.none();\n          }\n        }, Optional.none);\n      };\n      return {\n        keydown: keydown,\n        keyup: keyup\n      };\n    };\n    var external = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      return function (start, finish) {\n        annotations.clearBeforeUpdate(container);\n        identify(start, finish, isRoot).each(function (cellSel) {\n          var boxes = cellSel.boxes.getOr([]);\n          annotations.selectRange(container, boxes, cellSel.start, cellSel.finish);\n          bridge.selectContents(finish);\n          bridge.collapseSelection();\n        });\n      };\n    };\n\n    var remove = function (element, classes) {\n      each$2(classes, function (x) {\n        remove$2(element, x);\n      });\n    };\n\n    var addClass = function (clazz) {\n      return function (element) {\n        add(element, clazz);\n      };\n    };\n    var removeClasses = function (classes) {\n      return function (element) {\n        remove(element, classes);\n      };\n    };\n\n    var byClass = function (ephemera) {\n      var addSelectionClass = addClass(ephemera.selected);\n      var removeSelectionClasses = removeClasses([\n        ephemera.selected,\n        ephemera.lastSelected,\n        ephemera.firstSelected\n      ]);\n      var clear = function (container) {\n        var sels = descendants(container, ephemera.selectedSelector);\n        each$2(sels, removeSelectionClasses);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each$2(cells, addSelectionClass);\n        add(start, ephemera.firstSelected);\n        add(finish, ephemera.lastSelected);\n      };\n      return {\n        clearBeforeUpdate: clear,\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var byAttr = function (ephemera, onSelection, onClear) {\n      var removeSelectionAttributes = function (element) {\n        remove$7(element, ephemera.selected);\n        remove$7(element, ephemera.firstSelected);\n        remove$7(element, ephemera.lastSelected);\n      };\n      var addSelectionAttribute = function (element) {\n        set$2(element, ephemera.selected, '1');\n      };\n      var clear = function (container) {\n        clearBeforeUpdate(container);\n        onClear();\n      };\n      var clearBeforeUpdate = function (container) {\n        var sels = descendants(container, ephemera.selectedSelector + ',' + ephemera.firstSelectedSelector + ',' + ephemera.lastSelectedSelector);\n        each$2(sels, removeSelectionAttributes);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each$2(cells, addSelectionAttribute);\n        set$2(start, ephemera.firstSelected, '1');\n        set$2(finish, ephemera.lastSelected, '1');\n        onSelection(cells, start, finish);\n      };\n      return {\n        clearBeforeUpdate: clearBeforeUpdate,\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var SelectionAnnotation = {\n      byClass: byClass,\n      byAttr: byAttr\n    };\n\n    var getUpOrLeftCells = function (grid, selectedCells) {\n      var upGrid = grid.slice(0, selectedCells[selectedCells.length - 1].row + 1);\n      var upDetails = toDetailList(upGrid);\n      return bind$2(upDetails, function (detail) {\n        var slicedCells = detail.cells.slice(0, selectedCells[selectedCells.length - 1].column + 1);\n        return map$1(slicedCells, function (cell) {\n          return cell.element;\n        });\n      });\n    };\n    var getDownOrRightCells = function (grid, selectedCells) {\n      var downGrid = grid.slice(selectedCells[0].row + selectedCells[0].rowspan - 1, grid.length);\n      var downDetails = toDetailList(downGrid);\n      return bind$2(downDetails, function (detail) {\n        var slicedCells = detail.cells.slice(selectedCells[0].column + selectedCells[0].colspan - 1, detail.cells.length);\n        return map$1(slicedCells, function (cell) {\n          return cell.element;\n        });\n      });\n    };\n    var getOtherCells = function (table, target, generators) {\n      var warehouse = Warehouse.fromTable(table);\n      var details = onCells(warehouse, target);\n      return details.map(function (selectedCells) {\n        var grid = toGrid(warehouse, generators, false);\n        var upOrLeftCells = getUpOrLeftCells(grid, selectedCells);\n        var downOrRightCells = getDownOrRightCells(grid, selectedCells);\n        return {\n          upOrLeftCells: upOrLeftCells,\n          downOrRightCells: downOrRightCells\n        };\n      });\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var hasInternalTarget = function (e) {\n      return has(SugarElement.fromDom(e.target), 'ephox-snooker-resizer-bar') === false;\n    };\n    function CellSelection (editor, lazyResize, selectionTargets) {\n      var onSelection = function (cells, start, finish) {\n        selectionTargets.targets().each(function (targets) {\n          var tableOpt = table(start);\n          tableOpt.each(function (table) {\n            var cloneFormats = getCloneElements(editor);\n            var generators = cellOperations(noop, SugarElement.fromDom(editor.getDoc()), cloneFormats);\n            var otherCells = getOtherCells(table, targets, generators);\n            fireTableSelectionChange(editor, cells, start, finish, otherCells);\n          });\n        });\n      };\n      var onClear = function () {\n        return fireTableSelectionClear(editor);\n      };\n      var annotations = SelectionAnnotation.byAttr(ephemera, onSelection, onClear);\n      editor.on('init', function (_e) {\n        var win = editor.getWin();\n        var body = getBody(editor);\n        var isRoot = getIsRoot(editor);\n        var syncSelection = function () {\n          var sel = editor.selection;\n          var start = SugarElement.fromDom(sel.getStart());\n          var end = SugarElement.fromDom(sel.getEnd());\n          var shared = sharedOne(table, [\n            start,\n            end\n          ]);\n          shared.fold(function () {\n            return annotations.clear(body);\n          }, noop);\n        };\n        var mouseHandlers = mouse(win, body, isRoot, annotations);\n        var keyHandlers = keyboard(win, body, isRoot, annotations);\n        var external$1 = external(win, body, isRoot, annotations);\n        var hasShiftKey = function (event) {\n          return event.raw.shiftKey === true;\n        };\n        editor.on('TableSelectorChange', function (e) {\n          return external$1(e.start, e.finish);\n        });\n        var handleResponse = function (event, response) {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill) {\n            event.kill();\n          }\n          response.selection.each(function (ns) {\n            var relative = SimSelection.relative(ns.start, ns.finish);\n            var rng = asLtrRange(win, relative);\n            editor.selection.setRng(rng);\n          });\n        };\n        var keyup = function (event) {\n          var wrappedEvent = fromRawEvent(event);\n          if (wrappedEvent.raw.shiftKey && isNavigation(wrappedEvent.raw.which)) {\n            var rng = editor.selection.getRng();\n            var start = SugarElement.fromDom(rng.startContainer);\n            var end = SugarElement.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(function (response) {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        var keydown = function (event) {\n          var wrappedEvent = fromRawEvent(event);\n          lazyResize().each(function (resize) {\n            return resize.hideBars();\n          });\n          var rng = editor.selection.getRng();\n          var start = SugarElement.fromDom(rng.startContainer);\n          var end = SugarElement.fromDom(rng.endContainer);\n          var direction = onDirection(ltr, rtl)(SugarElement.fromDom(editor.selection.getStart()));\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(function (response) {\n            handleResponse(wrappedEvent, response);\n          });\n          lazyResize().each(function (resize) {\n            return resize.showBars();\n          });\n        };\n        var isLeftMouse = function (raw) {\n          return raw.button === 0;\n        };\n        var isLeftButtonPressed = function (raw) {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          if (global.browser.isEdge() && raw.buttons === 0) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        var dragStart = function (_e) {\n          mouseHandlers.clearstate();\n        };\n        var mouseDown = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(fromRawEvent(e));\n          }\n        };\n        var mouseOver = function (e) {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(fromRawEvent(e));\n          }\n        };\n        var mouseUp = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(fromRawEvent(e));\n          }\n        };\n        var getDoubleTap = function () {\n          var lastTarget = Cell(SugarElement.fromDom(body));\n          var lastTimeStamp = Cell(0);\n          var touchEnd = function (t) {\n            var target = SugarElement.fromDom(t.target);\n            if (name(target) === 'td' || name(target) === 'th') {\n              var lT = lastTarget.get();\n              var lTS = lastTimeStamp.get();\n              if (eq$1(lT, target) && t.timeStamp - lTS < 300) {\n                t.preventDefault();\n                external$1(target, target);\n              }\n            }\n            lastTarget.set(target);\n            lastTimeStamp.set(t.timeStamp);\n          };\n          return { touchEnd: touchEnd };\n        };\n        var doubleTap = getDoubleTap();\n        editor.on('dragstart', dragStart);\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('touchend', doubleTap.touchEnd);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('NodeChange', syncSelection);\n      });\n      return { clear: annotations.clear };\n    }\n\n    var child = function (scope, selector) {\n      return child$1(scope, selector).isSome();\n    };\n\n    var getSelectionTargets = function (editor, selections) {\n      var targets = Cell(Optional.none());\n      var changeHandlers = Cell([]);\n      var selectionDetails = Optional.none();\n      var isCaption = isTag('caption');\n      var isDisabledForSelection = function (key) {\n        return selectionDetails.forall(function (details) {\n          return !details[key];\n        });\n      };\n      var getStart = function () {\n        return getSelectionCellOrCaption(getSelectionStart(editor), getIsRoot(editor));\n      };\n      var getEnd = function () {\n        return getSelectionCellOrCaption(getSelectionEnd(editor), getIsRoot(editor));\n      };\n      var findTargets = function () {\n        return getStart().bind(function (startCellOrCaption) {\n          return flatten(lift2(table(startCellOrCaption), getEnd().bind(table), function (startTable, endTable) {\n            if (eq$1(startTable, endTable)) {\n              if (isCaption(startCellOrCaption)) {\n                return Optional.some(noMenu(startCellOrCaption));\n              } else {\n                return Optional.some(forMenu(selections, startTable, startCellOrCaption));\n              }\n            }\n            return Optional.none();\n          }));\n        });\n      };\n      var getExtractedDetails = function (targets) {\n        var tableOpt = table(targets.element);\n        return tableOpt.map(function (table) {\n          var warehouse = Warehouse.fromTable(table);\n          var selectedCells = onCells(warehouse, targets).getOr([]);\n          var locked = foldl(selectedCells, function (acc, cell) {\n            if (cell.isLocked) {\n              acc.onAny = true;\n              if (cell.column === 0) {\n                acc.onFirst = true;\n              } else if (cell.column + cell.colspan >= warehouse.grid.columns) {\n                acc.onLast = true;\n              }\n            }\n            return acc;\n          }, {\n            onAny: false,\n            onFirst: false,\n            onLast: false\n          });\n          return {\n            mergeable: onUnlockedMergable(warehouse, targets).isSome(),\n            unmergeable: onUnlockedUnmergable(warehouse, targets).isSome(),\n            locked: locked\n          };\n        });\n      };\n      var resetTargets = function () {\n        targets.set(cached(findTargets)());\n        selectionDetails = targets.get().bind(getExtractedDetails);\n        each$2(changeHandlers.get(), function (handler) {\n          return handler();\n        });\n      };\n      var setupHandler = function (handler) {\n        handler();\n        changeHandlers.set(changeHandlers.get().concat([handler]));\n        return function () {\n          changeHandlers.set(filter$2(changeHandlers.get(), function (h) {\n            return h !== handler;\n          }));\n        };\n      };\n      var onSetup = function (api, isDisabled) {\n        return setupHandler(function () {\n          return targets.get().fold(function () {\n            api.setDisabled(true);\n          }, function (targets) {\n            api.setDisabled(isDisabled(targets));\n          });\n        });\n      };\n      var onSetupWithToggle = function (api, isDisabled, isActive) {\n        return setupHandler(function () {\n          return targets.get().fold(function () {\n            api.setDisabled(true);\n            api.setActive(false);\n          }, function (targets) {\n            api.setDisabled(isDisabled(targets));\n            api.setActive(isActive(targets));\n          });\n        });\n      };\n      var isDisabledFromLocked = function (lockedDisable) {\n        return selectionDetails.exists(function (details) {\n          return details.locked[lockedDisable];\n        });\n      };\n      var onSetupTable = function (api) {\n        return onSetup(api, function (_) {\n          return false;\n        });\n      };\n      var onSetupCellOrRow = function (api) {\n        return onSetup(api, function (targets) {\n          return isCaption(targets.element);\n        });\n      };\n      var onSetupColumn = function (lockedDisable) {\n        return function (api) {\n          return onSetup(api, function (targets) {\n            return isCaption(targets.element) || isDisabledFromLocked(lockedDisable);\n          });\n        };\n      };\n      var onSetupPasteable = function (getClipboardData) {\n        return function (api) {\n          return onSetup(api, function (targets) {\n            return isCaption(targets.element) || getClipboardData().isNone();\n          });\n        };\n      };\n      var onSetupPasteableColumn = function (getClipboardData, lockedDisable) {\n        return function (api) {\n          return onSetup(api, function (targets) {\n            return isCaption(targets.element) || getClipboardData().isNone() || isDisabledFromLocked(lockedDisable);\n          });\n        };\n      };\n      var onSetupMergeable = function (api) {\n        return onSetup(api, function (_targets) {\n          return isDisabledForSelection('mergeable');\n        });\n      };\n      var onSetupUnmergeable = function (api) {\n        return onSetup(api, function (_targets) {\n          return isDisabledForSelection('unmergeable');\n        });\n      };\n      var onSetupTableWithCaption = function (api) {\n        return onSetupWithToggle(api, never, function (targets) {\n          var tableOpt = table(targets.element, getIsRoot(editor));\n          return tableOpt.exists(function (table) {\n            return child(table, 'caption');\n          });\n        });\n      };\n      var onSetupTableHeaders = function (command, headerType) {\n        return function (api) {\n          return onSetupWithToggle(api, function (targets) {\n            return isCaption(targets.element);\n          }, function () {\n            return editor.queryCommandValue(command) === headerType;\n          });\n        };\n      };\n      var onSetupTableRowHeaders = onSetupTableHeaders('mceTableRowType', 'header');\n      var onSetupTableColumnHeaders = onSetupTableHeaders('mceTableColType', 'th');\n      editor.on('NodeChange ExecCommand TableSelectorChange', resetTargets);\n      return {\n        onSetupTable: onSetupTable,\n        onSetupCellOrRow: onSetupCellOrRow,\n        onSetupColumn: onSetupColumn,\n        onSetupPasteable: onSetupPasteable,\n        onSetupPasteableColumn: onSetupPasteableColumn,\n        onSetupMergeable: onSetupMergeable,\n        onSetupUnmergeable: onSetupUnmergeable,\n        resetTargets: resetTargets,\n        onSetupTableWithCaption: onSetupTableWithCaption,\n        onSetupTableRowHeaders: onSetupTableRowHeaders,\n        onSetupTableColumnHeaders: onSetupTableColumnHeaders,\n        targets: targets.get\n      };\n    };\n\n    var addButtons = function (editor, selections, selectionTargets, clipboard) {\n      editor.ui.registry.addMenuButton('table', {\n        tooltip: 'Table',\n        icon: 'table',\n        fetch: function (callback) {\n          return callback('inserttable | cell row column | advtablesort | tableprops deletetable');\n        }\n      });\n      var cmd = function (command) {\n        return function () {\n          return editor.execCommand(command);\n        };\n      };\n      editor.ui.registry.addButton('tableprops', {\n        tooltip: 'Table properties',\n        onAction: cmd('mceTableProps'),\n        icon: 'table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      editor.ui.registry.addButton('tabledelete', {\n        tooltip: 'Delete table',\n        onAction: cmd('mceTableDelete'),\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      editor.ui.registry.addButton('tablecellprops', {\n        tooltip: 'Cell properties',\n        onAction: cmd('mceTableCellProps'),\n        icon: 'table-cell-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablemergecells', {\n        tooltip: 'Merge cells',\n        onAction: cmd('mceTableMergeCells'),\n        icon: 'table-merge-cells',\n        onSetup: selectionTargets.onSetupMergeable\n      });\n      editor.ui.registry.addButton('tablesplitcells', {\n        tooltip: 'Split cell',\n        onAction: cmd('mceTableSplitCells'),\n        icon: 'table-split-cells',\n        onSetup: selectionTargets.onSetupUnmergeable\n      });\n      editor.ui.registry.addButton('tableinsertrowbefore', {\n        tooltip: 'Insert row before',\n        onAction: cmd('mceTableInsertRowBefore'),\n        icon: 'table-insert-row-above',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertrowafter', {\n        tooltip: 'Insert row after',\n        onAction: cmd('mceTableInsertRowAfter'),\n        icon: 'table-insert-row-after',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tabledeleterow', {\n        tooltip: 'Delete row',\n        onAction: cmd('mceTableDeleteRow'),\n        icon: 'table-delete-row',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablerowprops', {\n        tooltip: 'Row properties',\n        onAction: cmd('mceTableRowProps'),\n        icon: 'table-row-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertcolbefore', {\n        tooltip: 'Insert column before',\n        onAction: cmd('mceTableInsertColBefore'),\n        icon: 'table-insert-column-before',\n        onSetup: selectionTargets.onSetupColumn('onFirst')\n      });\n      editor.ui.registry.addButton('tableinsertcolafter', {\n        tooltip: 'Insert column after',\n        onAction: cmd('mceTableInsertColAfter'),\n        icon: 'table-insert-column-after',\n        onSetup: selectionTargets.onSetupColumn('onLast')\n      });\n      editor.ui.registry.addButton('tabledeletecol', {\n        tooltip: 'Delete column',\n        onAction: cmd('mceTableDeleteCol'),\n        icon: 'table-delete-column',\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      editor.ui.registry.addButton('tablecutrow', {\n        tooltip: 'Cut row',\n        icon: 'cut-row',\n        onAction: cmd('mceTableCutRow'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablecopyrow', {\n        tooltip: 'Copy row',\n        icon: 'duplicate-row',\n        onAction: cmd('mceTableCopyRow'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablepasterowbefore', {\n        tooltip: 'Paste row before',\n        icon: 'paste-row-before',\n        onAction: cmd('mceTablePasteRowBefore'),\n        onSetup: selectionTargets.onSetupPasteable(clipboard.getRows)\n      });\n      editor.ui.registry.addButton('tablepasterowafter', {\n        tooltip: 'Paste row after',\n        icon: 'paste-row-after',\n        onAction: cmd('mceTablePasteRowAfter'),\n        onSetup: selectionTargets.onSetupPasteable(clipboard.getRows)\n      });\n      editor.ui.registry.addButton('tablecutcol', {\n        tooltip: 'Cut column',\n        icon: 'cut-column',\n        onAction: cmd('mceTableCutCol'),\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      editor.ui.registry.addButton('tablecopycol', {\n        tooltip: 'Copy column',\n        icon: 'duplicate-column',\n        onAction: cmd('mceTableCopyCol'),\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      editor.ui.registry.addButton('tablepastecolbefore', {\n        tooltip: 'Paste column before',\n        icon: 'paste-column-before',\n        onAction: cmd('mceTablePasteColBefore'),\n        onSetup: selectionTargets.onSetupPasteableColumn(clipboard.getColumns, 'onFirst')\n      });\n      editor.ui.registry.addButton('tablepastecolafter', {\n        tooltip: 'Paste column after',\n        icon: 'paste-column-after',\n        onAction: cmd('mceTablePasteColAfter'),\n        onSetup: selectionTargets.onSetupPasteableColumn(clipboard.getColumns, 'onLast')\n      });\n      editor.ui.registry.addButton('tableinsertdialog', {\n        tooltip: 'Insert table',\n        onAction: cmd('mceInsertTable'),\n        icon: 'table'\n      });\n      var tableClassList = filterNoneItem(getTableClassList(editor));\n      if (tableClassList.length !== 0) {\n        editor.ui.registry.addMenuButton('tableclass', {\n          icon: 'table-classes',\n          tooltip: 'Table styles',\n          fetch: generateMenuItemsCallback(editor, selections, tableClassList, 'tableclass', function (value) {\n            return editor.execCommand('mceTableToggleClass', false, value);\n          }),\n          onSetup: selectionTargets.onSetupTable\n        });\n      }\n      var tableCellClassList = filterNoneItem(getCellClassList(editor));\n      if (tableCellClassList.length !== 0) {\n        editor.ui.registry.addMenuButton('tablecellclass', {\n          icon: 'table-cell-classes',\n          tooltip: 'Cell styles',\n          fetch: generateMenuItemsCallback(editor, selections, tableCellClassList, 'tablecellclass', function (value) {\n            return editor.execCommand('mceTableCellToggleClass', false, value);\n          }),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n      }\n      editor.ui.registry.addMenuButton('tablecellvalign', {\n        icon: 'vertical-align',\n        tooltip: 'Vertical align',\n        fetch: generateMenuItemsCallback(editor, selections, verticalAlignValues, 'tablecellverticalalign', applyTableCellStyle(editor, 'vertical-align')),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuButton('tablecellborderwidth', {\n        icon: 'border-width',\n        tooltip: 'Border width',\n        fetch: generateMenuItemsCallback(editor, selections, getTableBorderWidths(editor), 'tablecellborderwidth', applyTableCellStyle(editor, 'border-width')),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuButton('tablecellborderstyle', {\n        icon: 'border-style',\n        tooltip: 'Border style',\n        fetch: generateMenuItemsCallback(editor, selections, getTableBorderStyles(editor), 'tablecellborderstyle', applyTableCellStyle(editor, 'border-style')),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addToggleButton('tablecaption', {\n        tooltip: 'Table caption',\n        onAction: cmd('mceTableToggleCaption'),\n        icon: 'table-caption',\n        onSetup: selectionTargets.onSetupTableWithCaption\n      });\n      editor.ui.registry.addMenuButton('tablecellbackgroundcolor', {\n        icon: 'cell-background-color',\n        tooltip: 'Background color',\n        fetch: function (callback) {\n          return callback(buildColorMenu(editor, getTableBackgroundColorMap(editor), 'background-color'));\n        },\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuButton('tablecellbordercolor', {\n        icon: 'cell-border-color',\n        tooltip: 'Border color',\n        fetch: function (callback) {\n          return callback(buildColorMenu(editor, getTableBorderColorMap(editor), 'border-color'));\n        },\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addToggleButton('tablerowheader', {\n        tooltip: 'Row header',\n        icon: 'table-top-header',\n        onAction: changeRowHeader(editor),\n        onSetup: selectionTargets.onSetupTableRowHeaders\n      });\n      editor.ui.registry.addToggleButton('tablecolheader', {\n        tooltip: 'Column header',\n        icon: 'table-left-header',\n        onAction: changeColumnHeader(editor),\n        onSetup: selectionTargets.onSetupTableColumnHeaders\n      });\n    };\n    var addToolbars = function (editor) {\n      var isTable = function (table) {\n        return editor.dom.is(table, 'table') && editor.getBody().contains(table);\n      };\n      var toolbar = getToolbar(editor);\n      if (toolbar.length > 0) {\n        editor.ui.registry.addContextToolbar('table', {\n          predicate: isTable,\n          items: toolbar,\n          scope: 'node',\n          position: 'node'\n        });\n      }\n    };\n\n    var addMenuItems = function (editor, selections, selectionTargets, clipboard) {\n      var cmd = function (command) {\n        return function () {\n          return editor.execCommand(command);\n        };\n      };\n      var insertTableAction = function (data) {\n        editor.execCommand('mceInsertTable', false, {\n          rows: data.numRows,\n          columns: data.numColumns\n        });\n      };\n      var tableProperties = {\n        text: 'Table properties',\n        onSetup: selectionTargets.onSetupTable,\n        onAction: cmd('mceTableProps')\n      };\n      var deleteTable = {\n        text: 'Delete table',\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable,\n        onAction: cmd('mceTableDelete')\n      };\n      editor.ui.registry.addMenuItem('tableinsertrowbefore', {\n        text: 'Insert row before',\n        icon: 'table-insert-row-above',\n        onAction: cmd('mceTableInsertRowBefore'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuItem('tableinsertrowafter', {\n        text: 'Insert row after',\n        icon: 'table-insert-row-after',\n        onAction: cmd('mceTableInsertRowAfter'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuItem('tabledeleterow', {\n        text: 'Delete row',\n        icon: 'table-delete-row',\n        onAction: cmd('mceTableDeleteRow'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuItem('tablerowprops', {\n        text: 'Row properties',\n        icon: 'table-row-properties',\n        onAction: cmd('mceTableRowProps'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuItem('tablecutrow', {\n        text: 'Cut row',\n        icon: 'cut-row',\n        onAction: cmd('mceTableCutRow'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuItem('tablecopyrow', {\n        text: 'Copy row',\n        icon: 'duplicate-row',\n        onAction: cmd('mceTableCopyRow'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuItem('tablepasterowbefore', {\n        text: 'Paste row before',\n        icon: 'paste-row-before',\n        onAction: cmd('mceTablePasteRowBefore'),\n        onSetup: selectionTargets.onSetupPasteable(clipboard.getRows)\n      });\n      editor.ui.registry.addMenuItem('tablepasterowafter', {\n        text: 'Paste row after',\n        icon: 'paste-row-after',\n        onAction: cmd('mceTablePasteRowAfter'),\n        onSetup: selectionTargets.onSetupPasteable(clipboard.getRows)\n      });\n      var row = {\n        type: 'nestedmenuitem',\n        text: 'Row',\n        getSubmenuItems: constant('tableinsertrowbefore tableinsertrowafter tabledeleterow tablerowprops | tablecutrow tablecopyrow tablepasterowbefore tablepasterowafter')\n      };\n      editor.ui.registry.addMenuItem('tableinsertcolumnbefore', {\n        text: 'Insert column before',\n        icon: 'table-insert-column-before',\n        onAction: cmd('mceTableInsertColBefore'),\n        onSetup: selectionTargets.onSetupColumn('onFirst')\n      });\n      editor.ui.registry.addMenuItem('tableinsertcolumnafter', {\n        text: 'Insert column after',\n        icon: 'table-insert-column-after',\n        onAction: cmd('mceTableInsertColAfter'),\n        onSetup: selectionTargets.onSetupColumn('onLast')\n      });\n      editor.ui.registry.addMenuItem('tabledeletecolumn', {\n        text: 'Delete column',\n        icon: 'table-delete-column',\n        onAction: cmd('mceTableDeleteCol'),\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      editor.ui.registry.addMenuItem('tablecutcolumn', {\n        text: 'Cut column',\n        icon: 'cut-column',\n        onAction: cmd('mceTableCutCol'),\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      editor.ui.registry.addMenuItem('tablecopycolumn', {\n        text: 'Copy column',\n        icon: 'duplicate-column',\n        onAction: cmd('mceTableCopyCol'),\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      editor.ui.registry.addMenuItem('tablepastecolumnbefore', {\n        text: 'Paste column before',\n        icon: 'paste-column-before',\n        onAction: cmd('mceTablePasteColBefore'),\n        onSetup: selectionTargets.onSetupPasteableColumn(clipboard.getColumns, 'onFirst')\n      });\n      editor.ui.registry.addMenuItem('tablepastecolumnafter', {\n        text: 'Paste column after',\n        icon: 'paste-column-after',\n        onAction: cmd('mceTablePasteColAfter'),\n        onSetup: selectionTargets.onSetupPasteableColumn(clipboard.getColumns, 'onLast')\n      });\n      var column = {\n        type: 'nestedmenuitem',\n        text: 'Column',\n        getSubmenuItems: constant('tableinsertcolumnbefore tableinsertcolumnafter tabledeletecolumn | tablecutcolumn tablecopycolumn tablepastecolumnbefore tablepastecolumnafter')\n      };\n      editor.ui.registry.addMenuItem('tablecellprops', {\n        text: 'Cell properties',\n        icon: 'table-cell-properties',\n        onAction: cmd('mceTableCellProps'),\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addMenuItem('tablemergecells', {\n        text: 'Merge cells',\n        icon: 'table-merge-cells',\n        onAction: cmd('mceTableMergeCells'),\n        onSetup: selectionTargets.onSetupMergeable\n      });\n      editor.ui.registry.addMenuItem('tablesplitcells', {\n        text: 'Split cell',\n        icon: 'table-split-cells',\n        onAction: cmd('mceTableSplitCells'),\n        onSetup: selectionTargets.onSetupUnmergeable\n      });\n      var cell = {\n        type: 'nestedmenuitem',\n        text: 'Cell',\n        getSubmenuItems: constant('tablecellprops tablemergecells tablesplitcells')\n      };\n      if (hasTableGrid(editor) === false) {\n        editor.ui.registry.addMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          onAction: cmd('mceInsertTable')\n        });\n      } else {\n        editor.ui.registry.addNestedMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          getSubmenuItems: function () {\n            return [{\n                type: 'fancymenuitem',\n                fancytype: 'inserttable',\n                onAction: insertTableAction\n              }];\n          }\n        });\n      }\n      editor.ui.registry.addMenuItem('inserttabledialog', {\n        text: 'Insert table',\n        icon: 'table',\n        onAction: cmd('mceInsertTable')\n      });\n      editor.ui.registry.addMenuItem('tableprops', tableProperties);\n      editor.ui.registry.addMenuItem('deletetable', deleteTable);\n      editor.ui.registry.addNestedMenuItem('row', row);\n      editor.ui.registry.addNestedMenuItem('column', column);\n      editor.ui.registry.addNestedMenuItem('cell', cell);\n      editor.ui.registry.addContextMenu('table', {\n        update: function () {\n          selectionTargets.resetTargets();\n          return selectionTargets.targets().fold(constant(''), function (targets) {\n            if (name(targets.element) === 'caption') {\n              return 'tableprops deletetable';\n            } else {\n              return 'cell row column | advtablesort | tableprops deletetable';\n            }\n          });\n        }\n      });\n      var tableClassList = filterNoneItem(getTableClassList(editor));\n      if (tableClassList.length !== 0) {\n        editor.ui.registry.addNestedMenuItem('tableclass', {\n          icon: 'table-classes',\n          text: 'Table styles',\n          getSubmenuItems: function () {\n            return buildMenuItems(editor, selections, tableClassList, 'tableclass', function (value) {\n              return editor.execCommand('mceTableToggleClass', false, value);\n            });\n          },\n          onSetup: selectionTargets.onSetupTable\n        });\n      }\n      var tableCellClassList = filterNoneItem(getCellClassList(editor));\n      if (tableCellClassList.length !== 0) {\n        editor.ui.registry.addNestedMenuItem('tablecellclass', {\n          icon: 'table-cell-classes',\n          text: 'Cell styles',\n          getSubmenuItems: function () {\n            return buildMenuItems(editor, selections, tableCellClassList, 'tablecellclass', function (value) {\n              return editor.execCommand('mceTableCellToggleClass', false, value);\n            });\n          },\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n      }\n      editor.ui.registry.addNestedMenuItem('tablecellvalign', {\n        icon: 'vertical-align',\n        text: 'Vertical align',\n        getSubmenuItems: function () {\n          return buildMenuItems(editor, selections, verticalAlignValues, 'tablecellverticalalign', applyTableCellStyle(editor, 'vertical-align'));\n        },\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addNestedMenuItem('tablecellborderwidth', {\n        icon: 'border-width',\n        text: 'Border width',\n        getSubmenuItems: function () {\n          return buildMenuItems(editor, selections, getTableBorderWidths(editor), 'tablecellborderwidth', applyTableCellStyle(editor, 'border-width'));\n        },\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addNestedMenuItem('tablecellborderstyle', {\n        icon: 'border-style',\n        text: 'Border style',\n        getSubmenuItems: function () {\n          return buildMenuItems(editor, selections, getTableBorderStyles(editor), 'tablecellborderstyle', applyTableCellStyle(editor, 'border-style'));\n        },\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addToggleMenuItem('tablecaption', {\n        icon: 'table-caption',\n        text: 'Table caption',\n        onAction: cmd('mceTableToggleCaption'),\n        onSetup: selectionTargets.onSetupTableWithCaption\n      });\n      editor.ui.registry.addNestedMenuItem('tablecellbackgroundcolor', {\n        icon: 'cell-background-color',\n        text: 'Background color',\n        getSubmenuItems: function () {\n          return buildColorMenu(editor, getTableBackgroundColorMap(editor), 'background-color');\n        },\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addNestedMenuItem('tablecellbordercolor', {\n        icon: 'cell-border-color',\n        text: 'Border color',\n        getSubmenuItems: function () {\n          return buildColorMenu(editor, getTableBorderColorMap(editor), 'border-color');\n        },\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addToggleMenuItem('tablerowheader', {\n        text: 'Row header',\n        icon: 'table-top-header',\n        onAction: changeRowHeader(editor),\n        onSetup: selectionTargets.onSetupTableRowHeaders\n      });\n      editor.ui.registry.addToggleMenuItem('tablecolheader', {\n        text: 'Column header',\n        icon: 'table-left-header',\n        onAction: changeColumnHeader(editor),\n        onSetup: selectionTargets.onSetupTableColumnHeaders\n      });\n    };\n\n    var Plugin = function (editor) {\n      var selections = Selections(function () {\n        return getBody(editor);\n      }, function () {\n        return getSelectionCell(getSelectionStart(editor), getIsRoot(editor));\n      }, ephemera.selectedSelector);\n      var selectionTargets = getSelectionTargets(editor, selections);\n      var resizeHandler = getResizeHandler(editor);\n      var cellSelection = CellSelection(editor, resizeHandler.lazyResize, selectionTargets);\n      var actions = TableActions(editor, cellSelection, resizeHandler.lazyWire);\n      var clipboard = Clipboard();\n      registerCommands(editor, actions, cellSelection, selections, clipboard);\n      registerQueryCommands(editor, actions, selections);\n      registerEvents(editor, selections, actions);\n      addMenuItems(editor, selections, selectionTargets, clipboard);\n      addButtons(editor, selections, selectionTargets, clipboard);\n      addToolbars(editor);\n      editor.on('PreInit', function () {\n        editor.serializer.addTempAttr(ephemera.firstSelected);\n        editor.serializer.addTempAttr(ephemera.lastSelected);\n        registerFormats(editor);\n      });\n      if (hasTabNavigation(editor)) {\n        editor.on('keydown', function (e) {\n          handle$1(e, editor, cellSelection);\n        });\n      }\n      editor.on('remove', function () {\n        resizeHandler.destroy();\n      });\n      return getApi(editor, clipboard, resizeHandler, selectionTargets);\n    };\n    function Plugin$1 () {\n      global$3.add('table', Plugin);\n    }\n\n    Plugin$1();\n\n}());\n", "// Exports the \"table\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/table')\n//   ES2015:\n//     import 'tinymce/plugins/table'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/table/index.js\");"],
  "mappings": "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",
  "names": []
}
